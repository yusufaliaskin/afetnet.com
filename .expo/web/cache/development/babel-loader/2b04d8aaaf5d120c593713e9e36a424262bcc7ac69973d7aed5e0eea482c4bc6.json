{"ast":null,"code":"\"use strict\";\n\nvar numberAsInset = function numberAsInset(value) {\n  return {\n    left: value,\n    right: value,\n    top: value,\n    bottom: value\n  };\n};\nvar addInsets = function addInsets(a, b) {\n  var _a$left, _b$left, _a$right, _b$right, _a$top, _b$top, _a$bottom, _b$bottom;\n  return {\n    left: ((_a$left = a.left) != null ? _a$left : 0) + ((_b$left = b.left) != null ? _b$left : 0),\n    right: ((_a$right = a.right) != null ? _a$right : 0) + ((_b$right = b.right) != null ? _b$right : 0),\n    top: ((_a$top = a.top) != null ? _a$top : 0) + ((_b$top = b.top) != null ? _b$top : 0),\n    bottom: ((_a$bottom = a.bottom) != null ? _a$bottom : 0) + ((_b$bottom = b.bottom) != null ? _b$bottom : 0)\n  };\n};\nvar touchDataToPressEvent = function touchDataToPressEvent(data, timestamp, targetId) {\n  return {\n    identifier: data.id,\n    locationX: data.x,\n    locationY: data.y,\n    pageX: data.absoluteX,\n    pageY: data.absoluteY,\n    target: targetId,\n    timestamp: timestamp,\n    touches: [],\n    changedTouches: []\n  };\n};\nvar gestureToPressEvent = function gestureToPressEvent(event, timestamp, targetId) {\n  return {\n    identifier: event.handlerTag,\n    locationX: event.x,\n    locationY: event.y,\n    pageX: event.absoluteX,\n    pageY: event.absoluteY,\n    target: targetId,\n    timestamp: timestamp,\n    touches: [],\n    changedTouches: []\n  };\n};\nvar isTouchWithinInset = function isTouchWithinInset(dimensions, inset, touch) {\n  var _touch$locationX, _inset$right, _touch$locationY, _inset$bottom, _touch$locationX2, _inset$left, _touch$locationY2, _inset$top;\n  return ((_touch$locationX = touch == null ? void 0 : touch.locationX) != null ? _touch$locationX : 0) < ((_inset$right = inset.right) != null ? _inset$right : 0) + dimensions.width && ((_touch$locationY = touch == null ? void 0 : touch.locationY) != null ? _touch$locationY : 0) < ((_inset$bottom = inset.bottom) != null ? _inset$bottom : 0) + dimensions.height && ((_touch$locationX2 = touch == null ? void 0 : touch.locationX) != null ? _touch$locationX2 : 0) > -((_inset$left = inset.left) != null ? _inset$left : 0) && ((_touch$locationY2 = touch == null ? void 0 : touch.locationY) != null ? _touch$locationY2 : 0) > -((_inset$top = inset.top) != null ? _inset$top : 0);\n};\nvar gestureToPressableEvent = function gestureToPressableEvent(event) {\n  var timestamp = Date.now();\n  var targetId = 0;\n  var pressEvent = gestureToPressEvent(event, timestamp, targetId);\n  return {\n    nativeEvent: {\n      touches: [pressEvent],\n      changedTouches: [pressEvent],\n      identifier: pressEvent.identifier,\n      locationX: event.x,\n      locationY: event.y,\n      pageX: event.absoluteX,\n      pageY: event.absoluteY,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined\n    }\n  };\n};\nvar gestureTouchToPressableEvent = function gestureTouchToPressableEvent(event) {\n  var _event$allTouches$at$, _event$allTouches$at, _event$allTouches$at$2, _event$allTouches$at2, _event$allTouches$at$3, _event$allTouches$at3, _event$allTouches$at$4, _event$allTouches$at4;\n  var timestamp = Date.now();\n  var targetId = 0;\n  var touchesList = event.allTouches.map(function (touch) {\n    return touchDataToPressEvent(touch, timestamp, targetId);\n  });\n  var changedTouchesList = event.changedTouches.map(function (touch) {\n    return touchDataToPressEvent(touch, timestamp, targetId);\n  });\n  return {\n    nativeEvent: {\n      touches: touchesList,\n      changedTouches: changedTouchesList,\n      identifier: event.handlerTag,\n      locationX: (_event$allTouches$at$ = (_event$allTouches$at = event.allTouches.at(0)) == null ? void 0 : _event$allTouches$at.x) != null ? _event$allTouches$at$ : -1,\n      locationY: (_event$allTouches$at$2 = (_event$allTouches$at2 = event.allTouches.at(0)) == null ? void 0 : _event$allTouches$at2.y) != null ? _event$allTouches$at$2 : -1,\n      pageX: (_event$allTouches$at$3 = (_event$allTouches$at3 = event.allTouches.at(0)) == null ? void 0 : _event$allTouches$at3.absoluteX) != null ? _event$allTouches$at$3 : -1,\n      pageY: (_event$allTouches$at$4 = (_event$allTouches$at4 = event.allTouches.at(0)) == null ? void 0 : _event$allTouches$at4.absoluteY) != null ? _event$allTouches$at$4 : -1,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined\n    }\n  };\n};\nexport { numberAsInset, addInsets, isTouchWithinInset, gestureToPressableEvent, gestureTouchToPressableEvent };","map":{"version":3,"names":["numberAsInset","value","left","right","top","bottom","addInsets","a","b","_a$left","_b$left","_a$right","_b$right","_a$top","_b$top","_a$bottom","_b$bottom","touchDataToPressEvent","data","timestamp","targetId","identifier","id","locationX","x","locationY","y","pageX","absoluteX","pageY","absoluteY","target","touches","changedTouches","gestureToPressEvent","event","handlerTag","isTouchWithinInset","dimensions","inset","touch","_touch$locationX","_inset$right","_touch$locationY","_inset$bottom","_touch$locationX2","_inset$left","_touch$locationY2","_inset$top","width","height","gestureToPressableEvent","Date","now","pressEvent","nativeEvent","force","undefined","gestureTouchToPressableEvent","_event$allTouches$at$","_event$allTouches$at","_event$allTouches$at$2","_event$allTouches$at2","_event$allTouches$at$3","_event$allTouches$at3","_event$allTouches$at$4","_event$allTouches$at4","touchesList","allTouches","map","changedTouchesList","at"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\components\\Pressable\\utils.ts"],"sourcesContent":["import { Insets } from 'react-native';\nimport {\n  HoverGestureHandlerEventPayload,\n  LongPressGestureHandlerEventPayload,\n} from '../../handlers/GestureHandlerEventPayload';\nimport {\n  TouchData,\n  GestureStateChangeEvent,\n  GestureTouchEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport {\n  PressableDimensions,\n  InnerPressableEvent,\n  PressableEvent,\n} from './PressableProps';\n\nconst numberAsInset = (value: number): Insets => ({\n  left: value,\n  right: value,\n  top: value,\n  bottom: value,\n});\n\nconst addInsets = (a: Insets, b: Insets): Insets => ({\n  left: (a.left ?? 0) + (b.left ?? 0),\n  right: (a.right ?? 0) + (b.right ?? 0),\n  top: (a.top ?? 0) + (b.top ?? 0),\n  bottom: (a.bottom ?? 0) + (b.bottom ?? 0),\n});\n\nconst touchDataToPressEvent = (\n  data: TouchData,\n  timestamp: number,\n  targetId: number\n): InnerPressableEvent => ({\n  identifier: data.id,\n  locationX: data.x,\n  locationY: data.y,\n  pageX: data.absoluteX,\n  pageY: data.absoluteY,\n  target: targetId,\n  timestamp: timestamp,\n  touches: [], // Always empty - legacy compatibility\n  changedTouches: [], // Always empty - legacy compatibility\n});\n\nconst gestureToPressEvent = (\n  event: GestureStateChangeEvent<\n    HoverGestureHandlerEventPayload | LongPressGestureHandlerEventPayload\n  >,\n  timestamp: number,\n  targetId: number\n): InnerPressableEvent => ({\n  identifier: event.handlerTag,\n  locationX: event.x,\n  locationY: event.y,\n  pageX: event.absoluteX,\n  pageY: event.absoluteY,\n  target: targetId,\n  timestamp: timestamp,\n  touches: [], // Always empty - legacy compatibility\n  changedTouches: [], // Always empty - legacy compatibility\n});\n\nconst isTouchWithinInset = (\n  dimensions: PressableDimensions,\n  inset: Insets,\n  touch?: InnerPressableEvent\n) =>\n  (touch?.locationX ?? 0) < (inset.right ?? 0) + dimensions.width &&\n  (touch?.locationY ?? 0) < (inset.bottom ?? 0) + dimensions.height &&\n  (touch?.locationX ?? 0) > -(inset.left ?? 0) &&\n  (touch?.locationY ?? 0) > -(inset.top ?? 0);\n\nconst gestureToPressableEvent = (\n  event: GestureStateChangeEvent<\n    HoverGestureHandlerEventPayload | LongPressGestureHandlerEventPayload\n  >\n): PressableEvent => {\n  const timestamp = Date.now();\n\n  // As far as I can see, there isn't a conventional way of getting targetId with the data we get\n  const targetId = 0;\n\n  const pressEvent = gestureToPressEvent(event, timestamp, targetId);\n\n  return {\n    nativeEvent: {\n      touches: [pressEvent],\n      changedTouches: [pressEvent],\n      identifier: pressEvent.identifier,\n      locationX: event.x,\n      locationY: event.y,\n      pageX: event.absoluteX,\n      pageY: event.absoluteY,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined,\n    },\n  };\n};\n\nconst gestureTouchToPressableEvent = (\n  event: GestureTouchEvent\n): PressableEvent => {\n  const timestamp = Date.now();\n\n  // As far as I can see, there isn't a conventional way of getting targetId with the data we get\n  const targetId = 0;\n\n  const touchesList = event.allTouches.map((touch: TouchData) =>\n    touchDataToPressEvent(touch, timestamp, targetId)\n  );\n  const changedTouchesList = event.changedTouches.map((touch: TouchData) =>\n    touchDataToPressEvent(touch, timestamp, targetId)\n  );\n\n  return {\n    nativeEvent: {\n      touches: touchesList,\n      changedTouches: changedTouchesList,\n      identifier: event.handlerTag,\n      locationX: event.allTouches.at(0)?.x ?? -1,\n      locationY: event.allTouches.at(0)?.y ?? -1,\n      pageX: event.allTouches.at(0)?.absoluteX ?? -1,\n      pageY: event.allTouches.at(0)?.absoluteY ?? -1,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined,\n    },\n  };\n};\n\nexport {\n  numberAsInset,\n  addInsets,\n  isTouchWithinInset,\n  gestureToPressableEvent,\n  gestureTouchToPressableEvent,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}