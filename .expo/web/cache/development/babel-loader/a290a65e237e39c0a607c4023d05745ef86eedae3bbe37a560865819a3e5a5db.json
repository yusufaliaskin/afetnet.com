{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nimport { ContinousBaseGesture } from \"./gesture\";\nfunction changeEventCalculator(current, _previous) {\n  'worklet';\n\n  return current;\n}\nexport var ManualGesture = function (_ContinousBaseGesture) {\n  function ManualGesture() {\n    var _this;\n    _classCallCheck(this, ManualGesture);\n    _this = _callSuper(this, ManualGesture);\n    _this.handlerName = 'ManualGestureHandler';\n    return _this;\n  }\n  _inherits(ManualGesture, _ContinousBaseGesture);\n  return _createClass(ManualGesture, [{\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _superPropGet(ManualGesture, \"onChange\", this, 3)([callback]);\n    }\n  }]);\n}(ContinousBaseGesture);","map":{"version":3,"names":["ContinousBaseGesture","changeEventCalculator","current","_previous","ManualGesture","_ContinousBaseGesture","_this","_classCallCheck","_callSuper","handlerName","_inherits","_createClass","key","value","onChange","callback","handlers","_superPropGet"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\handlers\\gestures\\manualGesture.ts"],"sourcesContent":["import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<Record<string, never>>,\n  _previous?: GestureUpdateEvent<Record<string, never>>\n) {\n  'worklet';\n  return current;\n}\n\nexport class ManualGesture extends ContinousBaseGesture<\n  Record<string, never>,\n  Record<string, never>\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'ManualGestureHandler';\n  }\n\n  onChange(\n    callback: (event: GestureUpdateEvent<Record<string, never>>) => void\n  ) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;\n"],"mappings":";;;;;;;;;;;AACA,SAASA,oBAAoB;AAE7B,SAASC,qBAAqBA,CAC5BC,OAAkD,EAClDC,SAAqD,EACrD;EACA,SAAS;;EACT,OAAOD,OAAO;AAChB;AAEA,WAAaE,aAAa,aAAAC,qBAAA;EAIxB,SAAAD,cAAA,EAAc;IAAA,IAAAE,KAAA;IAAAC,eAAA,OAAAH,aAAA;IACZE,KAAA,GAAAE,UAAA,OAAAJ,aAAA;IAEAE,KAAA,CAAKG,WAAW,GAAG,sBAAsB;IAAA,OAAAH,KAAA;EAC3C;EAAAI,SAAA,CAAAN,aAAA,EAAAC,qBAAA;EAAA,OAAAM,YAAA,CAAAP,aAAA;IAAAQ,GAAA;IAAAC,KAAA,EAEA,SAAAC,QAAQA,CACNC,QAAoE,EACpE;MAEA,IAAI,CAACC,QAAQ,CAACf,qBAAqB,GAAGA,qBAAqB;MAC3D,OAAAgB,aAAA,CAAAb,aAAA,wBAAsBW,QAAQ;IAChC;EAAA;AAAA,EAhBiCf,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}