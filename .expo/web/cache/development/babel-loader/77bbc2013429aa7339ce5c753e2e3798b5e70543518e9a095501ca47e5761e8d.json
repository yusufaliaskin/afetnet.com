{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"delayLongPress\", \"extraButtonProps\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport GenericTouchable from \"./GenericTouchable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TouchableWithoutFeedback = React.forwardRef(function (_ref, ref) {\n  var _ref$delayLongPress = _ref.delayLongPress,\n    delayLongPress = _ref$delayLongPress === void 0 ? 600 : _ref$delayLongPress,\n    _ref$extraButtonProps = _ref.extraButtonProps,\n    extraButtonProps = _ref$extraButtonProps === void 0 ? {\n      rippleColor: 'transparent',\n      exclusive: true\n    } : _ref$extraButtonProps,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return _jsx(GenericTouchable, _objectSpread({\n    ref: ref,\n    delayLongPress: delayLongPress,\n    extraButtonProps: extraButtonProps\n  }, rest));\n});\nexport default TouchableWithoutFeedback;","map":{"version":3,"names":["React","GenericTouchable","jsx","_jsx","TouchableWithoutFeedback","forwardRef","_ref","ref","_ref$delayLongPress","delayLongPress","_ref$extraButtonProps","extraButtonProps","rippleColor","exclusive","rest","_objectWithoutProperties","_excluded","_objectSpread"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\components\\touchables\\TouchableWithoutFeedback.tsx"],"sourcesContent":["import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport GenericTouchable from './GenericTouchable';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\n\n/**\n * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nexport type TouchableWithoutFeedbackProps = GenericTouchableProps;\n\n/**\n * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nconst TouchableWithoutFeedback = React.forwardRef<\n  GenericTouchable,\n  PropsWithChildren<TouchableWithoutFeedbackProps>\n>(\n  (\n    {\n      delayLongPress = 600,\n      extraButtonProps = {\n        rippleColor: 'transparent',\n        exclusive: true,\n      },\n      ...rest\n    },\n\n    ref\n  ) => (\n    <GenericTouchable\n      ref={ref}\n      delayLongPress={delayLongPress}\n      extraButtonProps={extraButtonProps}\n      {...rest}\n    />\n  )\n);\n\nexport default TouchableWithoutFeedback;\n"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,gBAAgB;AAGvB,SAAAC,GAAA,IAAAC,IAAA;AAQA,IAAMC,wBAAwB,GAAGJ,KAAK,CAACK,UAAU,CAI/C,UAAAC,IAAA,EAUEC,GAAG;EAAA,IAAAC,mBAAA,GAAAF,IAAA,CARDG,cAAc;IAAdA,cAAc,GAAAD,mBAAA,cAAG,GAAG,GAAAA,mBAAA;IAAAE,qBAAA,GAAAJ,IAAA,CACpBK,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG;MACjBE,WAAW,EAAE,aAAa;MAC1BC,SAAS,EAAE;IACb,CAAC,GAAAH,qBAAA;IACEI,IAAA,GAAAC,wBAAA,CAAAT,IAAA,EAAAU,SAAA;EAAA,OAKLb,IAAA,CAACF,gBAAgB,EAAAgB,aAAA;IACfV,GAAG,EAAEA,GAAI;IACTE,cAAc,EAAEA,cAAe;IAC/BE,gBAAgB,EAAEA;EAAiB,GAC/BG,IAAA,CACL,CAEL;AAAA,EAAC;AAED,eAAeV,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}