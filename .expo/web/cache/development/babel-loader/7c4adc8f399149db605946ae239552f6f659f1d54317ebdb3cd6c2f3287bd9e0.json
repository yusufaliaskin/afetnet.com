{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { StatusBar } from 'expo-status-bar';\nimport { ThemeProvider } from \"./src/contexts/ThemeContext\";\nimport { LanguageProvider } from \"./src/contexts/LanguageContext\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport RasathaneScreen from \"./src/screens/RasathaneScreen\";\nimport MapScreen from \"./src/screens/MapScreen\";\nimport ProfileScreen from \"./src/screens/ProfileScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { useTheme } from \"./src/contexts/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction AppNavigator() {\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme,\n    isDarkMode = _useTheme.isDarkMode;\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {\n      style: isDarkMode ? \"light\" : \"dark\"\n    }), _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Ana Sayfa') {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (route.name === 'Rasathane') {\n              iconName = focused ? 'radio' : 'radio-outline';\n            } else if (route.name === 'Harita') {\n              iconName = focused ? 'map' : 'map-outline';\n            } else if (route.name === 'Profil') {\n              iconName = focused ? 'person' : 'person-outline';\n            } else if (route.name === 'Ayarlar') {\n              iconName = focused ? 'settings' : 'settings-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: '#FF6B35',\n          tabBarInactiveTintColor: theme.colors.secondaryText,\n          tabBarStyle: {\n            backgroundColor: theme.colors.cardBackground,\n            borderTopWidth: 1,\n            borderTopColor: theme.colors.border,\n            height: 60,\n            paddingBottom: 8,\n            paddingTop: 8\n          },\n          tabBarLabelStyle: {\n            fontSize: 12,\n            fontWeight: '500'\n          },\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Ana Sayfa\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Rasathane\",\n        component: RasathaneScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Harita\",\n        component: MapScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Profil\",\n        component: ProfileScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Ayarlar\",\n        component: SettingsScreen\n      })]\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(ThemeProvider, {\n    children: _jsx(LanguageProvider, {\n      children: _jsx(AppNavigator, {})\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","StatusBar","ThemeProvider","LanguageProvider","HomeScreen","RasathaneScreen","MapScreen","ProfileScreen","SettingsScreen","useTheme","jsx","_jsx","jsxs","_jsxs","Tab","AppNavigator","_useTheme","theme","isDarkMode","children","style","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","colors","secondaryText","tabBarStyle","backgroundColor","cardBackground","borderTopWidth","borderTopColor","border","height","paddingBottom","paddingTop","tabBarLabelStyle","fontSize","fontWeight","headerShown","Screen","component","App"],"sources":["C:/Users/Yusuf Ali Aşkın/Downloads/Desktop/proje_afetnet/App.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { StatusBar } from 'expo-status-bar';\n\nimport { ThemeProvider } from './src/contexts/ThemeContext';\nimport { LanguageProvider } from './src/contexts/LanguageContext';\nimport HomeScreen from './src/screens/HomeScreen';\nimport RasathaneScreen from './src/screens/RasathaneScreen';\nimport MapScreen from './src/screens/MapScreen';\nimport ProfileScreen from './src/screens/ProfileScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\n\nimport { useTheme } from './src/contexts/ThemeContext';\n\nconst Tab = createBottomTabNavigator();\n\nfunction AppNavigator() {\n  const { theme, isDarkMode } = useTheme();\n\n  return (\n    <NavigationContainer>\n      <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Ana Sayfa') {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (route.name === 'Rasathane') {\n              iconName = focused ? 'radio' : 'radio-outline';\n            } else if (route.name === 'Harita') {\n              iconName = focused ? 'map' : 'map-outline';\n            } else if (route.name === 'Profil') {\n              iconName = focused ? 'person' : 'person-outline';\n            } else if (route.name === 'Ayarlar') {\n              iconName = focused ? 'settings' : 'settings-outline';\n            }\n\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: '#FF6B35',\n          tabBarInactiveTintColor: theme.colors.secondaryText,\n          tabBarStyle: {\n            backgroundColor: theme.colors.cardBackground,\n            borderTopWidth: 1,\n            borderTopColor: theme.colors.border,\n            height: 60,\n            paddingBottom: 8,\n            paddingTop: 8,\n          },\n          tabBarLabelStyle: {\n            fontSize: 12,\n            fontWeight: '500',\n          },\n          headerShown: false,\n        })}\n      >\n        <Tab.Screen name=\"Ana Sayfa\" component={HomeScreen} />\n        <Tab.Screen name=\"Rasathane\" component={RasathaneScreen} />\n        <Tab.Screen name=\"Harita\" component={MapScreen} />\n        <Tab.Screen name=\"Profil\" component={ProfileScreen} />\n        <Tab.Screen name=\"Ayarlar\" component={SettingsScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <LanguageProvider>\n        <AppNavigator />\n      </LanguageProvider>\n    </ThemeProvider>\n  );\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,SAAS,QAAQ,iBAAiB;AAE3C,SAASC,aAAa;AACtB,SAASC,gBAAgB;AACzB,OAAOC,UAAU;AACjB,OAAOC,eAAe;AACtB,OAAOC,SAAS;AAChB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AAErB,SAASC,QAAQ;AAAsC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEvD,IAAMC,GAAG,GAAGf,wBAAwB,CAAC,CAAC;AAEtC,SAASgB,YAAYA,CAAA,EAAG;EACtB,IAAAC,SAAA,GAA8BP,QAAQ,CAAC,CAAC;IAAhCQ,KAAK,GAAAD,SAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,SAAA,CAAVE,UAAU;EAEzB,OACEL,KAAA,CAACf,mBAAmB;IAAAqB,QAAA,GAClBR,IAAA,CAACV,SAAS;MAACmB,KAAK,EAAEF,UAAU,GAAG,OAAO,GAAG;IAAO,CAAE,CAAC,EACnDL,KAAA,CAACC,GAAG,CAACO,SAAS;MACZC,aAAa,EAAE,SAAfA,aAAaA,CAAAC,IAAA;QAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA,EAAgC;YAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;cAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;YACjC,IAAIC,QAAQ;YAEZ,IAAIN,KAAK,CAACO,IAAI,KAAK,WAAW,EAAE;cAC9BD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;YAC9C,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,WAAW,EAAE;cACrCD,QAAQ,GAAGH,OAAO,GAAG,OAAO,GAAG,eAAe;YAChD,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,QAAQ,EAAE;cAClCD,QAAQ,GAAGH,OAAO,GAAG,KAAK,GAAG,aAAa;YAC5C,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,QAAQ,EAAE;cAClCD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;YAClD,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,SAAS,EAAE;cACnCD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;YACtD;YAEA,OAAOhB,IAAA,CAACX,QAAQ;cAAC+B,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC/D,CAAC;UACDI,qBAAqB,EAAE,SAAS;UAChCC,uBAAuB,EAAEhB,KAAK,CAACiB,MAAM,CAACC,aAAa;UACnDC,WAAW,EAAE;YACXC,eAAe,EAAEpB,KAAK,CAACiB,MAAM,CAACI,cAAc;YAC5CC,cAAc,EAAE,CAAC;YACjBC,cAAc,EAAEvB,KAAK,CAACiB,MAAM,CAACO,MAAM;YACnCC,MAAM,EAAE,EAAE;YACVC,aAAa,EAAE,CAAC;YAChBC,UAAU,EAAE;UACd,CAAC;UACDC,gBAAgB,EAAE;YAChBC,QAAQ,EAAE,EAAE;YACZC,UAAU,EAAE;UACd,CAAC;UACDC,WAAW,EAAE;QACf,CAAC;MAAA,CAAE;MAAA7B,QAAA,GAEHR,IAAA,CAACG,GAAG,CAACmC,MAAM;QAAClB,IAAI,EAAC,WAAW;QAACmB,SAAS,EAAE9C;MAAW,CAAE,CAAC,EACtDO,IAAA,CAACG,GAAG,CAACmC,MAAM;QAAClB,IAAI,EAAC,WAAW;QAACmB,SAAS,EAAE7C;MAAgB,CAAE,CAAC,EAC3DM,IAAA,CAACG,GAAG,CAACmC,MAAM;QAAClB,IAAI,EAAC,QAAQ;QAACmB,SAAS,EAAE5C;MAAU,CAAE,CAAC,EAClDK,IAAA,CAACG,GAAG,CAACmC,MAAM;QAAClB,IAAI,EAAC,QAAQ;QAACmB,SAAS,EAAE3C;MAAc,CAAE,CAAC,EACtDI,IAAA,CAACG,GAAG,CAACmC,MAAM;QAAClB,IAAI,EAAC,SAAS;QAACmB,SAAS,EAAE1C;MAAe,CAAE,CAAC;IAAA,CAC3C,CAAC;EAAA,CACG,CAAC;AAE1B;AAEA,eAAe,SAAS2C,GAAGA,CAAA,EAAG;EAC5B,OACExC,IAAA,CAACT,aAAa;IAAAiB,QAAA,EACZR,IAAA,CAACR,gBAAgB;MAAAgB,QAAA,EACfR,IAAA,CAACI,YAAY,IAAE;IAAC,CACA;EAAC,CACN,CAAC;AAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}