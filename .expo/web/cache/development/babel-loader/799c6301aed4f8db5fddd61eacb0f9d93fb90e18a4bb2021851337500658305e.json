{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar CircularBuffer = function () {\n  function CircularBuffer(size) {\n    _classCallCheck(this, CircularBuffer);\n    this.capacity = size;\n    this.buffer = new Array(size);\n    this.index = 0;\n    this._size = 0;\n  }\n  return _createClass(CircularBuffer, [{\n    key: \"push\",\n    value: function push(element) {\n      this.buffer[this.index] = element;\n      this.index = (this.index + 1) % this.capacity;\n      this._size = Math.min(this.size + 1, this.capacity);\n    }\n  }, {\n    key: \"get\",\n    value: function get(at) {\n      if (this._size === this.capacity) {\n        var index = (this.index + at) % this.capacity;\n        if (index < 0) {\n          index += this.capacity;\n        }\n        return this.buffer[index];\n      } else {\n        return this.buffer[at];\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.buffer = new Array(this.capacity);\n      this.index = 0;\n      this._size = 0;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._size;\n    }\n  }]);\n}();\nexport { CircularBuffer as default };","map":{"version":3,"names":["CircularBuffer","size","_classCallCheck","capacity","buffer","Array","index","_size","_createClass","key","value","push","element","Math","min","get","at","clear","default"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web\\tools\\CircularBuffer.ts"],"sourcesContent":["export default class CircularBuffer<T> {\n  private capacity: number;\n  private buffer: T[];\n  private index: number;\n  private _size: number;\n\n  constructor(size: number) {\n    this.capacity = size;\n    this.buffer = new Array<T>(size);\n    this.index = 0;\n    this._size = 0;\n  }\n\n  public push(element: T): void {\n    this.buffer[this.index] = element;\n    this.index = (this.index + 1) % this.capacity;\n    this._size = Math.min(this.size + 1, this.capacity);\n  }\n\n  public get(at: number): T {\n    if (this._size === this.capacity) {\n      let index = (this.index + at) % this.capacity;\n      if (index < 0) {\n        index += this.capacity;\n      }\n\n      return this.buffer[index];\n    } else {\n      return this.buffer[at];\n    }\n  }\n\n  public clear(): void {\n    this.buffer = new Array<T>(this.capacity);\n    this.index = 0;\n    this._size = 0;\n  }\n\n  public get size() {\n    return this._size;\n  }\n}\n"],"mappings":";;;;IAAqBA,cAAc;EAMjC,SAAAA,eAAYC,IAAY,EAAE;IAAAC,eAAA,OAAAF,cAAA;IACxB,IAAI,CAACG,QAAQ,GAAGF,IAAI;IACpB,IAAI,CAACG,MAAM,GAAG,IAAIC,KAAK,CAAIJ,IAAI,CAAC;IAChC,IAAI,CAACK,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,KAAK,GAAG,CAAC;EAChB;EAAA,OAAAC,YAAA,CAAAR,cAAA;IAAAS,GAAA;IAAAC,KAAA,EAEO,SAAAC,IAAIA,CAACC,OAAU,EAAQ;MAC5B,IAAI,CAACR,MAAM,CAAC,IAAI,CAACE,KAAK,CAAC,GAAGM,OAAO;MACjC,IAAI,CAACN,KAAK,GAAG,CAAC,IAAI,CAACA,KAAK,GAAG,CAAC,IAAI,IAAI,CAACH,QAAQ;MAC7C,IAAI,CAACI,KAAK,GAAGM,IAAI,CAACC,GAAG,CAAC,IAAI,CAACb,IAAI,GAAG,CAAC,EAAE,IAAI,CAACE,QAAQ,CAAC;IACrD;EAAA;IAAAM,GAAA;IAAAC,KAAA,EAEO,SAAAK,GAAGA,CAACC,EAAU,EAAK;MACxB,IAAI,IAAI,CAACT,KAAK,KAAK,IAAI,CAACJ,QAAQ,EAAE;QAChC,IAAIG,KAAK,GAAG,CAAC,IAAI,CAACA,KAAK,GAAGU,EAAE,IAAI,IAAI,CAACb,QAAQ;QAC7C,IAAIG,KAAK,GAAG,CAAC,EAAE;UACbA,KAAK,IAAI,IAAI,CAACH,QAAQ;QACxB;QAEA,OAAO,IAAI,CAACC,MAAM,CAACE,KAAK,CAAC;MAC3B,CAAC,MAAM;QACL,OAAO,IAAI,CAACF,MAAM,CAACY,EAAE,CAAC;MACxB;IACF;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAEO,SAAAO,KAAKA,CAAA,EAAS;MACnB,IAAI,CAACb,MAAM,GAAG,IAAIC,KAAK,CAAI,IAAI,CAACF,QAAQ,CAAC;MACzC,IAAI,CAACG,KAAK,GAAG,CAAC;MACd,IAAI,CAACC,KAAK,GAAG,CAAC;IAChB;EAAA;IAAAE,GAAA;IAAAM,GAAA,EAEA,SAAAA,IAAA,EAAkB;MAChB,OAAO,IAAI,CAACR,KAAK;IACnB;EAAA;AAAA;AAAA,SAxCmBP,cAAc,IAAAkB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}