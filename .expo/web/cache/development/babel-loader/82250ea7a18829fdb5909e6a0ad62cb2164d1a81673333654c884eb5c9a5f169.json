{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from \"./GestureHandlerRootView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function gestureHandlerRootHOC(Component, containerStyles) {\n  function Wrapper(props) {\n    return _jsx(GestureHandlerRootView, {\n      style: [styles.container, containerStyles],\n      children: _jsx(Component, _objectSpread({}, props))\n    });\n  }\n  Wrapper.displayName = `gestureHandlerRootHOC(${Component.displayName || Component.name})`;\n  hoistNonReactStatics(Wrapper, Component);\n  return Wrapper;\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","hoistNonReactStatics","GestureHandlerRootView","jsx","_jsx","gestureHandlerRootHOC","Component","containerStyles","Wrapper","props","style","styles","container","children","_objectSpread","displayName","name","create","flex"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\components\\gestureHandlerRootHOC.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\n\n/**\n * @deprecated `gestureHandlerRootHOC` is deprecated and will be removed in the future version of Gesture Handler.\n * Use `GestureHandlerRootView` directly instead.\n */\nexport default function gestureHandlerRootHOC<P extends object>(\n  Component: React.ComponentType<P>,\n  containerStyles?: StyleProp<ViewStyle>\n): React.ComponentType<P> {\n  function Wrapper(props: P) {\n    return (\n      <GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props} />\n      </GestureHandlerRootView>\n    );\n  }\n\n  Wrapper.displayName = `gestureHandlerRootHOC(${\n    Component.displayName || Component.name\n  })`;\n\n  // @ts-ignore - hoistNonReactStatics uses old version of @types/react\n  hoistNonReactStatics(Wrapper, Component);\n\n  return Wrapper;\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAE9B,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,sBAAsB;AAE7B,SAAAC,GAAA,IAAAC,IAAA;AAIA,eAAe,SAASC,qBAAqBA,CAC3CC,SAAiC,EACjCC,eAAsC,EACd;EACxB,SAASC,OAAOA,CAACC,KAAQ,EAAE;IACzB,OACEL,IAAA,CAACF,sBAAsB;MAACQ,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAEL,eAAe,CAAE;MAAAM,QAAA,EACjET,IAAA,CAACE,SAAS,EAAAQ,aAAA,KAAKL,KAAA,CAAQ;IAAC,CACF,CAAC;EAE7B;EAEAD,OAAO,CAACO,WAAW,GAAG,yBACpBT,SAAS,CAACS,WAAW,IAAIT,SAAS,CAACU,IAAI,GACtC;EAGHf,oBAAoB,CAACO,OAAO,EAAEF,SAAS,CAAC;EAExC,OAAOE,OAAO;AAChB;AAEA,IAAMG,MAAM,GAAGX,UAAU,CAACiB,MAAM,CAAC;EAC/BL,SAAS,EAAE;IAAEM,IAAI,EAAE;EAAE;AACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}