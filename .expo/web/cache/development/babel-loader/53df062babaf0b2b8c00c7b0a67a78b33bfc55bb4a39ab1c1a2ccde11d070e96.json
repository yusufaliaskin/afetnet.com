{"ast":null,"code":"import NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { URL as whatwgUrl } from 'whatwg-url-without-unicode';\nvar BLOB_URL_PREFIX = null;\nvar BlobModule = NativeModules.BlobModule;\nif (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n  if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += `//${BlobModule.BLOB_URI_HOST}/`;\n  }\n}\nwhatwgUrl.createObjectURL = function createObjectURL(blob) {\n  if (BLOB_URL_PREFIX === null) {\n    throw new Error('Cannot create URL for blob!');\n  }\n  return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${blob.data.offset}&size=${blob.size}`;\n};\nwhatwgUrl.revokeObjectURL = function revokeObjectURL(url) {};\nexport var URL = whatwgUrl;","map":{"version":3,"names":["URL","whatwgUrl","BLOB_URL_PREFIX","BlobModule","NativeModules","BLOB_URI_SCHEME","BLOB_URI_HOST","createObjectURL","blob","Error","data","blobId","offset","size","revokeObjectURL","url"],"sources":["C:/Users/Yusuf Ali Aşkın/Desktop/proje_afetnet/node_modules/react-native-url-polyfill/js/URL.js"],"sourcesContent":["import {NativeModules} from 'react-native';\nimport {URL as whatwgUrl} from 'whatwg-url-without-unicode';\n\nlet BLOB_URL_PREFIX = null;\n\nconst {BlobModule} = NativeModules;\n\nif (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n  if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += `//${BlobModule.BLOB_URI_HOST}/`;\n  }\n}\n\n/**\n * To allow Blobs be accessed via `content://` URIs,\n * you need to register `BlobProvider` as a ContentProvider in your app's `AndroidManifest.xml`:\n *\n * ```xml\n * <manifest>\n *   <application>\n *     <provider\n *       android:name=\"com.facebook.react.modules.blob.BlobProvider\"\n *       android:authorities=\"@string/blob_provider_authority\"\n *       android:exported=\"false\"\n *     />\n *   </application>\n * </manifest>\n * ```\n * And then define the `blob_provider_authority` string in `res/values/strings.xml`.\n * Use a dotted name that's entirely unique to your app:\n *\n * ```xml\n * <resources>\n *   <string name=\"blob_provider_authority\">your.app.package.blobs</string>\n * </resources>\n * ```\n */\n\nwhatwgUrl.createObjectURL = function createObjectURL(blob) {\n  if (BLOB_URL_PREFIX === null) {\n    throw new Error('Cannot create URL for blob!');\n  }\n  return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${blob.data.offset}&size=${blob.size}`;\n};\n\nwhatwgUrl.revokeObjectURL = function revokeObjectURL(url) {\n  // Do nothing.\n};\n\nexport const URL = whatwgUrl;\n"],"mappings":";AACA,SAAQA,GAAG,IAAIC,SAAS,QAAO,4BAA4B;AAE3D,IAAIC,eAAe,GAAG,IAAI;AAE1B,IAAOC,UAAU,GAAIC,aAAa,CAA3BD,UAAU;AAEjB,IAAIA,UAAU,IAAI,OAAOA,UAAU,CAACE,eAAe,KAAK,QAAQ,EAAE;EAChEH,eAAe,GAAGC,UAAU,CAACE,eAAe,GAAG,GAAG;EAClD,IAAI,OAAOF,UAAU,CAACG,aAAa,KAAK,QAAQ,EAAE;IAChDJ,eAAe,IAAI,KAAKC,UAAU,CAACG,aAAa,GAAG;EACrD;AACF;AA2BAL,SAAS,CAACM,eAAe,GAAG,SAASA,eAAeA,CAACC,IAAI,EAAE;EACzD,IAAIN,eAAe,KAAK,IAAI,EAAE;IAC5B,MAAM,IAAIO,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAO,GAAGP,eAAe,GAAGM,IAAI,CAACE,IAAI,CAACC,MAAM,WAAWH,IAAI,CAACE,IAAI,CAACE,MAAM,SAASJ,IAAI,CAACK,IAAI,EAAE;AAC7F,CAAC;AAEDZ,SAAS,CAACa,eAAe,GAAG,SAASA,eAAeA,CAACC,GAAG,EAAE,CAE1D,CAAC;AAED,OAAO,IAAMf,GAAG,GAAGC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}