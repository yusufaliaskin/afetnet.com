{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNotification } from \"../contexts/NotificationContext\";\nimport NotificationBox from \"./NotificationBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NotificationContainer = function NotificationContainer() {\n  var _useNotification = useNotification(),\n    notifications = _useNotification.notifications,\n    removeNotification = _useNotification.removeNotification,\n    markAsRead = _useNotification.markAsRead;\n  var visibleNotifications = notifications.slice(0, 3);\n  var handleNotificationPress = function handleNotificationPress(notification) {\n    markAsRead(notification.id);\n    if (notification.onPress) {\n      notification.onPress(notification);\n    }\n  };\n  var handleNotificationClose = function handleNotificationClose(notificationId) {\n    removeNotification(notificationId);\n  };\n  if (visibleNotifications.length === 0) {\n    return null;\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: visibleNotifications.map(function (notification, index) {\n      return _jsx(View, {\n        style: [styles.notificationWrapper, {\n          zIndex: 1000 - index\n        }],\n        children: _jsx(NotificationBox, {\n          notification: notification,\n          onPress: function onPress() {\n            return handleNotificationPress(notification);\n          },\n          onClose: function onClose() {\n            return handleNotificationClose(notification.id);\n          }\n        })\n      }, notification.id);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n    pointerEvents: 'box-none'\n  },\n  notificationWrapper: {\n    position: 'relative',\n    marginBottom: 8\n  }\n});\nexport default NotificationContainer;","map":{"version":3,"names":["React","View","StyleSheet","useNotification","NotificationBox","jsx","_jsx","NotificationContainer","_useNotification","notifications","removeNotification","markAsRead","visibleNotifications","slice","handleNotificationPress","notification","id","onPress","handleNotificationClose","notificationId","length","style","styles","container","children","map","index","notificationWrapper","zIndex","onClose","create","position","top","left","right","pointerEvents","marginBottom"],"sources":["C:/Users/Yusuf Ali Aşkın/Desktop/proje_afetnet/src/components/NotificationContainer.js"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useNotification } from '../contexts/NotificationContext';\nimport NotificationBox from './NotificationBox';\n\nconst NotificationContainer = () => {\n  const { notifications, removeNotification, markAsRead } = useNotification();\n\n  // Sadece son 3 bildirimi göster (performans için)\n  const visibleNotifications = notifications.slice(0, 3);\n\n  const handleNotificationPress = (notification) => {\n    // Bildirimi okundu olarak işaretle\n    markAsRead(notification.id);\n    \n    // Bildirim türüne göre özel işlemler yapılabilir\n    if (notification.onPress) {\n      notification.onPress(notification);\n    }\n  };\n\n  const handleNotificationClose = (notificationId) => {\n    removeNotification(notificationId);\n  };\n\n  if (visibleNotifications.length === 0) {\n    return null;\n  }\n\n  return (\n    <View style={styles.container}>\n      {visibleNotifications.map((notification, index) => (\n        <View\n          key={notification.id}\n          style={[styles.notificationWrapper, { zIndex: 1000 - index }]}\n        >\n          <NotificationBox\n            notification={notification}\n            onPress={() => handleNotificationPress(notification)}\n            onClose={() => handleNotificationClose(notification.id)}\n          />\n        </View>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n    pointerEvents: 'box-none',\n  },\n  notificationWrapper: {\n    position: 'relative',\n    marginBottom: 8,\n  },\n});\n\nexport default NotificationContainer;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,eAAe;AACxB,OAAOC,eAAe;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAEhD,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;EAClC,IAAAC,gBAAA,GAA0DL,eAAe,CAAC,CAAC;IAAnEM,aAAa,GAAAD,gBAAA,CAAbC,aAAa;IAAEC,kBAAkB,GAAAF,gBAAA,CAAlBE,kBAAkB;IAAEC,UAAU,GAAAH,gBAAA,CAAVG,UAAU;EAGrD,IAAMC,oBAAoB,GAAGH,aAAa,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAEtD,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,YAAY,EAAK;IAEhDJ,UAAU,CAACI,YAAY,CAACC,EAAE,CAAC;IAG3B,IAAID,YAAY,CAACE,OAAO,EAAE;MACxBF,YAAY,CAACE,OAAO,CAACF,YAAY,CAAC;IACpC;EACF,CAAC;EAED,IAAMG,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,cAAc,EAAK;IAClDT,kBAAkB,CAACS,cAAc,CAAC;EACpC,CAAC;EAED,IAAIP,oBAAoB,CAACQ,MAAM,KAAK,CAAC,EAAE;IACrC,OAAO,IAAI;EACb;EAEA,OACEd,IAAA,CAACL,IAAI;IAACoB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC3BZ,oBAAoB,CAACa,GAAG,CAAC,UAACV,YAAY,EAAEW,KAAK;MAAA,OAC5CpB,IAAA,CAACL,IAAI;QAEHoB,KAAK,EAAE,CAACC,MAAM,CAACK,mBAAmB,EAAE;UAAEC,MAAM,EAAE,IAAI,GAAGF;QAAM,CAAC,CAAE;QAAAF,QAAA,EAE9DlB,IAAA,CAACF,eAAe;UACdW,YAAY,EAAEA,YAAa;UAC3BE,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQH,uBAAuB,CAACC,YAAY,CAAC;UAAA,CAAC;UACrDc,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQX,uBAAuB,CAACH,YAAY,CAACC,EAAE,CAAC;UAAA;QAAC,CACzD;MAAC,GAPGD,YAAY,CAACC,EAQd,CAAC;IAAA,CACR;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMM,MAAM,GAAGpB,UAAU,CAAC4B,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRN,MAAM,EAAE,IAAI;IACZO,aAAa,EAAE;EACjB,CAAC;EACDR,mBAAmB,EAAE;IACnBI,QAAQ,EAAE,UAAU;IACpBK,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAe7B,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}