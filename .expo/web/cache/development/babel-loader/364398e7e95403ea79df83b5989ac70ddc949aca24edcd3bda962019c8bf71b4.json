{"ast":null,"code":"\"use strict\";\n\nimport React, { forwardRef } from 'react';\nimport { tagMessage } from \"../../../utils\";\nimport { isRNSVGNode } from \"../../../web/utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Wrap = forwardRef(function (_ref, ref) {\n  var children = _ref.children;\n  try {\n    var child = React.Children.only(children);\n    if (isRNSVGNode(child)) {\n      var clone = React.cloneElement(child, {\n        ref: ref\n      }, child.props.children);\n      return clone;\n    }\n    return _jsx(\"div\", {\n      ref: ref,\n      style: {\n        display: 'contents'\n      },\n      children: child\n    });\n  } catch (e) {\n    throw new Error(tagMessage(`GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n  }\n});\nexport var AnimatedWrap = Wrap;","map":{"version":3,"names":["React","forwardRef","tagMessage","isRNSVGNode","jsx","_jsx","Wrap","_ref","ref","children","child","Children","only","clone","cloneElement","props","style","display","e","Error","AnimatedWrap"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\handlers\\gestures\\GestureDetector\\Wrap.web.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport type { LegacyRef, PropsWithChildren } from 'react';\nimport { tagMessage } from '../../../utils';\nimport { isRNSVGNode } from '../../../web/utils';\n\nexport const Wrap = forwardRef<HTMLDivElement, PropsWithChildren<{}>>(\n  ({ children }, ref) => {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const child: any = React.Children.only(children);\n\n      if (isRNSVGNode(child)) {\n        const clone = React.cloneElement(\n          child,\n          { ref },\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          child.props.children\n        );\n\n        return clone;\n      }\n\n      return (\n        <div\n          ref={ref as LegacyRef<HTMLDivElement>}\n          style={{ display: 'contents' }}>\n          {child}\n        </div>\n      );\n    } catch (e) {\n      throw new Error(\n        tagMessage(\n          `GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`\n        )\n      );\n    }\n  }\n);\n\n// On web we never take a path with Reanimated,\n// therefore we can simply export Wrap\nexport const AnimatedWrap = Wrap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,SAASC,UAAU;AACnB,SAASC,WAAW;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAEjD,OAAO,IAAMC,IAAI,GAAGL,UAAU,CAC5B,UAAAM,IAAA,EAAeC,GAAG,EAAK;EAAA,IAApBC,QAAA,GAAAF,IAAA,CAAAE,QAAA;EACD,IAAI;IAEF,IAAMC,KAAU,GAAGV,KAAK,CAACW,QAAQ,CAACC,IAAI,CAACH,QAAQ,CAAC;IAEhD,IAAIN,WAAW,CAACO,KAAK,CAAC,EAAE;MACtB,IAAMG,KAAK,GAAGb,KAAK,CAACc,YAAY,CAC9BJ,KAAK,EACL;QAAEF,GAAA,EAAAA;MAAI,CAAC,EAEPE,KAAK,CAACK,KAAK,CAACN,QACd,CAAC;MAED,OAAOI,KAAK;IACd;IAEA,OACER,IAAA;MACEG,GAAG,EAAEA,GAAiC;MACtCQ,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAW,CAAE;MAAAR,QAAA,EAC9BC;IAAK,CACH,CAAC;EAEV,CAAC,CAAC,OAAOQ,CAAC,EAAE;IACV,MAAM,IAAIC,KAAK,CACbjB,UAAU,CACR,2KACF,CACF,CAAC;EACH;AACF,CACF,CAAC;AAID,OAAO,IAAMkB,YAAY,GAAGd,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}