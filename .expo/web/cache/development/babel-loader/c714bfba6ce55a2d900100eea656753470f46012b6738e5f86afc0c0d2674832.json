{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _KeyboardEventManager;\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { EventTypes } from \"../interfaces\";\nimport EventManager from \"./EventManager\";\nimport { PointerType } from \"../../PointerType\";\nvar KeyboardEventManager = function (_EventManager) {\n  function KeyboardEventManager() {\n    var _this;\n    _classCallCheck(this, KeyboardEventManager);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, KeyboardEventManager, [].concat(args));\n    _this.isPressed = false;\n    _this.keyDownCallback = function (event) {\n      if (KeyboardEventManager.cancelationKeys.indexOf(event.key) !== -1 && _this.isPressed) {\n        _this.dispatchEvent(event, EventTypes.CANCEL);\n        return;\n      }\n      if (KeyboardEventManager.activationKeys.indexOf(event.key) === -1) {\n        return;\n      }\n      _this.dispatchEvent(event, EventTypes.DOWN);\n    };\n    _this.onKeyUp = function (event) {\n      if (KeyboardEventManager.activationKeys.indexOf(event.key) === -1 || !_this.isPressed) {\n        return;\n      }\n      _this.dispatchEvent(event, EventTypes.UP);\n    };\n    return _this;\n  }\n  _inherits(KeyboardEventManager, _EventManager);\n  return _createClass(KeyboardEventManager, [{\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event, eventType) {\n      if (!(event.target instanceof HTMLElement)) {\n        return;\n      }\n      var adaptedEvent = this.mapEvent(event, eventType);\n      switch (eventType) {\n        case EventTypes.UP:\n          this.isPressed = false;\n          this.onPointerUp(adaptedEvent);\n          break;\n        case EventTypes.DOWN:\n          this.isPressed = true;\n          this.onPointerDown(adaptedEvent);\n          break;\n        case EventTypes.CANCEL:\n          this.isPressed = false;\n          this.onPointerCancel(adaptedEvent);\n          break;\n      }\n    }\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      this.view.addEventListener('keydown', this.keyDownCallback);\n      KeyboardEventManager.instances.add(this);\n      if (!KeyboardEventManager.registeredStaticListeners) {\n        KeyboardEventManager.registeredStaticListeners = true;\n        document.addEventListener('keyup', KeyboardEventManager.keyUpStaticCallback, {\n          capture: true\n        });\n      }\n    }\n  }, {\n    key: \"unregisterListeners\",\n    value: function unregisterListeners() {\n      this.view.removeEventListener('keydown', this.keyDownCallback);\n      KeyboardEventManager.instances.delete(this);\n      if (KeyboardEventManager.instances.size === 0) {\n        document.removeEventListener('keyup', KeyboardEventManager.keyUpStaticCallback, {\n          capture: true\n        });\n        KeyboardEventManager.registeredStaticListeners = false;\n      }\n    }\n  }, {\n    key: \"mapEvent\",\n    value: function mapEvent(event, eventType) {\n      var viewRect = event.target.getBoundingClientRect();\n      var viewportPosition = {\n        x: (viewRect == null ? void 0 : viewRect.x) + (viewRect == null ? void 0 : viewRect.width) / 2,\n        y: (viewRect == null ? void 0 : viewRect.y) + (viewRect == null ? void 0 : viewRect.height) / 2\n      };\n      var relativePosition = {\n        x: (viewRect == null ? void 0 : viewRect.width) / 2,\n        y: (viewRect == null ? void 0 : viewRect.height) / 2\n      };\n      return {\n        x: viewportPosition.x,\n        y: viewportPosition.y,\n        offsetX: relativePosition.x,\n        offsetY: relativePosition.y,\n        pointerId: 0,\n        eventType: eventType,\n        pointerType: PointerType.KEY,\n        time: event.timeStamp\n      };\n    }\n  }]);\n}(EventManager);\n_KeyboardEventManager = KeyboardEventManager;\nKeyboardEventManager.activationKeys = ['Enter', ' '];\nKeyboardEventManager.cancelationKeys = ['Tab'];\nKeyboardEventManager.registeredStaticListeners = false;\nKeyboardEventManager.instances = new Set();\nKeyboardEventManager.keyUpStaticCallback = function (event) {\n  if (_KeyboardEventManager.activationKeys.indexOf(event.key) === -1) {\n    return;\n  }\n  _KeyboardEventManager.instances.forEach(function (item) {\n    item.onKeyUp(event);\n  });\n};\nexport { KeyboardEventManager as default };","map":{"version":3,"names":["EventTypes","EventManager","PointerType","KeyboardEventManager","_EventManager","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","isPressed","keyDownCallback","event","cancelationKeys","indexOf","key","dispatchEvent","CANCEL","activationKeys","DOWN","onKeyUp","UP","_inherits","_createClass","value","eventType","target","HTMLElement","adaptedEvent","mapEvent","onPointerUp","onPointerDown","onPointerCancel","registerListeners","view","addEventListener","instances","add","registeredStaticListeners","document","keyUpStaticCallback","capture","unregisterListeners","removeEventListener","delete","size","viewRect","getBoundingClientRect","viewportPosition","x","width","y","height","relativePosition","offsetX","offsetY","pointerId","pointerType","KEY","time","timeStamp","_KeyboardEventManager","Set","forEach","item","default"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web\\tools\\KeyboardEventManager.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes } from '../interfaces';\nimport EventManager from './EventManager';\nimport { PointerType } from '../../PointerType';\n\nexport default class KeyboardEventManager extends EventManager<HTMLElement> {\n  private static activationKeys = ['Enter', ' '];\n  private static cancelationKeys = ['Tab'];\n  private isPressed = false;\n  private static registeredStaticListeners = false;\n  private static instances: Set<KeyboardEventManager> = new Set();\n\n  private static keyUpStaticCallback = (event: KeyboardEvent): void => {\n    // We need a global listener, as in some cases, keyUp event gets stop-propagated.\n    // Then, if we used only component-level listeners the gesture would never end,\n    // causing other gestues to fail.\n\n    if (this.activationKeys.indexOf(event.key) === -1) {\n      return;\n    }\n\n    this.instances.forEach((item) => {\n      item.onKeyUp(event);\n    });\n  };\n\n  private keyDownCallback = (event: KeyboardEvent): void => {\n    if (\n      KeyboardEventManager.cancelationKeys.indexOf(event.key) !== -1 &&\n      this.isPressed\n    ) {\n      this.dispatchEvent(event, EventTypes.CANCEL);\n      return;\n    }\n\n    if (KeyboardEventManager.activationKeys.indexOf(event.key) === -1) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.DOWN);\n  };\n\n  private onKeyUp = (event: KeyboardEvent): void => {\n    if (\n      KeyboardEventManager.activationKeys.indexOf(event.key) === -1 ||\n      !this.isPressed\n    ) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.UP);\n  };\n\n  private dispatchEvent(event: KeyboardEvent, eventType: EventTypes) {\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n\n    const adaptedEvent = this.mapEvent(event, eventType);\n\n    switch (eventType) {\n      case EventTypes.UP:\n        this.isPressed = false;\n        this.onPointerUp(adaptedEvent);\n        break;\n      case EventTypes.DOWN:\n        this.isPressed = true;\n        this.onPointerDown(adaptedEvent);\n        break;\n      case EventTypes.CANCEL:\n        this.isPressed = false;\n        this.onPointerCancel(adaptedEvent);\n        break;\n    }\n  }\n\n  public registerListeners(): void {\n    this.view.addEventListener('keydown', this.keyDownCallback);\n\n    KeyboardEventManager.instances.add(this);\n\n    if (!KeyboardEventManager.registeredStaticListeners) {\n      KeyboardEventManager.registeredStaticListeners = true;\n      document.addEventListener(\n        'keyup',\n        KeyboardEventManager.keyUpStaticCallback,\n        { capture: true }\n      );\n    }\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('keydown', this.keyDownCallback);\n\n    KeyboardEventManager.instances.delete(this);\n\n    if (KeyboardEventManager.instances.size === 0) {\n      document.removeEventListener(\n        'keyup',\n        KeyboardEventManager.keyUpStaticCallback,\n        { capture: true }\n      );\n      KeyboardEventManager.registeredStaticListeners = false;\n    }\n  }\n\n  protected mapEvent(\n    event: KeyboardEvent,\n    eventType: EventTypes\n  ): AdaptedEvent {\n    const viewRect = (event.target as HTMLElement).getBoundingClientRect();\n\n    const viewportPosition = {\n      x: viewRect?.x + viewRect?.width / 2,\n      y: viewRect?.y + viewRect?.height / 2,\n    };\n\n    const relativePosition = {\n      x: viewRect?.width / 2,\n      y: viewRect?.height / 2,\n    };\n\n    return {\n      x: viewportPosition.x,\n      y: viewportPosition.y,\n      offsetX: relativePosition.x,\n      offsetY: relativePosition.y,\n      pointerId: 0,\n      eventType: eventType,\n      pointerType: PointerType.KEY,\n      time: event.timeStamp,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}