{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { BaseGesture } from \"./gesture\";\nexport var NativeGesture = function (_BaseGesture) {\n  function NativeGesture() {\n    var _this;\n    _classCallCheck(this, NativeGesture);\n    _this = _callSuper(this, NativeGesture);\n    _this.config = {};\n    _this.handlerName = 'NativeViewGestureHandler';\n    return _this;\n  }\n  _inherits(NativeGesture, _BaseGesture);\n  return _createClass(NativeGesture, [{\n    key: \"shouldActivateOnStart\",\n    value: function shouldActivateOnStart(value) {\n      this.config.shouldActivateOnStart = value;\n      return this;\n    }\n  }, {\n    key: \"disallowInterruption\",\n    value: function disallowInterruption(value) {\n      this.config.disallowInterruption = value;\n      return this;\n    }\n  }]);\n}(BaseGesture);","map":{"version":3,"names":["BaseGesture","NativeGesture","_BaseGesture","_this","_classCallCheck","_callSuper","config","handlerName","_inherits","_createClass","key","value","shouldActivateOnStart","disallowInterruption"],"sources":["C:/Users/Yusuf Ali Aşkın/Downloads/Desktop/proje_afetnet/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.ts"],"sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport { NativeViewGestureConfig } from '../NativeViewGestureHandler';\nimport type { NativeViewGestureHandlerPayload } from '../GestureHandlerEventPayload';\n\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n\n  /**\n   * When true, underlying handler will activate unconditionally when in `BEGAN` or `UNDETERMINED` state.\n   * @param value\n   */\n  shouldActivateOnStart(value: boolean) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n\n  /**\n   * When true, cancels all other gesture handlers when this `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   * @param value\n   */\n  disallowInterruption(value: boolean) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}\n\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\n"],"mappings":";;;;;;;AAAA,SAA4BA,WAAW;AAIvC,WAAaC,aAAa,aAAAC,YAAA;EAGxB,SAAAD,cAAA,EAAc;IAAA,IAAAE,KAAA;IAAAC,eAAA,OAAAH,aAAA;IACZE,KAAA,GAAAE,UAAA,OAAAJ,aAAA;IAAQE,KAAA,CAHHG,MAAM,GAAgD,CAAC,CAAC;IAK7DH,KAAA,CAAKI,WAAW,GAAG,0BAA0B;IAAC,OAAAJ,KAAA;EAChD;EAACK,SAAA,CAAAP,aAAA,EAAAC,YAAA;EAAA,OAAAO,YAAA,CAAAR,aAAA;IAAAS,GAAA;IAAAC,KAAA,EAMD,SAAAC,qBAAqBA,CAACD,KAAc,EAAE;MACpC,IAAI,CAACL,MAAM,CAACM,qBAAqB,GAAGD,KAAK;MACzC,OAAO,IAAI;IACb;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAMD,SAAAE,oBAAoBA,CAACF,KAAc,EAAE;MACnC,IAAI,CAACL,MAAM,CAACO,oBAAoB,GAAGF,KAAK;MACxC,OAAO,IAAI;IACb;EAAC;AAAA,EAzBgCX,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}