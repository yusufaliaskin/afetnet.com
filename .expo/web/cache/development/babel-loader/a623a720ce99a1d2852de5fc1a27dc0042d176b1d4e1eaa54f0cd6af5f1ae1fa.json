{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nexport var gestures = {};\nexport function getHandler(tag) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n  throw new Error(`No handler for tag ${tag}`);\n}\nexport function createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\nexport function dropGestureHandler(handlerTag) {\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\nexport function getNodes() {\n  return _objectSpread({}, gestures);\n}","map":{"version":3,"names":["gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes","_objectSpread"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web_hammer\\NodeManager.ts"],"sourcesContent":["export const gestures: Record<number, any> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(handlerTag: number, handler: any) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"],"mappings":";;;;;AAAA,OAAO,IAAMA,QAA6B,GAAG,CAAC,CAAC;AAE/C,OAAO,SAASC,UAAUA,CAACC,GAAW,EAAE;EACtC,IAAIA,GAAG,IAAIF,QAAQ,EAAE;IACnB,OAAOA,QAAQ,CAACE,GAAG,CAAC;EACtB;EAEA,MAAM,IAAIC,KAAK,CAAC,sBAAsBD,GAAG,EAAE,CAAC;AAC9C;AAEA,OAAO,SAASE,oBAAoBA,CAACC,UAAkB,EAAEC,OAAY,EAAE;EACrE,IAAID,UAAU,IAAIL,QAAQ,EAAE;IAC1B,MAAM,IAAIG,KAAK,CAAC,oBAAoBE,UAAU,iBAAiB,CAAC;EAClE;EACAL,QAAQ,CAACK,UAAU,CAAC,GAAGC,OAAO;EAE9BN,QAAQ,CAACK,UAAU,CAAC,CAACA,UAAU,GAAGA,UAAU;AAC9C;AAEA,OAAO,SAASE,kBAAkBA,CAACF,UAAkB,EAAE;EAGrD,IAAI,EAAEA,UAAU,IAAIL,QAAQ,CAAC,EAAE;IAC7B;EACF;EACAC,UAAU,CAACI,UAAU,CAAC,CAACG,OAAO,CAAC,CAAC;EAEhC,OAAOR,QAAQ,CAACK,UAAU,CAAC;AAC7B;AAEA,OAAO,SAASI,QAAQA,CAAA,EAAG;EACzB,OAAAC,aAAA,KAAYV,QAAA;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}