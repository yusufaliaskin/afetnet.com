{"ast":null,"code":"\"use strict\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport GestureHandler from \"./GestureHandler\";\nimport { TEST_MAX_IF_NOT_NAN } from \"./utils\";\nvar DiscreteGestureHandler = function (_GestureHandler) {\n  function DiscreteGestureHandler() {\n    _classCallCheck(this, DiscreteGestureHandler);\n    return _callSuper(this, DiscreteGestureHandler, arguments);\n  }\n  _inherits(DiscreteGestureHandler, _GestureHandler);\n  return _createClass(DiscreteGestureHandler, [{\n    key: \"isDiscrete\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, _ref2) {\n      var x = _ref.x,\n        y = _ref.y,\n        deltaX = _ref.deltaX,\n        deltaY = _ref.deltaY;\n      var maxDeltaX = _ref2.maxDeltaX,\n        maxDeltaY = _ref2.maxDeltaY,\n        maxDistSq = _ref2.maxDistSq,\n        shouldCancelWhenOutside = _ref2.shouldCancelWhenOutside;\n      if (shouldCancelWhenOutside) {\n        if (!this.isPointInView({\n          x: x,\n          y: y\n        })) {\n          return true;\n        }\n      }\n      return TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) || TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) || TEST_MAX_IF_NOT_NAN(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref3) {\n      var _ref3$center = _ref3.center,\n        x = _ref3$center.x,\n        y = _ref3$center.y;\n      var rect = this.view.getBoundingClientRect();\n      return {\n        absoluteX: x,\n        absoluteY: y,\n        x: x - rect.left,\n        y: y - rect.top\n      };\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref4, _recognizer, _ref5) {\n      var minPointers = _ref4.minPointers,\n        maxPointers = _ref4.maxPointers,\n        maxDeltaX = _ref4.maxDeltaX,\n        maxDeltaY = _ref4.maxDeltaY,\n        maxDistSq = _ref4.maxDistSq,\n        shouldCancelWhenOutside = _ref4.shouldCancelWhenOutside;\n      var pointerLength = _ref5.maxPointers,\n        center = _ref5.center,\n        deltaX = _ref5.deltaX,\n        deltaY = _ref5.deltaY;\n      var validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n      if (this.shouldFailUnderCustomCriteria(_objectSpread(_objectSpread({}, center), {}, {\n        deltaX: deltaX,\n        deltaY: deltaY\n      }), {\n        maxDeltaX: maxDeltaX,\n        maxDeltaY: maxDeltaY,\n        maxDistSq: maxDistSq,\n        shouldCancelWhenOutside: shouldCancelWhenOutside\n      }) || !validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n  }]);\n}(GestureHandler);\nexport default DiscreteGestureHandler;","map":{"version":3,"names":["GestureHandler","TEST_MAX_IF_NOT_NAN","DiscreteGestureHandler","_GestureHandler","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","get","value","shouldFailUnderCustomCriteria","_ref","_ref2","x","y","deltaX","deltaY","maxDeltaX","maxDeltaY","maxDistSq","shouldCancelWhenOutside","isPointInView","Math","abs","transformNativeEvent","_ref3","_ref3$center","center","rect","view","getBoundingClientRect","absoluteX","absoluteY","left","top","isGestureEnabledForEvent","_ref4","_recognizer","_ref5","minPointers","maxPointers","pointerLength","validPointerCount","_objectSpread","isGestureRunning","failed","success"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web_hammer\\DiscreteGestureHandler.ts"],"sourcesContent":["/* eslint-disable @eslint-community/eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nabstract class DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY }: any,\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }: any\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(\n        Math.abs(deltaY * deltaY + deltaX * deltaX),\n        maxDistSq\n      )\n    );\n  }\n\n  transformNativeEvent({ center: { x, y } }: any) {\n    // @ts-ignore FIXME(TS)\n    const rect = this.view!.getBoundingClientRect();\n\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    {\n      minPointers,\n      maxPointers,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside,\n    }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength, center, deltaX, deltaY }: any\n  ) {\n    const validPointerCount =\n      pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}