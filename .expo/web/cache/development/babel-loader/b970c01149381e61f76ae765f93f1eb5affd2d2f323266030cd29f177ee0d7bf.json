{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Location from 'expo-location';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useTheme } from \"../contexts/ThemeContext\";\nimport { useLanguage } from \"../contexts/LanguageContext\";\nimport earthquakeService from \"../services/earthquakeService\";\nimport Header from \"../components/Header\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MapContainer, TileLayer, Marker, Popup, L;\nvar MapView, RNMarker, PROVIDER_GOOGLE;\nif (Platform.OS === 'web') {\n  var leaflet = require('react-leaflet');\n  MapContainer = leaflet.MapContainer;\n  TileLayer = leaflet.TileLayer;\n  Marker = leaflet.Marker;\n  Popup = leaflet.Popup;\n  L = require('leaflet');\n  if (typeof document !== 'undefined') {\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = 'https://unpkg.com/leaflet@1.7.1/dist/leaflet.css';\n    document.head.appendChild(link);\n  }\n  if (L && L.Icon && L.Icon.Default) {\n    delete L.Icon.Default.prototype._getIconUrl;\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n      iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n      shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n    });\n  }\n} else if (Platform.OS === 'android' || Platform.OS === 'ios') {\n  try {\n    var maps = require('react-native-maps');\n    MapView = maps.default;\n    RNMarker = maps.Marker;\n    PROVIDER_GOOGLE = maps.PROVIDER_GOOGLE;\n    console.log('React Native Maps loaded successfully for mobile in MapScreen');\n  } catch (error) {\n    console.log('React Native Maps not available in MapScreen:', error);\n  }\n}\nvar MapScreen = function MapScreen() {\n  var _useLanguage = useLanguage(),\n    t = _useLanguage.t;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var insets = useSafeAreaInsets();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userLocation = _useState2[0],\n    setUserLocation = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    earthquakes = _useState4[0],\n    setEarthquakes = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState([39.9334, 32.8597]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    mapCenter = _useState8[0],\n    setMapCenter = _useState8[1];\n  var _useState9 = useState(null),\n    _useState0 = _slicedToArray(_useState9, 2),\n    lastUpdateTime = _useState0[0],\n    setLastUpdateTime = _useState0[1];\n  var requestLocationPermission = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        if (status !== 'granted') {\n          Alert.alert('Konum İzni', 'Harita özelliklerini kullanabilmek için konum iznine ihtiyacımız var.');\n          return false;\n        }\n        return true;\n      } catch (error) {\n        console.error('Konum izni hatası:', error);\n        return false;\n      }\n    });\n    return function requestLocationPermission() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getUserLocation = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var hasPermission = yield requestLocationPermission();\n        if (!hasPermission) return;\n        var location = yield Location.getCurrentPositionAsync({\n          accuracy: Location.Accuracy.High\n        });\n        var userCoords = {\n          latitude: location.coords.latitude,\n          longitude: location.coords.longitude\n        };\n        setUserLocation(userCoords);\n        setMapCenter([userCoords.latitude, userCoords.longitude]);\n      } catch (error) {\n        console.error('Konum alma hatası:', error);\n        Alert.alert('Hata', 'Konum alınamadı. Lütfen tekrar deneyin.');\n      }\n    });\n    return function getUserLocation() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchEarthquakes = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var data = yield earthquakeService.getLatestEarthquakes();\n        setEarthquakes(data);\n        setLastUpdateTime(new Date());\n        console.log(`Deprem verileri güncellendi: ${data.length} deprem bulundu`);\n      } catch (error) {\n        console.error('Deprem verileri alınamadı:', error);\n        var mockData = [{\n          id: '1',\n          magnitude: 4.2,\n          location: 'İstanbul',\n          latitude: 41.0082,\n          longitude: 28.9784,\n          depth: 10,\n          time: new Date().toISOString(),\n          color: '#FFCC00'\n        }, {\n          id: '2',\n          magnitude: 3.1,\n          location: 'Ankara',\n          latitude: 39.9334,\n          longitude: 32.8597,\n          depth: 15,\n          time: new Date().toISOString(),\n          color: '#34C759'\n        }];\n        setEarthquakes(mockData);\n        setLastUpdateTime(new Date());\n        Alert.alert('Bilgi', 'Deprem verileri yüklenemedi, örnek veriler gösteriliyor.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchEarthquakes() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var showEarthquakeDetails = function showEarthquakeDetails(earthquake) {\n    var _earthquake$latitude, _earthquake$longitude;\n    var formatTime = function formatTime(time) {\n      return new Date(time).toLocaleString('tr-TR', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    };\n    var detailMessage = `Konum: ${earthquake.location || earthquake.region || 'Bilinmiyor'}\\n`;\n    detailMessage += `Büyüklük: ${earthquake.magnitude}\\n`;\n    detailMessage += `Derinlik: ${earthquake.depth} km\\n`;\n    detailMessage += `Zaman: ${formatTime(earthquake.time)}\\n`;\n    if (earthquake.source) {\n      detailMessage += `Kaynak: ${earthquake.source}\\n`;\n    }\n    if (earthquake.type) {\n      detailMessage += `Tip: ${earthquake.type}\\n`;\n    }\n    if (earthquake.quality) {\n      detailMessage += `Kalite: ${earthquake.quality}\\n`;\n    }\n    if (earthquake.severity) {\n      detailMessage += `Şiddet: ${earthquake.severity}\\n`;\n    }\n    detailMessage += `Koordinatlar: ${(_earthquake$latitude = earthquake.latitude) == null ? void 0 : _earthquake$latitude.toFixed(4)}, ${(_earthquake$longitude = earthquake.longitude) == null ? void 0 : _earthquake$longitude.toFixed(4)}`;\n    Alert.alert(`Deprem Detayları - M${earthquake.magnitude}`, detailMessage, [{\n      text: 'Tamam',\n      style: 'default'\n    }, {\n      text: 'Konuma Git',\n      onPress: function onPress() {\n        return setMapCenter([earthquake.latitude, earthquake.longitude]);\n      }\n    }]);\n  };\n  var centerOnUser = function centerOnUser() {\n    if (userLocation) {\n      setMapCenter([userLocation.latitude, userLocation.longitude]);\n    } else {\n      getUserLocation();\n    }\n  };\n  useEffect(function () {\n    getUserLocation();\n    fetchEarthquakes();\n    var interval = setInterval(function () {\n      console.log('Otomatik veri güncelleme başlatılıyor...');\n      fetchEarthquakes();\n    }, 30000);\n    return function () {\n      console.log('Otomatik güncelleme temizleniyor...');\n      clearInterval(interval);\n    };\n  }, []);\n  var getMarkerSize = function getMarkerSize(magnitude) {\n    if (magnitude < 3) return 20;\n    if (magnitude < 4) return 25;\n    if (magnitude < 5) return 30;\n    if (magnitude < 6) return 35;\n    return 40;\n  };\n  var getMarkerColor = function getMarkerColor(magnitude) {\n    if (magnitude < 3) return '#34C759';\n    if (magnitude < 4) return '#FFCC00';\n    if (magnitude < 5) return '#FF9500';\n    if (magnitude < 6) return '#FF3B30';\n    return '#8E4EC6';\n  };\n  var getEarthquakeColor = function getEarthquakeColor(magnitude) {\n    return getMarkerColor(magnitude);\n  };\n  var createEarthquakeIcon = function createEarthquakeIcon(earthquake) {\n    var size = getMarkerSize(earthquake.magnitude);\n    var color = earthquake.color || getMarkerColor(earthquake.magnitude);\n    return L.divIcon({\n      html: `<div style=\"\n        width: ${size}px;\n        height: ${size}px;\n        background-color: ${color};\n        border: 2px solid white;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: ${size * 0.4}px;\n        font-weight: bold;\n        color: white;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n      \">${earthquake.magnitude}</div>`,\n      className: 'earthquake-marker',\n      iconSize: [size, size],\n      iconAnchor: [size / 2, size / 2]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background,\n      paddingTop: insets.top\n    }],\n    children: [_jsx(Header, {\n      title: \"Deprem Haritas\\u0131\",\n      customRightComponent: _jsxs(View, {\n        style: styles.headerRight,\n        children: [lastUpdateTime && _jsx(Text, {\n          style: [styles.updateTimeText, {\n            color: theme.colors.secondaryText\n          }],\n          children: lastUpdateTime.toLocaleTimeString('tr-TR', {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: fetchEarthquakes,\n          style: styles.refreshButton,\n          children: _jsx(Ionicons, {\n            name: \"refresh\",\n            size: 24,\n            color: theme.colors.icon\n          })\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.mapContainer,\n      children: Platform.OS === 'web' ? _jsxs(MapContainer, {\n        center: mapCenter,\n        zoom: 7,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [_jsx(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }), userLocation && _jsx(Marker, {\n          position: [userLocation.latitude, userLocation.longitude],\n          icon: L.icon({\n            iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n            iconSize: [25, 41],\n            iconAnchor: [12, 41]\n          }),\n          children: _jsx(Popup, {\n            children: \"Konumunuz\"\n          })\n        }), earthquakes.map(function (earthquake) {\n          var _earthquake$latitude2, _earthquake$longitude2;\n          return _jsx(Marker, {\n            position: [earthquake.latitude, earthquake.longitude],\n            icon: createEarthquakeIcon(earthquake),\n            eventHandlers: {\n              click: function click() {\n                return showEarthquakeDetails(earthquake);\n              }\n            },\n            children: _jsx(Popup, {\n              children: _jsxs(\"div\", {\n                style: {\n                  minWidth: '250px',\n                  fontSize: '14px'\n                },\n                children: [_jsxs(\"div\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '16px',\n                    marginBottom: '8px',\n                    color: '#d32f2f'\n                  },\n                  children: [\"M\", earthquake.magnitude, \" Deprem\"]\n                }), _jsxs(\"div\", {\n                  style: {\n                    marginBottom: '4px'\n                  },\n                  children: [_jsx(\"strong\", {\n                    children: \"Konum:\"\n                  }), \" \", earthquake.location || earthquake.region || 'Bilinmiyor']\n                }), _jsxs(\"div\", {\n                  style: {\n                    marginBottom: '4px'\n                  },\n                  children: [_jsx(\"strong\", {\n                    children: \"Derinlik:\"\n                  }), \" \", earthquake.depth, \" km\"]\n                }), _jsxs(\"div\", {\n                  style: {\n                    marginBottom: '4px'\n                  },\n                  children: [_jsx(\"strong\", {\n                    children: \"Zaman:\"\n                  }), \" \", new Date(earthquake.time).toLocaleString('tr-TR', {\n                    year: 'numeric',\n                    month: '2-digit',\n                    day: '2-digit',\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit'\n                  })]\n                }), earthquake.source && _jsxs(\"div\", {\n                  style: {\n                    marginBottom: '4px'\n                  },\n                  children: [_jsx(\"strong\", {\n                    children: \"Kaynak:\"\n                  }), \" \", earthquake.source]\n                }), earthquake.type && _jsxs(\"div\", {\n                  style: {\n                    marginBottom: '4px'\n                  },\n                  children: [_jsx(\"strong\", {\n                    children: \"Tip:\"\n                  }), \" \", earthquake.type]\n                }), earthquake.quality && _jsxs(\"div\", {\n                  style: {\n                    marginBottom: '4px'\n                  },\n                  children: [_jsx(\"strong\", {\n                    children: \"Kalite:\"\n                  }), \" \", earthquake.quality]\n                }), earthquake.severity && _jsxs(\"div\", {\n                  style: {\n                    marginBottom: '4px'\n                  },\n                  children: [_jsx(\"strong\", {\n                    children: \"\\u015Eiddet:\"\n                  }), \" \", earthquake.severity]\n                }), _jsxs(\"div\", {\n                  style: {\n                    marginTop: '8px',\n                    fontSize: '12px',\n                    color: '#666'\n                  },\n                  children: [_jsx(\"strong\", {\n                    children: \"Koordinatlar:\"\n                  }), \" \", (_earthquake$latitude2 = earthquake.latitude) == null ? void 0 : _earthquake$latitude2.toFixed(4), \", \", (_earthquake$longitude2 = earthquake.longitude) == null ? void 0 : _earthquake$longitude2.toFixed(4)]\n                })]\n              })\n            })\n          }, earthquake.id);\n        })]\n      }, `${mapCenter[0]}-${mapCenter[1]}`) : _jsx(MapView, {\n        style: styles.mapContainer,\n        provider: PROVIDER_GOOGLE,\n        initialRegion: {\n          latitude: (userLocation == null ? void 0 : userLocation.latitude) || 39.9334,\n          longitude: (userLocation == null ? void 0 : userLocation.longitude) || 32.8597,\n          latitudeDelta: 5.0,\n          longitudeDelta: 5.0\n        },\n        showsUserLocation: true,\n        showsMyLocationButton: false,\n        zoomEnabled: true,\n        scrollEnabled: true,\n        rotateEnabled: true,\n        pitchEnabled: true,\n        children: earthquakes.map(function (earthquake) {\n          return _jsx(RNMarker, {\n            coordinate: {\n              latitude: earthquake.latitude,\n              longitude: earthquake.longitude\n            },\n            title: `M${earthquake.magnitude} Deprem`,\n            description: `${earthquake.location || earthquake.region || 'Bilinmiyor'} - Derinlik: ${earthquake.depth} km`,\n            pinColor: getEarthquakeColor(earthquake.magnitude),\n            onPress: function onPress() {\n              return showEarthquakeDetails(earthquake);\n            }\n          }, earthquake.id);\n        })\n      })\n    }), _jsx(View, {\n      style: styles.controls,\n      children: _jsx(TouchableOpacity, {\n        style: [styles.controlButton, {\n          backgroundColor: theme.colors.primary\n        }],\n        onPress: centerOnUser,\n        children: _jsx(Ionicons, {\n          name: \"locate\",\n          size: 24,\n          color: theme.colors.onPrimary\n        })\n      })\n    }), loading && _jsxs(View, {\n      style: styles.loadingOverlay,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Text, {\n        style: [styles.loadingText, {\n          color: theme.colors.text\n        }],\n        children: \"Deprem verileri y\\xFCkleniyor...\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  headerRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8\n  },\n  updateTimeText: {\n    fontSize: 12,\n    fontWeight: '500'\n  },\n  refreshButton: {\n    padding: 8\n  },\n  mapContainer: {\n    flex: 1\n  },\n  controls: {\n    position: 'absolute',\n    right: 20,\n    bottom: 20\n  },\n  controlButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  },\n  loadingOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16\n  }\n});\nexport default MapScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","Alert","TouchableOpacity","ActivityIndicator","Platform","Ionicons","Location","useSafeAreaInsets","useTheme","useLanguage","earthquakeService","Header","jsx","_jsx","jsxs","_jsxs","MapContainer","TileLayer","Marker","Popup","L","MapView","RNMarker","PROVIDER_GOOGLE","OS","leaflet","require","document","link","createElement","rel","href","head","appendChild","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","maps","default","console","log","error","MapScreen","_useLanguage","t","_useTheme","theme","insets","_useState","_useState2","_slicedToArray","userLocation","setUserLocation","_useState3","_useState4","earthquakes","setEarthquakes","_useState5","_useState6","loading","setLoading","_useState7","_useState8","mapCenter","setMapCenter","_useState9","_useState0","lastUpdateTime","setLastUpdateTime","requestLocationPermission","_ref","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","alert","apply","arguments","getUserLocation","_ref2","hasPermission","location","getCurrentPositionAsync","accuracy","Accuracy","High","userCoords","latitude","coords","longitude","fetchEarthquakes","_ref3","data","getLatestEarthquakes","Date","length","mockData","id","magnitude","depth","time","toISOString","color","showEarthquakeDetails","earthquake","_earthquake$latitude","_earthquake$longitude","formatTime","toLocaleString","year","month","day","hour","minute","second","detailMessage","region","source","type","quality","severity","toFixed","text","style","onPress","centerOnUser","interval","setInterval","clearInterval","getMarkerSize","getMarkerColor","getEarthquakeColor","createEarthquakeIcon","size","divIcon","html","className","iconSize","iconAnchor","styles","container","backgroundColor","colors","background","paddingTop","top","children","title","customRightComponent","headerRight","updateTimeText","secondaryText","toLocaleTimeString","refreshButton","name","icon","mapContainer","center","zoom","height","width","url","attribution","position","map","_earthquake$latitude2","_earthquake$longitude2","eventHandlers","click","minWidth","fontSize","fontWeight","marginBottom","marginTop","provider","initialRegion","latitudeDelta","longitudeDelta","showsUserLocation","showsMyLocationButton","zoomEnabled","scrollEnabled","rotateEnabled","pitchEnabled","coordinate","description","pinColor","controls","controlButton","primary","onPrimary","loadingOverlay","loadingText","create","flex","flexDirection","alignItems","gap","padding","right","bottom","borderRadius","justifyContent","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","left"],"sources":["C:/Users/Yusuf Ali Aşkın/Desktop/proje_afetnet/src/screens/MapScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Alert,\n  TouchableOpacity,\n  ActivityIndicator,\n  Platform,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Location from 'expo-location';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport earthquakeService from '../services/earthquakeService';\nimport Header from '../components/Header';\n\n// Web platformu için react-leaflet kullan\nlet MapContainer, TileLayer, Marker, Popup, L;\nlet MapView, RNMarker, PROVIDER_GOOGLE;\n\nif (Platform.OS === 'web') {\n  const leaflet = require('react-leaflet');\n  MapContainer = leaflet.MapContainer;\n  TileLayer = leaflet.TileLayer;\n  Marker = leaflet.Marker;\n  Popup = leaflet.Popup;\n  L = require('leaflet');\n  \n  // CSS'i dinamik olarak yükle\n  if (typeof document !== 'undefined') {\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = 'https://unpkg.com/leaflet@1.7.1/dist/leaflet.css';\n    document.head.appendChild(link);\n  }\n  \n  // Leaflet marker icon'larını düzelt\n  if (L && L.Icon && L.Icon.Default) {\n    delete L.Icon.Default.prototype._getIconUrl;\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n      iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n      shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n    });\n  }\n} else if (Platform.OS === 'android' || Platform.OS === 'ios') {\n  // Mobil platformlar için react-native-maps kullan\n  try {\n    const maps = require('react-native-maps');\n    MapView = maps.default;\n    RNMarker = maps.Marker;\n    PROVIDER_GOOGLE = maps.PROVIDER_GOOGLE;\n    console.log('React Native Maps loaded successfully for mobile in MapScreen');\n  } catch (error) {\n    console.log('React Native Maps not available in MapScreen:', error);\n  }\n}\n\nconst MapScreen = () => {\n  const { t } = useLanguage();\n  const { theme } = useTheme();\n  const insets = useSafeAreaInsets();\n\n  const [userLocation, setUserLocation] = useState(null);\n  const [earthquakes, setEarthquakes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mapCenter, setMapCenter] = useState([39.9334, 32.8597]); // Ankara koordinatları\n  const [lastUpdateTime, setLastUpdateTime] = useState(null);\n\n  // Konum izni isteme\n  const requestLocationPermission = async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert(\n          'Konum İzni',\n          'Harita özelliklerini kullanabilmek için konum iznine ihtiyacımız var.'\n        );\n        return false;\n      }\n      return true;\n    } catch (error) {\n      console.error('Konum izni hatası:', error);\n      return false;\n    }\n  };\n\n  // Kullanıcının konumunu al\n  const getUserLocation = async () => {\n    try {\n      const hasPermission = await requestLocationPermission();\n      if (!hasPermission) return;\n\n      const location = await Location.getCurrentPositionAsync({\n        accuracy: Location.Accuracy.High,\n      });\n\n      const userCoords = {\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n      };\n\n      setUserLocation(userCoords);\n      setMapCenter([userCoords.latitude, userCoords.longitude]);\n    } catch (error) {\n      console.error('Konum alma hatası:', error);\n      Alert.alert('Hata', 'Konum alınamadı. Lütfen tekrar deneyin.');\n    }\n  };\n\n  // Deprem verilerini çek\n  const fetchEarthquakes = async () => {\n    try {\n      setLoading(true);\n      const data = await earthquakeService.getLatestEarthquakes();\n      setEarthquakes(data);\n      setLastUpdateTime(new Date());\n      console.log(`Deprem verileri güncellendi: ${data.length} deprem bulundu`);\n    } catch (error) {\n      console.error('Deprem verileri alınamadı:', error);\n      // Fallback mock data\n      const mockData = [\n        {\n          id: '1',\n          magnitude: 4.2,\n          location: 'İstanbul',\n          latitude: 41.0082,\n          longitude: 28.9784,\n          depth: 10,\n          time: new Date().toISOString(),\n          color: '#FFCC00'\n        },\n        {\n          id: '2',\n          magnitude: 3.1,\n          location: 'Ankara',\n          latitude: 39.9334,\n          longitude: 32.8597,\n          depth: 15,\n          time: new Date().toISOString(),\n          color: '#34C759'\n        }\n      ];\n      setEarthquakes(mockData);\n      setLastUpdateTime(new Date());\n      Alert.alert('Bilgi', 'Deprem verileri yüklenemedi, örnek veriler gösteriliyor.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Deprem detaylarını göster\n  const showEarthquakeDetails = (earthquake) => {\n    const formatTime = (time) => {\n      return new Date(time).toLocaleString('tr-TR', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    };\n\n    let detailMessage = `Konum: ${earthquake.location || earthquake.region || 'Bilinmiyor'}\\n`;\n    detailMessage += `Büyüklük: ${earthquake.magnitude}\\n`;\n    detailMessage += `Derinlik: ${earthquake.depth} km\\n`;\n    detailMessage += `Zaman: ${formatTime(earthquake.time)}\\n`;\n    \n    // Kandilli API'sinden gelen ek bilgiler\n    if (earthquake.source) {\n      detailMessage += `Kaynak: ${earthquake.source}\\n`;\n    }\n    if (earthquake.type) {\n      detailMessage += `Tip: ${earthquake.type}\\n`;\n    }\n    if (earthquake.quality) {\n      detailMessage += `Kalite: ${earthquake.quality}\\n`;\n    }\n    if (earthquake.severity) {\n      detailMessage += `Şiddet: ${earthquake.severity}\\n`;\n    }\n    \n    // Koordinat bilgileri\n    detailMessage += `Koordinatlar: ${earthquake.latitude?.toFixed(4)}, ${earthquake.longitude?.toFixed(4)}`;\n\n    Alert.alert(\n      `Deprem Detayları - M${earthquake.magnitude}`,\n      detailMessage,\n      [\n        { text: 'Tamam', style: 'default' },\n        {\n          text: 'Konuma Git',\n          onPress: () => setMapCenter([earthquake.latitude, earthquake.longitude])\n        }\n      ]\n    );\n  };\n\n  // Kullanıcı konumuna git\n  const centerOnUser = () => {\n    if (userLocation) {\n      setMapCenter([userLocation.latitude, userLocation.longitude]);\n    } else {\n      getUserLocation();\n    }\n  };\n\n  // Component mount edildiğinde\n  useEffect(() => {\n    getUserLocation();\n    fetchEarthquakes();\n\n    // Kandilli API için daha sık güncelleme (30 saniye)\n    // Kandilli Rasathanesi verileri daha güncel olduğu için\n    const interval = setInterval(() => {\n      console.log('Otomatik veri güncelleme başlatılıyor...');\n      fetchEarthquakes();\n    }, 30000); // 30 saniye\n\n    return () => {\n      console.log('Otomatik güncelleme temizleniyor...');\n      clearInterval(interval);\n    };\n  }, []);\n\n  // Deprem büyüklüğüne göre marker boyutu\n  const getMarkerSize = (magnitude) => {\n    if (magnitude < 3) return 20;\n    if (magnitude < 4) return 25;\n    if (magnitude < 5) return 30;\n    if (magnitude < 6) return 35;\n    return 40;\n  };\n\n  // Deprem büyüklüğüne göre renk\n  const getMarkerColor = (magnitude) => {\n    if (magnitude < 3) return '#34C759'; // Yeşil\n    if (magnitude < 4) return '#FFCC00'; // Sarı\n    if (magnitude < 5) return '#FF9500'; // Turuncu\n    if (magnitude < 6) return '#FF3B30'; // Kırmızı\n    return '#8E4EC6'; // Mor\n  };\n\n  // Mobil görünüm için deprem rengi (getMarkerColor ile aynı)\n  const getEarthquakeColor = (magnitude) => {\n    return getMarkerColor(magnitude);\n  };\n\n  // Özel deprem marker'ı oluştur\n  const createEarthquakeIcon = (earthquake) => {\n    const size = getMarkerSize(earthquake.magnitude);\n    const color = earthquake.color || getMarkerColor(earthquake.magnitude);\n    \n    return L.divIcon({\n      html: `<div style=\"\n        width: ${size}px;\n        height: ${size}px;\n        background-color: ${color};\n        border: 2px solid white;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: ${size * 0.4}px;\n        font-weight: bold;\n        color: white;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n      \">${earthquake.magnitude}</div>`,\n      className: 'earthquake-marker',\n      iconSize: [size, size],\n      iconAnchor: [size / 2, size / 2]\n    });\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background, paddingTop: insets.top }]}>\n      {/* Header */}\n      <Header \n        title=\"Deprem Haritası\"\n        customRightComponent={\n          <View style={styles.headerRight}>\n            {lastUpdateTime && (\n              <Text style={[styles.updateTimeText, { color: theme.colors.secondaryText }]}>\n                {lastUpdateTime.toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\n              </Text>\n            )}\n            <TouchableOpacity onPress={fetchEarthquakes} style={styles.refreshButton}>\n              <Ionicons name=\"refresh\" size={24} color={theme.colors.icon} />\n            </TouchableOpacity>\n          </View>\n        }\n      />\n\n      {/* Map Container */}\n      <View style={styles.mapContainer}>\n        {Platform.OS === 'web' ? (\n          <MapContainer\n            center={mapCenter}\n            zoom={7}\n            style={{ height: '100%', width: '100%' }}\n            key={`${mapCenter[0]}-${mapCenter[1]}`}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            \n            {/* Kullanıcı konumu */}\n            {userLocation && (\n              <Marker\n                position={[userLocation.latitude, userLocation.longitude]}\n                icon={L.icon({\n                  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n                  iconSize: [25, 41],\n                  iconAnchor: [12, 41]\n                })}\n              >\n                <Popup>Konumunuz</Popup>\n              </Marker>\n            )}\n            \n            {/* Deprem marker'ları */}\n            {earthquakes.map((earthquake) => (\n              <Marker\n                key={earthquake.id}\n                position={[earthquake.latitude, earthquake.longitude]}\n                icon={createEarthquakeIcon(earthquake)}\n                eventHandlers={{\n                  click: () => showEarthquakeDetails(earthquake)\n                }}\n              >\n                <Popup>\n                  <div style={{ minWidth: '250px', fontSize: '14px' }}>\n                    <div style={{ fontWeight: 'bold', fontSize: '16px', marginBottom: '8px', color: '#d32f2f' }}>\n                      M{earthquake.magnitude} Deprem\n                    </div>\n                    <div style={{ marginBottom: '4px' }}>\n                      <strong>Konum:</strong> {earthquake.location || earthquake.region || 'Bilinmiyor'}\n                    </div>\n                    <div style={{ marginBottom: '4px' }}>\n                      <strong>Derinlik:</strong> {earthquake.depth} km\n                    </div>\n                    <div style={{ marginBottom: '4px' }}>\n                      <strong>Zaman:</strong> {new Date(earthquake.time).toLocaleString('tr-TR', {\n                        year: 'numeric',\n                        month: '2-digit',\n                        day: '2-digit',\n                        hour: '2-digit',\n                        minute: '2-digit',\n                        second: '2-digit'\n                      })}\n                    </div>\n                    {earthquake.source && (\n                      <div style={{ marginBottom: '4px' }}>\n                        <strong>Kaynak:</strong> {earthquake.source}\n                      </div>\n                    )}\n                    {earthquake.type && (\n                      <div style={{ marginBottom: '4px' }}>\n                        <strong>Tip:</strong> {earthquake.type}\n                      </div>\n                    )}\n                    {earthquake.quality && (\n                      <div style={{ marginBottom: '4px' }}>\n                        <strong>Kalite:</strong> {earthquake.quality}\n                      </div>\n                    )}\n                    {earthquake.severity && (\n                      <div style={{ marginBottom: '4px' }}>\n                        <strong>Şiddet:</strong> {earthquake.severity}\n                      </div>\n                    )}\n                    <div style={{ marginTop: '8px', fontSize: '12px', color: '#666' }}>\n                      <strong>Koordinatlar:</strong> {earthquake.latitude?.toFixed(4)}, {earthquake.longitude?.toFixed(4)}\n                    </div>\n                  </div>\n                </Popup>\n              </Marker>\n            ))}\n          </MapContainer>\n        ) : (\n          <MapView\n            style={styles.mapContainer}\n            provider={PROVIDER_GOOGLE}\n            initialRegion={{\n              latitude: userLocation?.latitude || 39.9334,\n              longitude: userLocation?.longitude || 32.8597,\n              latitudeDelta: 5.0,\n              longitudeDelta: 5.0,\n            }}\n            showsUserLocation={true}\n            showsMyLocationButton={false}\n            zoomEnabled={true}\n            scrollEnabled={true}\n            rotateEnabled={true}\n            pitchEnabled={true}\n          >\n            {/* Deprem marker'ları */}\n            {earthquakes.map((earthquake) => (\n              <RNMarker\n                key={earthquake.id}\n                coordinate={{\n                  latitude: earthquake.latitude,\n                  longitude: earthquake.longitude,\n                }}\n                title={`M${earthquake.magnitude} Deprem`}\n                description={`${earthquake.location || earthquake.region || 'Bilinmiyor'} - Derinlik: ${earthquake.depth} km`}\n                pinColor={getEarthquakeColor(earthquake.magnitude)}\n                onPress={() => showEarthquakeDetails(earthquake)}\n              />\n            ))}\n          </MapView>\n        )}\n      </View>\n\n      {/* Controls */}\n      <View style={styles.controls}>\n        <TouchableOpacity\n          style={[styles.controlButton, { backgroundColor: theme.colors.primary }]}\n          onPress={centerOnUser}\n        >\n          <Ionicons name=\"locate\" size={24} color={theme.colors.onPrimary} />\n        </TouchableOpacity>\n      </View>\n\n\n\n      {/* Loading Overlay */}\n      {loading && (\n        <View style={styles.loadingOverlay}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={[styles.loadingText, { color: theme.colors.text }]}>\n            Deprem verileri yükleniyor...\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n\n  headerRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  updateTimeText: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  refreshButton: {\n    padding: 8,\n  },\n  mapContainer: {\n    flex: 1,\n  },\n\n  controls: {\n    position: 'absolute',\n    right: 20,\n    bottom: 20,\n  },\n  controlButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n\n  loadingOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n  },\n});\n\nexport default MapScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,QAAA;AAUnD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAO,KAAKC,QAAQ,MAAM,eAAe;AACzC,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,QAAQ;AACjB,SAASC,WAAW;AACpB,OAAOC,iBAAiB;AACxB,OAAOC,MAAM;AAA6B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAG1C,IAAIC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,CAAC;AAC7C,IAAIC,OAAO,EAAEC,QAAQ,EAAEC,eAAe;AAEtC,IAAInB,QAAQ,CAACoB,EAAE,KAAK,KAAK,EAAE;EACzB,IAAMC,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;EACxCV,YAAY,GAAGS,OAAO,CAACT,YAAY;EACnCC,SAAS,GAAGQ,OAAO,CAACR,SAAS;EAC7BC,MAAM,GAAGO,OAAO,CAACP,MAAM;EACvBC,KAAK,GAAGM,OAAO,CAACN,KAAK;EACrBC,CAAC,GAAGM,OAAO,CAAC,SAAS,CAAC;EAGtB,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;IACnC,IAAMC,IAAI,GAAGD,QAAQ,CAACE,aAAa,CAAC,MAAM,CAAC;IAC3CD,IAAI,CAACE,GAAG,GAAG,YAAY;IACvBF,IAAI,CAACG,IAAI,GAAG,kDAAkD;IAC9DJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;EACjC;EAGA,IAAIR,CAAC,IAAIA,CAAC,CAACc,IAAI,IAAId,CAAC,CAACc,IAAI,CAACC,OAAO,EAAE;IACjC,OAAOf,CAAC,CAACc,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;IAC3CjB,CAAC,CAACc,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;MAC1BC,aAAa,EAAE,gFAAgF;MAC/FC,OAAO,EAAE,6EAA6E;MACtFC,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;AACF,CAAC,MAAM,IAAIrC,QAAQ,CAACoB,EAAE,KAAK,SAAS,IAAIpB,QAAQ,CAACoB,EAAE,KAAK,KAAK,EAAE;EAE7D,IAAI;IACF,IAAMkB,IAAI,GAAGhB,OAAO,CAAC,mBAAmB,CAAC;IACzCL,OAAO,GAAGqB,IAAI,CAACC,OAAO;IACtBrB,QAAQ,GAAGoB,IAAI,CAACxB,MAAM;IACtBK,eAAe,GAAGmB,IAAI,CAACnB,eAAe;IACtCqB,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;EAC9E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEC,KAAK,CAAC;EACrE;AACF;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAAC,YAAA,GAAcvC,WAAW,CAAC,CAAC;IAAnBwC,CAAC,GAAAD,YAAA,CAADC,CAAC;EACT,IAAAC,SAAA,GAAkB1C,QAAQ,CAAC,CAAC;IAApB2C,KAAK,GAAAD,SAAA,CAALC,KAAK;EACb,IAAMC,MAAM,GAAG7C,iBAAiB,CAAC,CAAC;EAElC,IAAA8C,SAAA,GAAwCzD,QAAQ,CAAC,IAAI,CAAC;IAAA0D,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAsC9D,QAAQ,CAAC,EAAE,CAAC;IAAA+D,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAA8BlE,QAAQ,CAAC,IAAI,CAAC;IAAAmE,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAkCtE,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAAAuE,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAvDE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAA4C1E,QAAQ,CAAC,IAAI,CAAC;IAAA2E,UAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAnDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAGxC,IAAMG,yBAAyB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5C,IAAI;QACF,IAAAC,qBAAA,SAAyBvE,QAAQ,CAACwE,iCAAiC,CAAC,CAAC;UAA7DC,MAAM,GAAAF,qBAAA,CAANE,MAAM;QACd,IAAIA,MAAM,KAAK,SAAS,EAAE;UACxB9E,KAAK,CAAC+E,KAAK,CACT,YAAY,EACZ,uEACF,CAAC;UACD,OAAO,KAAK;QACd;QACA,OAAO,IAAI;MACb,CAAC,CAAC,OAAOlC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,OAAO,KAAK;MACd;IACF,CAAC;IAAA,gBAfK4B,yBAAyBA,CAAA;MAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAe9B;EAGD,IAAMC,eAAe;IAAA,IAAAC,KAAA,GAAAR,iBAAA,CAAG,aAAY;MAClC,IAAI;QACF,IAAMS,aAAa,SAASX,yBAAyB,CAAC,CAAC;QACvD,IAAI,CAACW,aAAa,EAAE;QAEpB,IAAMC,QAAQ,SAAShF,QAAQ,CAACiF,uBAAuB,CAAC;UACtDC,QAAQ,EAAElF,QAAQ,CAACmF,QAAQ,CAACC;QAC9B,CAAC,CAAC;QAEF,IAAMC,UAAU,GAAG;UACjBC,QAAQ,EAAEN,QAAQ,CAACO,MAAM,CAACD,QAAQ;UAClCE,SAAS,EAAER,QAAQ,CAACO,MAAM,CAACC;QAC7B,CAAC;QAEDrC,eAAe,CAACkC,UAAU,CAAC;QAC3BtB,YAAY,CAAC,CAACsB,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACG,SAAS,CAAC,CAAC;MAC3D,CAAC,CAAC,OAAOhD,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C7C,KAAK,CAAC+E,KAAK,CAAC,MAAM,EAAE,yCAAyC,CAAC;MAChE;IACF,CAAC;IAAA,gBApBKG,eAAeA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoBpB;EAGD,IAAMa,gBAAgB;IAAA,IAAAC,KAAA,GAAApB,iBAAA,CAAG,aAAY;MACnC,IAAI;QACFX,UAAU,CAAC,IAAI,CAAC;QAChB,IAAMgC,IAAI,SAASvF,iBAAiB,CAACwF,oBAAoB,CAAC,CAAC;QAC3DrC,cAAc,CAACoC,IAAI,CAAC;QACpBxB,iBAAiB,CAAC,IAAI0B,IAAI,CAAC,CAAC,CAAC;QAC7BvD,OAAO,CAACC,GAAG,CAAC,gCAAgCoD,IAAI,CAACG,MAAM,iBAAiB,CAAC;MAC3E,CAAC,CAAC,OAAOtD,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAElD,IAAMuD,QAAQ,GAAG,CACf;UACEC,EAAE,EAAE,GAAG;UACPC,SAAS,EAAE,GAAG;UACdjB,QAAQ,EAAE,UAAU;UACpBM,QAAQ,EAAE,OAAO;UACjBE,SAAS,EAAE,OAAO;UAClBU,KAAK,EAAE,EAAE;UACTC,IAAI,EAAE,IAAIN,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC;UAC9BC,KAAK,EAAE;QACT,CAAC,EACD;UACEL,EAAE,EAAE,GAAG;UACPC,SAAS,EAAE,GAAG;UACdjB,QAAQ,EAAE,QAAQ;UAClBM,QAAQ,EAAE,OAAO;UACjBE,SAAS,EAAE,OAAO;UAClBU,KAAK,EAAE,EAAE;UACTC,IAAI,EAAE,IAAIN,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC;UAC9BC,KAAK,EAAE;QACT,CAAC,CACF;QACD9C,cAAc,CAACwC,QAAQ,CAAC;QACxB5B,iBAAiB,CAAC,IAAI0B,IAAI,CAAC,CAAC,CAAC;QAC7BlG,KAAK,CAAC+E,KAAK,CAAC,OAAO,EAAE,0DAA0D,CAAC;MAClF,CAAC,SAAS;QACRf,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAAA,gBAtCK8B,gBAAgBA,CAAA;MAAA,OAAAC,KAAA,CAAAf,KAAA,OAAAC,SAAA;IAAA;EAAA,GAsCrB;EAGD,IAAM0B,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,UAAU,EAAK;IAAA,IAAAC,oBAAA,EAAAC,qBAAA;IAC5C,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIP,IAAI,EAAK;MAC3B,OAAO,IAAIN,IAAI,CAACM,IAAI,CAAC,CAACQ,cAAc,CAAC,OAAO,EAAE;QAC5CC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC;IAED,IAAIC,aAAa,GAAG,UAAUX,UAAU,CAACvB,QAAQ,IAAIuB,UAAU,CAACY,MAAM,IAAI,YAAY,IAAI;IAC1FD,aAAa,IAAI,aAAaX,UAAU,CAACN,SAAS,IAAI;IACtDiB,aAAa,IAAI,aAAaX,UAAU,CAACL,KAAK,OAAO;IACrDgB,aAAa,IAAI,UAAUR,UAAU,CAACH,UAAU,CAACJ,IAAI,CAAC,IAAI;IAG1D,IAAII,UAAU,CAACa,MAAM,EAAE;MACrBF,aAAa,IAAI,WAAWX,UAAU,CAACa,MAAM,IAAI;IACnD;IACA,IAAIb,UAAU,CAACc,IAAI,EAAE;MACnBH,aAAa,IAAI,QAAQX,UAAU,CAACc,IAAI,IAAI;IAC9C;IACA,IAAId,UAAU,CAACe,OAAO,EAAE;MACtBJ,aAAa,IAAI,WAAWX,UAAU,CAACe,OAAO,IAAI;IACpD;IACA,IAAIf,UAAU,CAACgB,QAAQ,EAAE;MACvBL,aAAa,IAAI,WAAWX,UAAU,CAACgB,QAAQ,IAAI;IACrD;IAGAL,aAAa,IAAI,kBAAAV,oBAAA,GAAiBD,UAAU,CAACjB,QAAQ,qBAAnBkB,oBAAA,CAAqBgB,OAAO,CAAC,CAAC,CAAC,MAAAf,qBAAA,GAAKF,UAAU,CAACf,SAAS,qBAApBiB,qBAAA,CAAsBe,OAAO,CAAC,CAAC,CAAC,EAAE;IAExG7H,KAAK,CAAC+E,KAAK,CACT,uBAAuB6B,UAAU,CAACN,SAAS,EAAE,EAC7CiB,aAAa,EACb,CACE;MAAEO,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAU,CAAC,EACnC;MACED,IAAI,EAAE,YAAY;MAClBE,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQ5D,YAAY,CAAC,CAACwC,UAAU,CAACjB,QAAQ,EAAEiB,UAAU,CAACf,SAAS,CAAC,CAAC;MAAA;IAC1E,CAAC,CAEL,CAAC;EACH,CAAC;EAGD,IAAMoC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAI1E,YAAY,EAAE;MAChBa,YAAY,CAAC,CAACb,YAAY,CAACoC,QAAQ,EAAEpC,YAAY,CAACsC,SAAS,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLX,eAAe,CAAC,CAAC;IACnB;EACF,CAAC;EAGDtF,SAAS,CAAC,YAAM;IACdsF,eAAe,CAAC,CAAC;IACjBY,gBAAgB,CAAC,CAAC;IAIlB,IAAMoC,QAAQ,GAAGC,WAAW,CAAC,YAAM;MACjCxF,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACvDkD,gBAAgB,CAAC,CAAC;IACpB,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,YAAM;MACXnD,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDwF,aAAa,CAACF,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAI/B,SAAS,EAAK;IACnC,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,EAAE;IAC5B,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,EAAE;IAC5B,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,EAAE;IAC5B,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,EAAE;IAC5B,OAAO,EAAE;EACX,CAAC;EAGD,IAAMgC,cAAc,GAAG,SAAjBA,cAAcA,CAAIhC,SAAS,EAAK;IACpC,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,SAAS;IACnC,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,SAAS;IACnC,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,SAAS;IACnC,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,SAAS;IACnC,OAAO,SAAS;EAClB,CAAC;EAGD,IAAMiC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIjC,SAAS,EAAK;IACxC,OAAOgC,cAAc,CAAChC,SAAS,CAAC;EAClC,CAAC;EAGD,IAAMkC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAI5B,UAAU,EAAK;IAC3C,IAAM6B,IAAI,GAAGJ,aAAa,CAACzB,UAAU,CAACN,SAAS,CAAC;IAChD,IAAMI,KAAK,GAAGE,UAAU,CAACF,KAAK,IAAI4B,cAAc,CAAC1B,UAAU,CAACN,SAAS,CAAC;IAEtE,OAAOnF,CAAC,CAACuH,OAAO,CAAC;MACfC,IAAI,EAAE;AACZ,iBAAiBF,IAAI;AACrB,kBAAkBA,IAAI;AACtB,4BAA4B/B,KAAK;AACjC;AACA;AACA;AACA;AACA;AACA,qBAAqB+B,IAAI,GAAG,GAAG;AAC/B;AACA;AACA;AACA,UAAU7B,UAAU,CAACN,SAAS,QAAQ;MAChCsC,SAAS,EAAE,mBAAmB;MAC9BC,QAAQ,EAAE,CAACJ,IAAI,EAAEA,IAAI,CAAC;MACtBK,UAAU,EAAE,CAACL,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EAED,OACE3H,KAAA,CAACjB,IAAI;IAACkI,KAAK,EAAE,CAACgB,MAAM,CAACC,SAAS,EAAE;MAAEC,eAAe,EAAE/F,KAAK,CAACgG,MAAM,CAACC,UAAU;MAAEC,UAAU,EAAEjG,MAAM,CAACkG;IAAI,CAAC,CAAE;IAAAC,QAAA,GAEpG1I,IAAA,CAACF,MAAM;MACL6I,KAAK,EAAC,sBAAiB;MACvBC,oBAAoB,EAClB1I,KAAA,CAACjB,IAAI;QAACkI,KAAK,EAAEgB,MAAM,CAACU,WAAY;QAAAH,QAAA,GAC7B/E,cAAc,IACb3D,IAAA,CAACd,IAAI;UAACiI,KAAK,EAAE,CAACgB,MAAM,CAACW,cAAc,EAAE;YAAEhD,KAAK,EAAExD,KAAK,CAACgG,MAAM,CAACS;UAAc,CAAC,CAAE;UAAAL,QAAA,EACzE/E,cAAc,CAACqF,kBAAkB,CAAC,OAAO,EAAE;YAAExC,IAAI,EAAE,SAAS;YAAEC,MAAM,EAAE;UAAU,CAAC;QAAC,CAC/E,CACP,EACDzG,IAAA,CAACX,gBAAgB;UAAC+H,OAAO,EAAElC,gBAAiB;UAACiC,KAAK,EAAEgB,MAAM,CAACc,aAAc;UAAAP,QAAA,EACvE1I,IAAA,CAACR,QAAQ;YAAC0J,IAAI,EAAC,SAAS;YAACrB,IAAI,EAAE,EAAG;YAAC/B,KAAK,EAAExD,KAAK,CAACgG,MAAM,CAACa;UAAK,CAAE;QAAC,CAC/C,CAAC;MAAA,CACf;IACP,CACF,CAAC,EAGFnJ,IAAA,CAACf,IAAI;MAACkI,KAAK,EAAEgB,MAAM,CAACiB,YAAa;MAAAV,QAAA,EAC9BnJ,QAAQ,CAACoB,EAAE,KAAK,KAAK,GACpBT,KAAA,CAACC,YAAY;QACXkJ,MAAM,EAAE9F,SAAU;QAClB+F,IAAI,EAAE,CAAE;QACRnC,KAAK,EAAE;UAAEoC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAd,QAAA,GAGzC1I,IAAA,CAACI,SAAS;UACRqJ,GAAG,EAAC,oDAAoD;UACxDC,WAAW,EAAC;QAAyF,CACtG,CAAC,EAGD/G,YAAY,IACX3C,IAAA,CAACK,MAAM;UACLsJ,QAAQ,EAAE,CAAChH,YAAY,CAACoC,QAAQ,EAAEpC,YAAY,CAACsC,SAAS,CAAE;UAC1DkE,IAAI,EAAE5I,CAAC,CAAC4I,IAAI,CAAC;YACXxH,OAAO,EAAE,6EAA6E;YACtFsG,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;UACrB,CAAC,CAAE;UAAAQ,QAAA,EAEH1I,IAAA,CAACM,KAAK;YAAAoI,QAAA,EAAC;UAAS,CAAO;QAAC,CAClB,CACT,EAGA3F,WAAW,CAAC6G,GAAG,CAAC,UAAC5D,UAAU;UAAA,IAAA6D,qBAAA,EAAAC,sBAAA;UAAA,OAC1B9J,IAAA,CAACK,MAAM;YAELsJ,QAAQ,EAAE,CAAC3D,UAAU,CAACjB,QAAQ,EAAEiB,UAAU,CAACf,SAAS,CAAE;YACtDkE,IAAI,EAAEvB,oBAAoB,CAAC5B,UAAU,CAAE;YACvC+D,aAAa,EAAE;cACbC,KAAK,EAAE,SAAPA,KAAKA,CAAA;gBAAA,OAAQjE,qBAAqB,CAACC,UAAU,CAAC;cAAA;YAChD,CAAE;YAAA0C,QAAA,EAEF1I,IAAA,CAACM,KAAK;cAAAoI,QAAA,EACJxI,KAAA;gBAAKiH,KAAK,EAAE;kBAAE8C,QAAQ,EAAE,OAAO;kBAAEC,QAAQ,EAAE;gBAAO,CAAE;gBAAAxB,QAAA,GAClDxI,KAAA;kBAAKiH,KAAK,EAAE;oBAAEgD,UAAU,EAAE,MAAM;oBAAED,QAAQ,EAAE,MAAM;oBAAEE,YAAY,EAAE,KAAK;oBAAEtE,KAAK,EAAE;kBAAU,CAAE;kBAAA4C,QAAA,GAAC,GAC1F,EAAC1C,UAAU,CAACN,SAAS,EAAC,SACzB;gBAAA,CAAK,CAAC,EACNxF,KAAA;kBAAKiH,KAAK,EAAE;oBAAEiD,YAAY,EAAE;kBAAM,CAAE;kBAAA1B,QAAA,GAClC1I,IAAA;oBAAA0I,QAAA,EAAQ;kBAAM,CAAQ,CAAC,KAAC,EAAC1C,UAAU,CAACvB,QAAQ,IAAIuB,UAAU,CAACY,MAAM,IAAI,YAAY;gBAAA,CAC9E,CAAC,EACN1G,KAAA;kBAAKiH,KAAK,EAAE;oBAAEiD,YAAY,EAAE;kBAAM,CAAE;kBAAA1B,QAAA,GAClC1I,IAAA;oBAAA0I,QAAA,EAAQ;kBAAS,CAAQ,CAAC,KAAC,EAAC1C,UAAU,CAACL,KAAK,EAAC,KAC/C;gBAAA,CAAK,CAAC,EACNzF,KAAA;kBAAKiH,KAAK,EAAE;oBAAEiD,YAAY,EAAE;kBAAM,CAAE;kBAAA1B,QAAA,GAClC1I,IAAA;oBAAA0I,QAAA,EAAQ;kBAAM,CAAQ,CAAC,KAAC,EAAC,IAAIpD,IAAI,CAACU,UAAU,CAACJ,IAAI,CAAC,CAACQ,cAAc,CAAC,OAAO,EAAE;oBACzEC,IAAI,EAAE,SAAS;oBACfC,KAAK,EAAE,SAAS;oBAChBC,GAAG,EAAE,SAAS;oBACdC,IAAI,EAAE,SAAS;oBACfC,MAAM,EAAE,SAAS;oBACjBC,MAAM,EAAE;kBACV,CAAC,CAAC;gBAAA,CACC,CAAC,EACLV,UAAU,CAACa,MAAM,IAChB3G,KAAA;kBAAKiH,KAAK,EAAE;oBAAEiD,YAAY,EAAE;kBAAM,CAAE;kBAAA1B,QAAA,GAClC1I,IAAA;oBAAA0I,QAAA,EAAQ;kBAAO,CAAQ,CAAC,KAAC,EAAC1C,UAAU,CAACa,MAAM;gBAAA,CACxC,CACN,EACAb,UAAU,CAACc,IAAI,IACd5G,KAAA;kBAAKiH,KAAK,EAAE;oBAAEiD,YAAY,EAAE;kBAAM,CAAE;kBAAA1B,QAAA,GAClC1I,IAAA;oBAAA0I,QAAA,EAAQ;kBAAI,CAAQ,CAAC,KAAC,EAAC1C,UAAU,CAACc,IAAI;gBAAA,CACnC,CACN,EACAd,UAAU,CAACe,OAAO,IACjB7G,KAAA;kBAAKiH,KAAK,EAAE;oBAAEiD,YAAY,EAAE;kBAAM,CAAE;kBAAA1B,QAAA,GAClC1I,IAAA;oBAAA0I,QAAA,EAAQ;kBAAO,CAAQ,CAAC,KAAC,EAAC1C,UAAU,CAACe,OAAO;gBAAA,CACzC,CACN,EACAf,UAAU,CAACgB,QAAQ,IAClB9G,KAAA;kBAAKiH,KAAK,EAAE;oBAAEiD,YAAY,EAAE;kBAAM,CAAE;kBAAA1B,QAAA,GAClC1I,IAAA;oBAAA0I,QAAA,EAAQ;kBAAO,CAAQ,CAAC,KAAC,EAAC1C,UAAU,CAACgB,QAAQ;gBAAA,CAC1C,CACN,EACD9G,KAAA;kBAAKiH,KAAK,EAAE;oBAAEkD,SAAS,EAAE,KAAK;oBAAEH,QAAQ,EAAE,MAAM;oBAAEpE,KAAK,EAAE;kBAAO,CAAE;kBAAA4C,QAAA,GAChE1I,IAAA;oBAAA0I,QAAA,EAAQ;kBAAa,CAAQ,CAAC,KAAC,GAAAmB,qBAAA,GAAC7D,UAAU,CAACjB,QAAQ,qBAAnB8E,qBAAA,CAAqB5C,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,GAAA6C,sBAAA,GAAC9D,UAAU,CAACf,SAAS,qBAApB6E,sBAAA,CAAsB7C,OAAO,CAAC,CAAC,CAAC;gBAAA,CAChG,CAAC;cAAA,CACH;YAAC,CACD;UAAC,GApDHjB,UAAU,CAACP,EAqDV,CAAC;QAAA,CACV,CAAC;MAAA,GA9EG,GAAGlC,SAAS,CAAC,CAAC,CAAC,IAAIA,SAAS,CAAC,CAAC,CAAC,EA+ExB,CAAC,GAEfvD,IAAA,CAACQ,OAAO;QACN2G,KAAK,EAAEgB,MAAM,CAACiB,YAAa;QAC3BkB,QAAQ,EAAE5J,eAAgB;QAC1B6J,aAAa,EAAE;UACbxF,QAAQ,EAAE,CAAApC,YAAY,oBAAZA,YAAY,CAAEoC,QAAQ,KAAI,OAAO;UAC3CE,SAAS,EAAE,CAAAtC,YAAY,oBAAZA,YAAY,CAAEsC,SAAS,KAAI,OAAO;UAC7CuF,aAAa,EAAE,GAAG;UAClBC,cAAc,EAAE;QAClB,CAAE;QACFC,iBAAiB,EAAE,IAAK;QACxBC,qBAAqB,EAAE,KAAM;QAC7BC,WAAW,EAAE,IAAK;QAClBC,aAAa,EAAE,IAAK;QACpBC,aAAa,EAAE,IAAK;QACpBC,YAAY,EAAE,IAAK;QAAArC,QAAA,EAGlB3F,WAAW,CAAC6G,GAAG,CAAC,UAAC5D,UAAU;UAAA,OAC1BhG,IAAA,CAACS,QAAQ;YAEPuK,UAAU,EAAE;cACVjG,QAAQ,EAAEiB,UAAU,CAACjB,QAAQ;cAC7BE,SAAS,EAAEe,UAAU,CAACf;YACxB,CAAE;YACF0D,KAAK,EAAE,IAAI3C,UAAU,CAACN,SAAS,SAAU;YACzCuF,WAAW,EAAE,GAAGjF,UAAU,CAACvB,QAAQ,IAAIuB,UAAU,CAACY,MAAM,IAAI,YAAY,gBAAgBZ,UAAU,CAACL,KAAK,KAAM;YAC9GuF,QAAQ,EAAEvD,kBAAkB,CAAC3B,UAAU,CAACN,SAAS,CAAE;YACnD0B,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQrB,qBAAqB,CAACC,UAAU,CAAC;YAAA;UAAC,GAR5CA,UAAU,CAACP,EASjB,CAAC;QAAA,CACH;MAAC,CACK;IACV,CACG,CAAC,EAGPzF,IAAA,CAACf,IAAI;MAACkI,KAAK,EAAEgB,MAAM,CAACgD,QAAS;MAAAzC,QAAA,EAC3B1I,IAAA,CAACX,gBAAgB;QACf8H,KAAK,EAAE,CAACgB,MAAM,CAACiD,aAAa,EAAE;UAAE/C,eAAe,EAAE/F,KAAK,CAACgG,MAAM,CAAC+C;QAAQ,CAAC,CAAE;QACzEjE,OAAO,EAAEC,YAAa;QAAAqB,QAAA,EAEtB1I,IAAA,CAACR,QAAQ;UAAC0J,IAAI,EAAC,QAAQ;UAACrB,IAAI,EAAE,EAAG;UAAC/B,KAAK,EAAExD,KAAK,CAACgG,MAAM,CAACgD;QAAU,CAAE;MAAC,CACnD;IAAC,CACf,CAAC,EAKNnI,OAAO,IACNjD,KAAA,CAACjB,IAAI;MAACkI,KAAK,EAAEgB,MAAM,CAACoD,cAAe;MAAA7C,QAAA,GACjC1I,IAAA,CAACV,iBAAiB;QAACuI,IAAI,EAAC,OAAO;QAAC/B,KAAK,EAAExD,KAAK,CAACgG,MAAM,CAAC+C;MAAQ,CAAE,CAAC,EAC/DrL,IAAA,CAACd,IAAI;QAACiI,KAAK,EAAE,CAACgB,MAAM,CAACqD,WAAW,EAAE;UAAE1F,KAAK,EAAExD,KAAK,CAACgG,MAAM,CAACpB;QAAK,CAAC,CAAE;QAAAwB,QAAA,EAAC;MAEjE,CAAM,CAAC;IAAA,CACH,CACP;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMP,MAAM,GAAGhJ,UAAU,CAACsM,MAAM,CAAC;EAC/BrD,SAAS,EAAE;IACTsD,IAAI,EAAE;EACR,CAAC;EAED7C,WAAW,EAAE;IACX8C,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,GAAG,EAAE;EACP,CAAC;EACD/C,cAAc,EAAE;IACdoB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDlB,aAAa,EAAE;IACb6C,OAAO,EAAE;EACX,CAAC;EACD1C,YAAY,EAAE;IACZsC,IAAI,EAAE;EACR,CAAC;EAEDP,QAAQ,EAAE;IACRxB,QAAQ,EAAE,UAAU;IACpBoC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDZ,aAAa,EAAE;IACb5B,KAAK,EAAE,EAAE;IACTD,MAAM,EAAE,EAAE;IACV0C,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,QAAQ;IACxBN,UAAU,EAAE,QAAQ;IACpBO,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAE7C,KAAK,EAAE,CAAC;MAAED,MAAM,EAAE;IAAE,CAAC;IACrC+C,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE;EAChB,CAAC;EAEDhB,cAAc,EAAE;IACd5B,QAAQ,EAAE,UAAU;IACpBlB,GAAG,EAAE,CAAC;IACN+D,IAAI,EAAE,CAAC;IACPT,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACT3D,eAAe,EAAE,oBAAoB;IACrC6D,cAAc,EAAE,QAAQ;IACxBN,UAAU,EAAE;EACd,CAAC;EACDJ,WAAW,EAAE;IACXnB,SAAS,EAAE,EAAE;IACbH,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAehI,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}