{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { DEFAULT_TOUCH_SLOP } from \"../constants\";\nimport { EventTypes } from \"../interfaces\";\nvar ScaleGestureDetector = function () {\n  function ScaleGestureDetector(callbacks) {\n    _classCallCheck(this, ScaleGestureDetector);\n    this.inProgress = false;\n    this.onScaleBegin = callbacks.onScaleBegin;\n    this.onScale = callbacks.onScale;\n    this.onScaleEnd = callbacks.onScaleEnd;\n    this.spanSlop = DEFAULT_TOUCH_SLOP * 2;\n    this.minSpan = 0;\n  }\n  return _createClass(ScaleGestureDetector, [{\n    key: \"onTouchEvent\",\n    value: function onTouchEvent(event, tracker) {\n      this.currentTime = event.time;\n      var action = event.eventType;\n      var numOfPointers = tracker.trackedPointersCount;\n      var streamComplete = action === EventTypes.UP || action === EventTypes.ADDITIONAL_POINTER_UP || action === EventTypes.CANCEL;\n      if (action === EventTypes.DOWN || streamComplete) {\n        if (this.inProgress) {\n          this.onScaleEnd(this);\n          this.inProgress = false;\n          this.initialSpan = 0;\n        }\n        if (streamComplete) {\n          return true;\n        }\n      }\n      var configChanged = action === EventTypes.DOWN || action === EventTypes.ADDITIONAL_POINTER_UP || action === EventTypes.ADDITIONAL_POINTER_DOWN;\n      var pointerUp = action === EventTypes.ADDITIONAL_POINTER_UP;\n      var ignoredPointer = pointerUp ? event.pointerId : undefined;\n      var div = pointerUp ? numOfPointers - 1 : numOfPointers;\n      var coordsSum = tracker.getAbsoluteCoordsSum();\n      var focusX = coordsSum.x / div;\n      var focusY = coordsSum.y / div;\n      var devSumX = 0;\n      var devSumY = 0;\n      tracker.trackedPointers.forEach(function (value, key) {\n        if (key === ignoredPointer) {\n          return;\n        }\n        devSumX += Math.abs(value.abosoluteCoords.x - focusX);\n        devSumY += Math.abs(value.abosoluteCoords.y - focusY);\n      });\n      var devX = devSumX / div;\n      var devY = devSumY / div;\n      var spanX = devX * 2;\n      var spanY = devY * 2;\n      var span = Math.hypot(spanX, spanY);\n      var wasInProgress = this.inProgress;\n      this._focusX = focusX;\n      this._focusY = focusY;\n      if (this.inProgress && (span < this.minSpan || configChanged)) {\n        this.onScaleEnd(this);\n        this.inProgress = false;\n        this.initialSpan = span;\n      }\n      if (configChanged) {\n        this.initialSpan = this.prevSpan = this._currentSpan = span;\n      }\n      if (!this.inProgress && span >= this.minSpan && (wasInProgress || Math.abs(span - this.initialSpan) > this.spanSlop)) {\n        this.prevSpan = this._currentSpan = span;\n        this.prevTime = this.currentTime;\n        this.inProgress = this.onScaleBegin(this);\n      }\n      if (action !== EventTypes.MOVE) {\n        return true;\n      }\n      this._currentSpan = span;\n      if (this.inProgress && !this.onScale(this)) {\n        return true;\n      }\n      this.prevSpan = this.currentSpan;\n      this.prevTime = this.currentTime;\n      return true;\n    }\n  }, {\n    key: \"calculateScaleFactor\",\n    value: function calculateScaleFactor(numOfPointers) {\n      if (numOfPointers < 2) {\n        return 1;\n      }\n      return this.prevSpan > 0 ? this.currentSpan / this.prevSpan : 1;\n    }\n  }, {\n    key: \"currentSpan\",\n    get: function get() {\n      return this._currentSpan;\n    }\n  }, {\n    key: \"focusX\",\n    get: function get() {\n      return this._focusX;\n    }\n  }, {\n    key: \"focusY\",\n    get: function get() {\n      return this._focusY;\n    }\n  }, {\n    key: \"timeDelta\",\n    get: function get() {\n      return this.currentTime - this.prevTime;\n    }\n  }]);\n}();\nexport { ScaleGestureDetector as default };","map":{"version":3,"names":["DEFAULT_TOUCH_SLOP","EventTypes","ScaleGestureDetector","callbacks","_classCallCheck","inProgress","onScaleBegin","onScale","onScaleEnd","spanSlop","minSpan","_createClass","key","value","onTouchEvent","event","tracker","currentTime","time","action","eventType","numOfPointers","trackedPointersCount","streamComplete","UP","ADDITIONAL_POINTER_UP","CANCEL","DOWN","initialSpan","configChanged","ADDITIONAL_POINTER_DOWN","pointerUp","ignoredPointer","pointerId","undefined","div","coordsSum","getAbsoluteCoordsSum","focusX","x","focusY","y","devSumX","devSumY","trackedPointers","forEach","Math","abs","abosoluteCoords","devX","devY","spanX","spanY","span","hypot","wasInProgress","_focusX","_focusY","prevSpan","_currentSpan","prevTime","MOVE","currentSpan","calculateScaleFactor","get","default"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web\\detectors\\ScaleGestureDetector.ts"],"sourcesContent":["import { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, EventTypes } from '../interfaces';\n\nimport PointerTracker from '../tools/PointerTracker';\n\nexport interface ScaleGestureListener {\n  onScaleBegin: (detector: ScaleGestureDetector) => boolean;\n  onScale: (detector: ScaleGestureDetector) => boolean;\n  onScaleEnd: (detector: ScaleGestureDetector) => void;\n}\n\nexport default class ScaleGestureDetector implements ScaleGestureListener {\n  public onScaleBegin: (detector: ScaleGestureDetector) => boolean;\n  public onScale: (detector: ScaleGestureDetector) => boolean;\n  public onScaleEnd: (detector: ScaleGestureDetector) => void;\n\n  private _focusX!: number;\n  private _focusY!: number;\n\n  private _currentSpan!: number;\n  private prevSpan!: number;\n  private initialSpan!: number;\n\n  private currentTime!: number;\n  private prevTime!: number;\n\n  private inProgress = false;\n\n  private spanSlop: number;\n  private minSpan: number;\n\n  constructor(callbacks: ScaleGestureListener) {\n    this.onScaleBegin = callbacks.onScaleBegin;\n    this.onScale = callbacks.onScale;\n    this.onScaleEnd = callbacks.onScaleEnd;\n\n    this.spanSlop = DEFAULT_TOUCH_SLOP * 2;\n    this.minSpan = 0;\n  }\n\n  public onTouchEvent(event: AdaptedEvent, tracker: PointerTracker): boolean {\n    this.currentTime = event.time;\n\n    const action: EventTypes = event.eventType;\n    const numOfPointers = tracker.trackedPointersCount;\n\n    const streamComplete: boolean =\n      action === EventTypes.UP ||\n      action === EventTypes.ADDITIONAL_POINTER_UP ||\n      action === EventTypes.CANCEL;\n\n    if (action === EventTypes.DOWN || streamComplete) {\n      if (this.inProgress) {\n        this.onScaleEnd(this);\n        this.inProgress = false;\n        this.initialSpan = 0;\n      }\n\n      if (streamComplete) {\n        return true;\n      }\n    }\n\n    const configChanged: boolean =\n      action === EventTypes.DOWN ||\n      action === EventTypes.ADDITIONAL_POINTER_UP ||\n      action === EventTypes.ADDITIONAL_POINTER_DOWN;\n\n    const pointerUp = action === EventTypes.ADDITIONAL_POINTER_UP;\n\n    const ignoredPointer: number | undefined = pointerUp\n      ? event.pointerId\n      : undefined;\n\n    // Determine focal point\n\n    const div: number = pointerUp ? numOfPointers - 1 : numOfPointers;\n\n    const coordsSum = tracker.getAbsoluteCoordsSum();\n\n    const focusX = coordsSum.x / div;\n    const focusY = coordsSum.y / div;\n\n    // Determine average deviation from focal point\n\n    let devSumX = 0;\n    let devSumY = 0;\n\n    tracker.trackedPointers.forEach((value, key) => {\n      if (key === ignoredPointer) {\n        return;\n      }\n\n      devSumX += Math.abs(value.abosoluteCoords.x - focusX);\n      devSumY += Math.abs(value.abosoluteCoords.y - focusY);\n    });\n\n    const devX: number = devSumX / div;\n    const devY: number = devSumY / div;\n\n    const spanX: number = devX * 2;\n    const spanY: number = devY * 2;\n\n    const span = Math.hypot(spanX, spanY);\n\n    // Begin/end events\n    const wasInProgress: boolean = this.inProgress;\n    this._focusX = focusX;\n    this._focusY = focusY;\n\n    if (this.inProgress && (span < this.minSpan || configChanged)) {\n      this.onScaleEnd(this);\n      this.inProgress = false;\n      this.initialSpan = span;\n    }\n\n    if (configChanged) {\n      this.initialSpan = this.prevSpan = this._currentSpan = span;\n    }\n\n    if (\n      !this.inProgress &&\n      span >= this.minSpan &&\n      (wasInProgress || Math.abs(span - this.initialSpan) > this.spanSlop)\n    ) {\n      this.prevSpan = this._currentSpan = span;\n      this.prevTime = this.currentTime;\n      this.inProgress = this.onScaleBegin(this);\n    }\n\n    // Handle motion\n    if (action !== EventTypes.MOVE) {\n      return true;\n    }\n\n    this._currentSpan = span;\n\n    if (this.inProgress && !this.onScale(this)) {\n      return true;\n    }\n\n    this.prevSpan = this.currentSpan;\n    this.prevTime = this.currentTime;\n\n    return true;\n  }\n\n  public calculateScaleFactor(numOfPointers: number): number {\n    if (numOfPointers < 2) {\n      return 1;\n    }\n\n    return this.prevSpan > 0 ? this.currentSpan / this.prevSpan : 1;\n  }\n\n  public get currentSpan() {\n    return this._currentSpan;\n  }\n\n  public get focusX() {\n    return this._focusX;\n  }\n\n  public get focusY() {\n    return this._focusY;\n  }\n\n  public get timeDelta() {\n    return this.currentTime - this.prevTime;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}