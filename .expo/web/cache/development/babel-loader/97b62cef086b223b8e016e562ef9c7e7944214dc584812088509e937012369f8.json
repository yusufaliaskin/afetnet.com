{"ast":null,"code":"\"use strict\";\n\nimport { isTestEnv } from \"../utils\";\nexport var handlerIDToTag = {};\nvar gestures = new Map();\nvar oldHandlers = new Map();\nvar testIDs = new Map();\nexport function registerHandler(handlerTag, handler, testID) {\n  gestures.set(handlerTag, handler);\n  if (isTestEnv() && testID) {\n    testIDs.set(testID, handlerTag);\n  }\n}\nexport function registerOldGestureHandler(handlerTag, handler) {\n  oldHandlers.set(handlerTag, handler);\n}\nexport function unregisterOldGestureHandler(handlerTag) {\n  oldHandlers.delete(handlerTag);\n}\nexport function unregisterHandler(handlerTag, testID) {\n  gestures.delete(handlerTag);\n  if (isTestEnv() && testID) {\n    testIDs.delete(testID);\n  }\n}\nexport function findHandler(handlerTag) {\n  return gestures.get(handlerTag);\n}\nexport function findOldGestureHandler(handlerTag) {\n  return oldHandlers.get(handlerTag);\n}\nexport function findHandlerByTestID(testID) {\n  var handlerTag = testIDs.get(testID);\n  if (handlerTag !== undefined) {\n    var _findHandler;\n    return (_findHandler = findHandler(handlerTag)) != null ? _findHandler : null;\n  }\n  return null;\n}","map":{"version":3,"names":["isTestEnv","handlerIDToTag","gestures","Map","oldHandlers","testIDs","registerHandler","handlerTag","handler","testID","set","registerOldGestureHandler","unregisterOldGestureHandler","delete","unregisterHandler","findHandler","get","findOldGestureHandler","findHandlerByTestID","undefined","_findHandler"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\handlers\\handlersRegistry.ts"],"sourcesContent":["import { isTestEnv } from '../utils';\nimport { GestureType } from './gestures/gesture';\nimport { GestureEvent, HandlerStateChangeEvent } from './gestureHandlerCommon';\n\nexport const handlerIDToTag: Record<string, number> = {};\nconst gestures = new Map<number, GestureType>();\nconst oldHandlers = new Map<number, GestureHandlerCallbacks>();\nconst testIDs = new Map<string, number>();\n\nexport function registerHandler(\n  handlerTag: number,\n  handler: GestureType,\n  testID?: string\n) {\n  gestures.set(handlerTag, handler);\n  if (isTestEnv() && testID) {\n    testIDs.set(testID, handlerTag);\n  }\n}\n\nexport function registerOldGestureHandler(\n  handlerTag: number,\n  handler: GestureHandlerCallbacks\n) {\n  oldHandlers.set(handlerTag, handler);\n}\n\nexport function unregisterOldGestureHandler(handlerTag: number) {\n  oldHandlers.delete(handlerTag);\n}\n\nexport function unregisterHandler(handlerTag: number, testID?: string) {\n  gestures.delete(handlerTag);\n  if (isTestEnv() && testID) {\n    testIDs.delete(testID);\n  }\n}\n\nexport function findHandler(handlerTag: number) {\n  return gestures.get(handlerTag);\n}\n\nexport function findOldGestureHandler(handlerTag: number) {\n  return oldHandlers.get(handlerTag);\n}\n\nexport function findHandlerByTestID(testID: string) {\n  const handlerTag = testIDs.get(testID);\n  if (handlerTag !== undefined) {\n    return findHandler(handlerTag) ?? null;\n  }\n  return null;\n}\n\nexport interface GestureHandlerCallbacks {\n  onGestureEvent: (event: GestureEvent<any>) => void;\n  onGestureStateChange: (event: HandlerStateChangeEvent<any>) => void;\n}\n"],"mappings":";;AAAA,SAASA,SAAS;AAIlB,OAAO,IAAMC,cAAsC,GAAG,CAAC,CAAC;AACxD,IAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAsB,CAAC;AAC/C,IAAMC,WAAW,GAAG,IAAID,GAAG,CAAkC,CAAC;AAC9D,IAAME,OAAO,GAAG,IAAIF,GAAG,CAAiB,CAAC;AAEzC,OAAO,SAASG,eAAeA,CAC7BC,UAAkB,EAClBC,OAAoB,EACpBC,MAAe,EACf;EACAP,QAAQ,CAACQ,GAAG,CAACH,UAAU,EAAEC,OAAO,CAAC;EACjC,IAAIR,SAAS,CAAC,CAAC,IAAIS,MAAM,EAAE;IACzBJ,OAAO,CAACK,GAAG,CAACD,MAAM,EAAEF,UAAU,CAAC;EACjC;AACF;AAEA,OAAO,SAASI,yBAAyBA,CACvCJ,UAAkB,EAClBC,OAAgC,EAChC;EACAJ,WAAW,CAACM,GAAG,CAACH,UAAU,EAAEC,OAAO,CAAC;AACtC;AAEA,OAAO,SAASI,2BAA2BA,CAACL,UAAkB,EAAE;EAC9DH,WAAW,CAACS,MAAM,CAACN,UAAU,CAAC;AAChC;AAEA,OAAO,SAASO,iBAAiBA,CAACP,UAAkB,EAAEE,MAAe,EAAE;EACrEP,QAAQ,CAACW,MAAM,CAACN,UAAU,CAAC;EAC3B,IAAIP,SAAS,CAAC,CAAC,IAAIS,MAAM,EAAE;IACzBJ,OAAO,CAACQ,MAAM,CAACJ,MAAM,CAAC;EACxB;AACF;AAEA,OAAO,SAASM,WAAWA,CAACR,UAAkB,EAAE;EAC9C,OAAOL,QAAQ,CAACc,GAAG,CAACT,UAAU,CAAC;AACjC;AAEA,OAAO,SAASU,qBAAqBA,CAACV,UAAkB,EAAE;EACxD,OAAOH,WAAW,CAACY,GAAG,CAACT,UAAU,CAAC;AACpC;AAEA,OAAO,SAASW,mBAAmBA,CAACT,MAAc,EAAE;EAClD,IAAMF,UAAU,GAAGF,OAAO,CAACW,GAAG,CAACP,MAAM,CAAC;EACtC,IAAIF,UAAU,KAAKY,SAAS,EAAE;IAAA,IAAAC,YAAA;IAC5B,QAAAA,YAAA,GAAOL,WAAW,CAACR,UAAU,CAAC,YAAAa,YAAA,GAAI,IAAI;EACxC;EACA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}