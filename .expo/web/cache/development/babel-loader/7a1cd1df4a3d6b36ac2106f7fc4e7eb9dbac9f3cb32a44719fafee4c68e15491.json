{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nimport { State } from \"../../State\";\nimport { DEFAULT_TOUCH_SLOP } from \"../constants\";\nimport GestureHandler from \"./GestureHandler\";\nimport ScaleGestureDetector from \"../detectors/ScaleGestureDetector\";\nvar PinchGestureHandler = function (_GestureHandler) {\n  function PinchGestureHandler() {\n    var _this;\n    _classCallCheck(this, PinchGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, PinchGestureHandler, [].concat(args));\n    _this.scale = 1;\n    _this.velocity = 0;\n    _this.startingSpan = 0;\n    _this.spanSlop = DEFAULT_TOUCH_SLOP;\n    _this.scaleDetectorListener = {\n      onScaleBegin: function onScaleBegin(detector) {\n        _this.startingSpan = detector.currentSpan;\n        return true;\n      },\n      onScale: function onScale(detector) {\n        var prevScaleFactor = _this.scale;\n        _this.scale *= detector.calculateScaleFactor(_this.tracker.trackedPointersCount);\n        var delta = detector.timeDelta;\n        if (delta > 0) {\n          _this.velocity = (_this.scale - prevScaleFactor) / delta;\n        }\n        if (Math.abs(_this.startingSpan - detector.currentSpan) >= _this.spanSlop && _this.state === State.BEGAN) {\n          _this.activate();\n        }\n        return true;\n      },\n      onScaleEnd: function onScaleEnd(_detector) {}\n    };\n    _this.scaleGestureDetector = new ScaleGestureDetector(_this.scaleDetectorListener);\n    return _this;\n  }\n  _inherits(PinchGestureHandler, _GestureHandler);\n  return _createClass(PinchGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _superPropGet(PinchGestureHandler, \"init\", this, 3)([ref, propsRef]);\n      this.shouldCancelWhenOutside = false;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      return {\n        focalX: this.scaleGestureDetector.focusX,\n        focalY: this.scaleGestureDetector.focusY,\n        velocity: this.velocity,\n        scale: this.scale\n      };\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      _superPropGet(PinchGestureHandler, \"onPointerDown\", this, 3)([event]);\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      _superPropGet(PinchGestureHandler, \"onPointerAdd\", this, 3)([event]);\n      this.tryBegin();\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _superPropGet(PinchGestureHandler, \"onPointerUp\", this, 3)([event]);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.state !== State.ACTIVE) {\n        return;\n      }\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      if (this.state === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _superPropGet(PinchGestureHandler, \"onPointerRemove\", this, 3)([event]);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.state === State.ACTIVE && this.tracker.trackedPointersCount < 2) {\n        this.end();\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      if (this.tracker.trackedPointersCount < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      _superPropGet(PinchGestureHandler, \"onPointerMove\", this, 3)([event]);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      if (this.tracker.trackedPointersCount < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      _superPropGet(PinchGestureHandler, \"onPointerOutOfBounds\", this, 3)([event]);\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin() {\n      if (this.state !== State.UNDETERMINED) {\n        return;\n      }\n      this.resetProgress();\n      this.begin();\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(force) {\n      if (this.state !== State.ACTIVE) {\n        this.resetProgress();\n      }\n      _superPropGet(PinchGestureHandler, \"activate\", this, 3)([force]);\n    }\n  }, {\n    key: \"onReset\",\n    value: function onReset() {\n      this.resetProgress();\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      if (this.state === State.ACTIVE) {\n        return;\n      }\n      this.velocity = 0;\n      this.scale = 1;\n    }\n  }]);\n}(GestureHandler);\nexport { PinchGestureHandler as default };","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","ScaleGestureDetector","PinchGestureHandler","_GestureHandler","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","scale","velocity","startingSpan","spanSlop","scaleDetectorListener","onScaleBegin","detector","currentSpan","onScale","prevScaleFactor","calculateScaleFactor","tracker","trackedPointersCount","delta","timeDelta","Math","abs","state","BEGAN","activate","onScaleEnd","_detector","scaleGestureDetector","_inherits","_createClass","key","value","init","ref","propsRef","_superPropGet","shouldCancelWhenOutside","transformNativeEvent","focalX","focusX","focalY","focusY","onPointerDown","event","addToTracker","tryToSendTouchEvent","onPointerAdd","tryBegin","onTouchEvent","onPointerUp","removeFromTracker","pointerId","ACTIVE","end","fail","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","UNDETERMINED","resetProgress","begin","force","onReset","default"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web\\handlers\\PinchGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector, {\n  ScaleGestureListener,\n} from '../detectors/ScaleGestureDetector';\n\nexport default class PinchGestureHandler extends GestureHandler {\n  private scale = 1;\n  private velocity = 0;\n\n  private startingSpan = 0;\n  private spanSlop = DEFAULT_TOUCH_SLOP;\n\n  private scaleDetectorListener: ScaleGestureListener = {\n    onScaleBegin: (detector: ScaleGestureDetector): boolean => {\n      this.startingSpan = detector.currentSpan;\n      return true;\n    },\n    onScale: (detector: ScaleGestureDetector): boolean => {\n      const prevScaleFactor: number = this.scale;\n      this.scale *= detector.calculateScaleFactor(\n        this.tracker.trackedPointersCount\n      );\n\n      const delta = detector.timeDelta;\n      if (delta > 0) {\n        this.velocity = (this.scale - prevScaleFactor) / delta;\n      }\n\n      if (\n        Math.abs(this.startingSpan - detector.currentSpan) >= this.spanSlop &&\n        this.state === State.BEGAN\n      ) {\n        this.activate();\n      }\n      return true;\n    },\n    onScaleEnd: (\n      _detector: ScaleGestureDetector\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ): void => {},\n  };\n\n  private scaleGestureDetector: ScaleGestureDetector = new ScaleGestureDetector(\n    this.scaleDetectorListener\n  );\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n\n    this.shouldCancelWhenOutside = false;\n  }\n\n  protected transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.focusX,\n      focalY: this.scaleGestureDetector.focusY,\n      velocity: this.velocity,\n      scale: this.scale,\n    };\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.state !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.state === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.state === State.ACTIVE && this.tracker.trackedPointersCount < 2) {\n      this.end();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n\n  private tryBegin(): void {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.resetProgress();\n    this.begin();\n  }\n\n  public activate(force?: boolean): void {\n    if (this.state !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(force);\n  }\n\n  protected onReset(): void {\n    this.resetProgress();\n  }\n\n  protected resetProgress(): void {\n    if (this.state === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}