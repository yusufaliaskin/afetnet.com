{"ast":null,"code":"\"use strict\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { State } from \"../../State\";\nimport { TouchEventType, EventTypes } from \"../interfaces\";\nimport GestureHandlerOrchestrator from \"../tools/GestureHandlerOrchestrator\";\nimport InteractionManager from \"../tools/InteractionManager\";\nimport PointerTracker from \"../tools/PointerTracker\";\nimport { MouseButton } from \"../../handlers/gestureHandlerCommon\";\nimport { PointerType } from \"../../PointerType\";\nvar GestureHandler = function () {\n  function GestureHandler(delegate) {\n    var _this = this;\n    _classCallCheck(this, GestureHandler);\n    this.lastSentState = null;\n    this._state = State.UNDETERMINED;\n    this._shouldCancelWhenOutside = false;\n    this.hasCustomActivationCriteria = false;\n    this._enabled = false;\n    this._config = {\n      enabled: false\n    };\n    this._tracker = new PointerTracker();\n    this._activationIndex = 0;\n    this._awaiting = false;\n    this._active = false;\n    this._shouldResetProgress = false;\n    this._pointerType = PointerType.MOUSE;\n    this.sendEvent = function (newState, oldState) {\n      var _this$propsRef$curren = _this.propsRef.current,\n        onGestureHandlerEvent = _this$propsRef$curren.onGestureHandlerEvent,\n        onGestureHandlerStateChange = _this$propsRef$curren.onGestureHandlerStateChange;\n      var resultEvent = _this.transformEventData(newState, oldState);\n      if (_this.lastSentState !== newState) {\n        _this.lastSentState = newState;\n        invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n      }\n      if (_this.state === State.ACTIVE) {\n        resultEvent.nativeEvent.oldState = undefined;\n        invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n      }\n    };\n    this._delegate = delegate;\n  }\n  return _createClass(GestureHandler, [{\n    key: \"init\",\n    value: function init(viewRef, propsRef) {\n      this.propsRef = propsRef;\n      this.viewRef = viewRef;\n      this.state = State.UNDETERMINED;\n      this.delegate.init(viewRef, this);\n    }\n  }, {\n    key: \"attachEventManager\",\n    value: function attachEventManager(manager) {\n      manager.setOnPointerDown(this.onPointerDown.bind(this));\n      manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n      manager.setOnPointerUp(this.onPointerUp.bind(this));\n      manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n      manager.setOnPointerMove(this.onPointerMove.bind(this));\n      manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n      manager.setOnPointerLeave(this.onPointerLeave.bind(this));\n      manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n      manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n      manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));\n      manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));\n      manager.setOnWheel(this.onWheel.bind(this));\n      manager.registerListeners();\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {}\n  }, {\n    key: \"onReset\",\n    value: function onReset() {}\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {}\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.tracker.resetTracker();\n      this.onReset();\n      this.resetProgress();\n      this.delegate.reset();\n      this.state = State.UNDETERMINED;\n    }\n  }, {\n    key: \"moveToState\",\n    value: function moveToState(newState, sendIfDisabled) {\n      if (this.state === newState) {\n        return;\n      }\n      var oldState = this.state;\n      this.state = newState;\n      if (this.tracker.trackedPointersCount > 0 && this.config.needsPointerData && this.isFinished()) {\n        this.cancelTouches();\n      }\n      GestureHandlerOrchestrator.instance.onHandlerStateChange(this, newState, oldState, sendIfDisabled);\n      this.onStateChange(newState, oldState);\n      if (!this.enabled && this.isFinished()) {\n        this.state = State.UNDETERMINED;\n      }\n    }\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange(_newState, _oldState) {}\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      if (!this.checkHitSlop()) {\n        return;\n      }\n      if (this.state === State.UNDETERMINED) {\n        this.moveToState(State.BEGAN);\n      }\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(sendIfDisabled) {\n      if (this.state === State.ACTIVE || this.state === State.BEGAN) {\n        this.delegate.onFail();\n        this.moveToState(State.FAILED, sendIfDisabled);\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel(sendIfDisabled) {\n      if (this.state === State.ACTIVE || this.state === State.UNDETERMINED || this.state === State.BEGAN) {\n        this.onCancel();\n        this.delegate.onCancel();\n        this.moveToState(State.CANCELLED, sendIfDisabled);\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if ((this.config.manualActivation !== true || force) && (this.state === State.UNDETERMINED || this.state === State.BEGAN)) {\n        this.delegate.onActivate();\n        this.moveToState(State.ACTIVE);\n      }\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (this.state === State.BEGAN || this.state === State.ACTIVE) {\n        this.delegate.onEnd();\n        this.moveToState(State.END);\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"getShouldResetProgress\",\n    value: function getShouldResetProgress() {\n      return this.shouldResetProgress;\n    }\n  }, {\n    key: \"setShouldResetProgress\",\n    value: function setShouldResetProgress(value) {\n      this.shouldResetProgress = value;\n    }\n  }, {\n    key: \"shouldWaitForHandlerFailure\",\n    value: function shouldWaitForHandlerFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return InteractionManager.instance.shouldWaitForHandlerFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRequireToWaitForFailure\",\n    value: function shouldRequireToWaitForFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return InteractionManager.instance.shouldRequireHandlerToWaitForFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler) {\n      if (handler === this) {\n        return true;\n      }\n      return InteractionManager.instance.shouldRecognizeSimultaneously(this, handler);\n    }\n  }, {\n    key: \"shouldBeCancelledByOther\",\n    value: function shouldBeCancelledByOther(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return InteractionManager.instance.shouldHandlerBeCancelledBy(this, handler);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      GestureHandlerOrchestrator.instance.recordHandlerIfNotPresent(this);\n      this.pointerType = event.pointerType;\n      if (this.pointerType === PointerType.TOUCH) {\n        GestureHandlerOrchestrator.instance.cancelMouseAndPenGestures(this);\n      }\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tryToSendMoveEvent(false, event);\n    }\n  }, {\n    key: \"onPointerLeave\",\n    value: function onPointerLeave(event) {\n      if (this.shouldCancelWhenOutside) {\n        switch (this.state) {\n          case State.ACTIVE:\n            this.cancel();\n            break;\n          case State.BEGAN:\n            this.fail();\n            break;\n        }\n        return;\n      }\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerEnter\",\n    value: function onPointerEnter(event) {\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      this.tryToSendTouchEvent(event);\n      this.cancel();\n      this.reset();\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.tryToSendMoveEvent(true, event);\n    }\n  }, {\n    key: \"onPointerMoveOver\",\n    value: function onPointerMoveOver(_event) {}\n  }, {\n    key: \"onPointerMoveOut\",\n    value: function onPointerMoveOut(_event) {}\n  }, {\n    key: \"onWheel\",\n    value: function onWheel(_event) {}\n  }, {\n    key: \"tryToSendMoveEvent\",\n    value: function tryToSendMoveEvent(out, event) {\n      if (out && this.shouldCancelWhenOutside || !this.enabled) {\n        return;\n      }\n      if (this.active) {\n        this.sendEvent(this.state, this.state);\n      }\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"tryToSendTouchEvent\",\n    value: function tryToSendTouchEvent(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"sendTouchEvent\",\n    value: function sendTouchEvent(event) {\n      if (!this.enabled) {\n        return;\n      }\n      var onGestureHandlerEvent = this.propsRef.current.onGestureHandlerEvent;\n      var touchEvent = this.transformTouchEvent(event);\n      if (touchEvent) {\n        invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n      }\n    }\n  }, {\n    key: \"transformEventData\",\n    value: function transformEventData(newState, oldState) {\n      return {\n        nativeEvent: _objectSpread(_objectSpread({\n          numberOfPointers: this.tracker.trackedPointersCount,\n          state: newState,\n          pointerInside: this.delegate.isPointerInBounds(this.tracker.getAbsoluteCoordsAverage())\n        }, this.transformNativeEvent()), {}, {\n          handlerTag: this.handlerTag,\n          target: this.viewRef,\n          oldState: newState !== oldState ? oldState : undefined,\n          pointerType: this.pointerType\n        }),\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"transformTouchEvent\",\n    value: function transformTouchEvent(event) {\n      var _this2 = this;\n      var rect = this.delegate.measureView();\n      var all = [];\n      var changed = [];\n      var trackerData = this.tracker.trackedPointers;\n      if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n        return;\n      }\n      trackerData.forEach(function (element, key) {\n        var id = _this2.tracker.getMappedTouchEventId(key);\n        all.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y\n        });\n      });\n      if (event.eventType !== EventTypes.CANCEL) {\n        changed.push({\n          id: this.tracker.getMappedTouchEventId(event.pointerId),\n          x: event.x - rect.pageX,\n          y: event.y - rect.pageY,\n          absoluteX: event.x,\n          absoluteY: event.y\n        });\n      } else {\n        trackerData.forEach(function (element, key) {\n          var id = _this2.tracker.getMappedTouchEventId(key);\n          changed.push({\n            id: id,\n            x: element.abosoluteCoords.x - rect.pageX,\n            y: element.abosoluteCoords.y - rect.pageY,\n            absoluteX: element.abosoluteCoords.x,\n            absoluteY: element.abosoluteCoords.y\n          });\n        });\n      }\n      var eventType = TouchEventType.UNDETERMINED;\n      switch (event.eventType) {\n        case EventTypes.DOWN:\n        case EventTypes.ADDITIONAL_POINTER_DOWN:\n          eventType = TouchEventType.DOWN;\n          break;\n        case EventTypes.UP:\n        case EventTypes.ADDITIONAL_POINTER_UP:\n          eventType = TouchEventType.UP;\n          break;\n        case EventTypes.MOVE:\n          eventType = TouchEventType.MOVE;\n          break;\n        case EventTypes.CANCEL:\n          eventType = TouchEventType.CANCELLED;\n          break;\n      }\n      var numberOfTouches = all.length;\n      if (event.eventType === EventTypes.UP || event.eventType === EventTypes.ADDITIONAL_POINTER_UP) {\n        --numberOfTouches;\n      }\n      return {\n        nativeEvent: {\n          handlerTag: this.handlerTag,\n          state: this.state,\n          eventType: eventType,\n          changedTouches: changed,\n          allTouches: all,\n          numberOfTouches: numberOfTouches,\n          pointerType: this.pointerType\n        },\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"cancelTouches\",\n    value: function cancelTouches() {\n      var _this3 = this;\n      var rect = this.delegate.measureView();\n      var all = [];\n      var changed = [];\n      var trackerData = this.tracker.trackedPointers;\n      if (trackerData.size === 0) {\n        return;\n      }\n      trackerData.forEach(function (element, key) {\n        var id = _this3.tracker.getMappedTouchEventId(key);\n        all.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y\n        });\n        changed.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y\n        });\n      });\n      var cancelEvent = {\n        nativeEvent: {\n          handlerTag: this.handlerTag,\n          state: this.state,\n          eventType: TouchEventType.CANCELLED,\n          changedTouches: changed,\n          allTouches: all,\n          numberOfTouches: all.length,\n          pointerType: this.pointerType\n        },\n        timeStamp: Date.now()\n      };\n      var onGestureHandlerEvent = this.propsRef.current.onGestureHandlerEvent;\n      invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      var lastCoords = this.tracker.getAbsoluteCoordsAverage();\n      var lastRelativeCoords = this.tracker.getRelativeCoordsAverage();\n      return {\n        x: lastRelativeCoords.x,\n        y: lastRelativeCoords.y,\n        absoluteX: lastCoords.x,\n        absoluteY: lastCoords.y\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = _objectWithoutProperties(_ref, _excluded);\n      this._config = _objectSpread({\n        enabled: enabled\n      }, props);\n      if (this.enabled !== enabled) {\n        this.delegate.onEnabledChange(enabled);\n      }\n      this.enabled = enabled;\n      if (this.config.shouldCancelWhenOutside !== undefined) {\n        this.shouldCancelWhenOutside = this.config.shouldCancelWhenOutside;\n      }\n      this.validateHitSlops();\n      if (this.enabled) {\n        return;\n      }\n      switch (this.state) {\n        case State.ACTIVE:\n          this.fail(true);\n          break;\n        case State.UNDETERMINED:\n          GestureHandlerOrchestrator.instance.removeHandlerFromOrchestrator(this);\n          break;\n        default:\n          this.cancel(true);\n          break;\n      }\n    }\n  }, {\n    key: \"checkCustomActivationCriteria\",\n    value: function checkCustomActivationCriteria(criterias) {\n      for (var key in this.config) {\n        if (criterias.indexOf(key) >= 0) {\n          this.hasCustomActivationCriteria = true;\n        }\n      }\n    }\n  }, {\n    key: \"validateHitSlops\",\n    value: function validateHitSlops() {\n      if (!this.config.hitSlop) {\n        return;\n      }\n      if (this.config.hitSlop.left !== undefined && this.config.hitSlop.right !== undefined && this.config.hitSlop.width !== undefined) {\n        throw new Error('HitSlop Error: Cannot define left, right and width at the same time');\n      }\n      if (this.config.hitSlop.width !== undefined && this.config.hitSlop.left === undefined && this.config.hitSlop.right === undefined) {\n        throw new Error('HitSlop Error: When width is defined, either left or right has to be defined');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top !== undefined && this.config.hitSlop.bottom !== undefined) {\n        throw new Error('HitSlop Error: Cannot define top, bottom and height at the same time');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top === undefined && this.config.hitSlop.bottom === undefined) {\n        throw new Error('HitSlop Error: When height is defined, either top or bottom has to be defined');\n      }\n    }\n  }, {\n    key: \"checkHitSlop\",\n    value: function checkHitSlop() {\n      if (!this.config.hitSlop) {\n        return true;\n      }\n      var _this$delegate$measur = this.delegate.measureView(),\n        width = _this$delegate$measur.width,\n        height = _this$delegate$measur.height;\n      var left = 0;\n      var top = 0;\n      var right = width;\n      var bottom = height;\n      if (this.config.hitSlop.horizontal !== undefined) {\n        left -= this.config.hitSlop.horizontal;\n        right += this.config.hitSlop.horizontal;\n      }\n      if (this.config.hitSlop.vertical !== undefined) {\n        top -= this.config.hitSlop.vertical;\n        bottom += this.config.hitSlop.vertical;\n      }\n      if (this.config.hitSlop.left !== undefined) {\n        left = -this.config.hitSlop.left;\n      }\n      if (this.config.hitSlop.right !== undefined) {\n        right = width + this.config.hitSlop.right;\n      }\n      if (this.config.hitSlop.top !== undefined) {\n        top = -this.config.hitSlop.top;\n      }\n      if (this.config.hitSlop.bottom !== undefined) {\n        bottom = height + this.config.hitSlop.bottom;\n      }\n      if (this.config.hitSlop.width !== undefined) {\n        if (this.config.hitSlop.left !== undefined) {\n          right = left + this.config.hitSlop.width;\n        } else if (this.config.hitSlop.right !== undefined) {\n          left = right - this.config.hitSlop.width;\n        }\n      }\n      if (this.config.hitSlop.height !== undefined) {\n        if (this.config.hitSlop.top !== undefined) {\n          bottom = top + this.config.hitSlop.height;\n        } else if (this.config.hitSlop.bottom !== undefined) {\n          top = bottom - this.config.hitSlop.height;\n        }\n      }\n      var rect = this.delegate.measureView();\n      var lastCoords = this.tracker.getLastAbsoluteCoords();\n      if (!lastCoords) {\n        return false;\n      }\n      var offsetX = lastCoords.x - rect.pageX;\n      var offsetY = lastCoords.y - rect.pageY;\n      return offsetX >= left && offsetX <= right && offsetY >= top && offsetY <= bottom;\n    }\n  }, {\n    key: \"isButtonInConfig\",\n    value: function isButtonInConfig(mouseButton) {\n      return !mouseButton || !this.config.mouseButton && mouseButton === MouseButton.LEFT || this.config.mouseButton && mouseButton & this.config.mouseButton;\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {}\n  }, {\n    key: \"onDestroy\",\n    value: function onDestroy() {\n      GestureHandlerOrchestrator.instance.removeHandlerFromOrchestrator(this);\n      this.delegate.destroy(this.config);\n    }\n  }, {\n    key: \"handlerTag\",\n    get: function get() {\n      return this._handlerTag;\n    },\n    set: function set(value) {\n      this._handlerTag = value;\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      return this._config;\n    }\n  }, {\n    key: \"delegate\",\n    get: function get() {\n      return this._delegate;\n    }\n  }, {\n    key: \"tracker\",\n    get: function get() {\n      return this._tracker;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this._state;\n    },\n    set: function set(value) {\n      this._state = value;\n    }\n  }, {\n    key: \"shouldCancelWhenOutside\",\n    get: function get() {\n      return this._shouldCancelWhenOutside;\n    },\n    set: function set(value) {\n      this._shouldCancelWhenOutside = value;\n    }\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return this._enabled;\n    },\n    set: function set(value) {\n      this._enabled = value;\n    }\n  }, {\n    key: \"pointerType\",\n    get: function get() {\n      return this._pointerType;\n    },\n    set: function set(value) {\n      this._pointerType = value;\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    },\n    set: function set(value) {\n      this._active = value;\n    }\n  }, {\n    key: \"awaiting\",\n    get: function get() {\n      return this._awaiting;\n    },\n    set: function set(value) {\n      this._awaiting = value;\n    }\n  }, {\n    key: \"activationIndex\",\n    get: function get() {\n      return this._activationIndex;\n    },\n    set: function set(value) {\n      this._activationIndex = value;\n    }\n  }, {\n    key: \"shouldResetProgress\",\n    get: function get() {\n      return this._shouldResetProgress;\n    },\n    set: function set(value) {\n      this._shouldResetProgress = value;\n    }\n  }, {\n    key: \"getTrackedPointersID\",\n    value: function getTrackedPointersID() {\n      return this.tracker.trackedPointersIDs;\n    }\n  }, {\n    key: \"isFinished\",\n    value: function isFinished() {\n      return this.state === State.END || this.state === State.FAILED || this.state === State.CANCELLED;\n    }\n  }]);\n}();\nexport { GestureHandler as default };\nfunction invokeNullableMethod(method, event) {\n  if (!method) {\n    return;\n  }\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    var handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n  var argMapping = method.__nodeConfig.argMapping;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n  for (var _ref2 of argMapping.entries()) {\n    var _ref3 = _slicedToArray(_ref2, 2);\n    var index = _ref3[0];\n    var _ref3$ = _slicedToArray(_ref3[1], 2);\n    var key = _ref3$[0];\n    var value = _ref3$[1];\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n    var nativeValue = event.nativeEvent[key];\n    if (value != null && value.setValue) {\n      value.setValue(nativeValue);\n    } else {\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n  return;\n}","map":{"version":3,"names":["State","TouchEventType","EventTypes","GestureHandlerOrchestrator","InteractionManager","PointerTracker","MouseButton","PointerType","GestureHandler","delegate","_this","_classCallCheck","lastSentState","_state","UNDETERMINED","_shouldCancelWhenOutside","hasCustomActivationCriteria","_enabled","_config","enabled","_tracker","_activationIndex","_awaiting","_active","_shouldResetProgress","_pointerType","MOUSE","sendEvent","newState","oldState","_this$propsRef$curren","propsRef","current","onGestureHandlerEvent","onGestureHandlerStateChange","resultEvent","transformEventData","invokeNullableMethod","state","ACTIVE","nativeEvent","undefined","_delegate","_createClass","key","value","init","viewRef","attachEventManager","manager","setOnPointerDown","onPointerDown","bind","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerLeave","onPointerLeave","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setOnPointerMoveOver","onPointerMoveOver","setOnPointerMoveOut","onPointerMoveOut","setOnWheel","onWheel","registerListeners","onCancel","onReset","resetProgress","reset","tracker","resetTracker","moveToState","sendIfDisabled","trackedPointersCount","config","needsPointerData","isFinished","cancelTouches","instance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","onFail","FAILED","cancel","CANCELLED","activate","force","arguments","length","manualActivation","onActivate","end","onEnd","END","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","shouldWaitForHandlerFailure","handler","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","pointerType","TOUCH","cancelMouseAndPenGestures","tryToSendTouchEvent","tryToSendMoveEvent","shouldCancelWhenOutside","_event","out","active","sendTouchEvent","touchEvent","transformTouchEvent","_objectSpread","numberOfPointers","pointerInside","isPointerInBounds","getAbsoluteCoordsAverage","transformNativeEvent","handlerTag","target","timeStamp","Date","now","_this2","rect","measureView","all","changed","trackerData","trackedPointers","size","has","pointerId","forEach","element","id","getMappedTouchEventId","push","x","abosoluteCoords","pageX","y","pageY","absoluteX","absoluteY","eventType","CANCEL","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","changedTouches","allTouches","_this3","cancelEvent","lastCoords","lastRelativeCoords","getRelativeCoordsAverage","updateGestureConfig","_ref","_ref$enabled","props","_objectWithoutProperties","_excluded","onEnabledChange","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hitSlop","left","right","width","Error","height","top","bottom","_this$delegate$measur","horizontal","vertical","getLastAbsoluteCoords","offsetX","offsetY","isButtonInConfig","mouseButton","LEFT","resetConfig","onDestroy","destroy","get","_handlerTag","set","getTrackedPointersID","trackedPointersIDs","default","method","__getHandler","argMapping","__nodeConfig","Array","isArray","_ref2","entries","_ref3","_slicedToArray","index","_ref3$","nativeValue","setValue"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web\\handlers\\GestureHandler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport IGestureHandler from './IGestureHandler';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { PointerType } from '../../PointerType';\nimport { GestureHandlerDelegate } from '../tools/GestureHandlerDelegate';\n\nexport default abstract class GestureHandler implements IGestureHandler {\n  private lastSentState: State | null = null;\n\n  private _state: State = State.UNDETERMINED;\n\n  private _shouldCancelWhenOutside = false;\n  protected hasCustomActivationCriteria = false;\n  private _enabled = false;\n\n  private viewRef!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private _handlerTag!: number;\n  private _config: Config = { enabled: false };\n\n  private _tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  private _activationIndex = 0;\n\n  private _awaiting = false;\n  private _active = false;\n\n  private _shouldResetProgress = false;\n  private _pointerType: PointerType = PointerType.MOUSE;\n\n  private _delegate: GestureHandlerDelegate<unknown, IGestureHandler>;\n\n  public constructor(\n    delegate: GestureHandlerDelegate<unknown, IGestureHandler>\n  ) {\n    this._delegate = delegate;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(viewRef: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.viewRef = viewRef;\n\n    this.state = State.UNDETERMINED;\n\n    this.delegate.init(viewRef, this);\n  }\n\n  public attachEventManager(manager: EventManager<unknown>): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerLeave(this.onPointerLeave.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));\n    manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));\n    manager.setOnWheel(this.onWheel.bind(this));\n\n    manager.registerListeners();\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.delegate.reset();\n    this.state = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.state === newState) {\n      return;\n    }\n\n    const oldState = this.state;\n    this.state = newState;\n\n    if (\n      this.tracker.trackedPointersCount > 0 &&\n      this.config.needsPointerData &&\n      this.isFinished()\n    ) {\n      this.cancelTouches();\n    }\n\n    GestureHandlerOrchestrator.instance.onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n\n    if (!this.enabled && this.isFinished()) {\n      this.state = State.UNDETERMINED;\n    }\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.state === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (this.state === State.ACTIVE || this.state === State.BEGAN) {\n      // Here the order of calling the delegate and moveToState is important.\n      // At this point we can use currentState as previuos state, because immediately after changing cursor we call moveToState method.\n      this.delegate.onFail();\n\n      this.moveToState(State.FAILED, sendIfDisabled);\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.state === State.ACTIVE ||\n      this.state === State.UNDETERMINED ||\n      this.state === State.BEGAN\n    ) {\n      this.onCancel();\n\n      // Same as above - order matters\n      this.delegate.onCancel();\n\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n    }\n  }\n\n  public activate(force = false) {\n    if (\n      (this.config.manualActivation !== true || force) &&\n      (this.state === State.UNDETERMINED || this.state === State.BEGAN)\n    ) {\n      this.delegate.onActivate();\n      this.moveToState(State.ACTIVE);\n    }\n  }\n\n  public end() {\n    if (this.state === State.BEGAN || this.state === State.ACTIVE) {\n      // Same as above - order matters\n      this.delegate.onEnd();\n\n      this.moveToState(State.END);\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.instance.shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.instance.shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.instance.shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.instance.shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.instance.recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.instance.cancelMouseAndPenGestures(this);\n    }\n\n    // TODO: Bring back touch events along with introducing `handleDown` method that will handle handler specific stuff\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false, event);\n  }\n  protected onPointerLeave(event: AdaptedEvent): void {\n    if (this.shouldCancelWhenOutside) {\n      switch (this.state) {\n        case State.ACTIVE:\n          this.cancel();\n          break;\n        case State.BEGAN:\n          this.fail();\n          break;\n      }\n      return;\n    }\n\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n\n    this.cancel();\n    this.reset();\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true, event);\n  }\n  protected onPointerMoveOver(_event: AdaptedEvent): void {\n    // Used only by hover gesture handler atm\n  }\n  protected onPointerMoveOut(_event: AdaptedEvent): void {\n    // Used only by hover gesture handler atm\n  }\n  protected onWheel(_event: AdaptedEvent): void {\n    // Used only by pan gesture handler\n  }\n  protected tryToSendMoveEvent(out: boolean, event: AdaptedEvent): void {\n    if ((out && this.shouldCancelWhenOutside) || !this.enabled) {\n      return;\n    }\n\n    if (this.active) {\n      this.sendEvent(this.state, this.state);\n    }\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected tryToSendTouchEvent(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined =\n      this.transformTouchEvent(event);\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const { onGestureHandlerEvent, onGestureHandlerStateChange }: PropsRef =\n      this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.state === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.trackedPointersCount,\n        state: newState,\n        pointerInside: this.delegate.isPointerInBounds(\n          this.tracker.getAbsoluteCoordsAverage()\n        ),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.viewRef,\n        oldState: newState !== oldState ? oldState : undefined,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.trackedPointers;\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.pageX,\n        y: event.y - rect.pageY,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.state,\n        eventType: eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private cancelTouches(): void {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.trackedPointers;\n\n    if (trackerData.size === 0) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n\n      changed.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n    });\n\n    const cancelEvent: ResultTouchEvent = {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.state,\n        eventType: TouchEventType.CANCELLED,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: all.length,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n  }\n\n  protected transformNativeEvent(): Record<string, unknown> {\n    // Those properties are shared by most handlers and if not this method will be overriden\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    const lastRelativeCoords = this.tracker.getRelativeCoordsAverage();\n\n    return {\n      x: lastRelativeCoords.x,\n      y: lastRelativeCoords.y,\n      absoluteX: lastCoords.x,\n      absoluteY: lastCoords.y,\n    };\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this._config = { enabled: enabled, ...props };\n\n    if (this.enabled !== enabled) {\n      this.delegate.onEnabledChange(enabled);\n    }\n\n    this.enabled = enabled;\n\n    if (this.config.shouldCancelWhenOutside !== undefined) {\n      this.shouldCancelWhenOutside = this.config.shouldCancelWhenOutside;\n    }\n\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.state) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.instance.removeHandlerFromOrchestrator(this);\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const { width, height } = this.delegate.measureView();\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = height + this.config.hitSlop.bottom;\n    }\n\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect = this.delegate.measureView();\n\n    const lastCoords = this.tracker.getLastAbsoluteCoords();\n\n    if (!lastCoords) {\n      return false;\n    }\n\n    const offsetX: number = lastCoords.x - rect.pageX;\n    const offsetY: number = lastCoords.y - rect.pageY;\n\n    return (\n      offsetX >= left && offsetX <= right && offsetY >= top && offsetY <= bottom\n    );\n  }\n\n  public isButtonInConfig(mouseButton: MouseButton | undefined) {\n    return (\n      !mouseButton ||\n      (!this.config.mouseButton && mouseButton === MouseButton.LEFT) ||\n      (this.config.mouseButton && mouseButton & this.config.mouseButton)\n    );\n  }\n\n  protected resetConfig(): void {}\n\n  public onDestroy(): void {\n    GestureHandlerOrchestrator.instance.removeHandlerFromOrchestrator(this);\n    this.delegate.destroy(this.config);\n  }\n\n  //\n  // Getters and setters\n  //\n\n  public get handlerTag() {\n    return this._handlerTag;\n  }\n  public set handlerTag(value: number) {\n    this._handlerTag = value;\n  }\n\n  public get config(): Config {\n    return this._config;\n  }\n\n  public get delegate() {\n    return this._delegate;\n  }\n\n  public get tracker() {\n    return this._tracker;\n  }\n\n  public get state(): State {\n    return this._state;\n  }\n  protected set state(value: State) {\n    this._state = value;\n  }\n\n  public get shouldCancelWhenOutside() {\n    return this._shouldCancelWhenOutside;\n  }\n  protected set shouldCancelWhenOutside(value) {\n    this._shouldCancelWhenOutside = value;\n  }\n\n  public get enabled() {\n    return this._enabled;\n  }\n  protected set enabled(value) {\n    this._enabled = value;\n  }\n\n  public get pointerType(): PointerType {\n    return this._pointerType;\n  }\n  protected set pointerType(value: PointerType) {\n    this._pointerType = value;\n  }\n\n  public get active() {\n    return this._active;\n  }\n  protected set active(value) {\n    this._active = value;\n  }\n\n  public get awaiting() {\n    return this._awaiting;\n  }\n  protected set awaiting(value) {\n    this._awaiting = value;\n  }\n\n  public get activationIndex() {\n    return this._activationIndex;\n  }\n  protected set activationIndex(value) {\n    this._activationIndex = value;\n  }\n\n  public get shouldResetProgress() {\n    return this._shouldResetProgress;\n  }\n  protected set shouldResetProgress(value) {\n    this._shouldResetProgress = value;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.trackedPointersIDs;\n  }\n\n  private isFinished(): boolean {\n    return (\n      this.state === State.END ||\n      this.state === State.FAILED ||\n      this.state === State.CANCELLED\n    );\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping }: { argMapping: unknown } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      // Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      // RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}