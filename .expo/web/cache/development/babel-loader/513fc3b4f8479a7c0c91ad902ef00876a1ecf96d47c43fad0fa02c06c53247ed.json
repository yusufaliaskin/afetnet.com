{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nimport EventManager from \"./EventManager\";\nimport { MouseButton } from \"../../handlers/gestureHandlerCommon\";\nimport { EventTypes } from \"../interfaces\";\nimport { PointerTypeMapping, calculateViewScale, tryExtractStylusData, isPointerInBounds } from \"../utils\";\nimport { PointerType } from \"../../PointerType\";\nvar POINTER_CAPTURE_EXCLUDE_LIST = new Set(['SELECT', 'INPUT']);\nvar PointerEventManager = function (_EventManager) {\n  function PointerEventManager(view) {\n    var _this;\n    _classCallCheck(this, PointerEventManager);\n    _this = _callSuper(this, PointerEventManager, [view]);\n    _this.trackedPointers = new Set();\n    _this.mouseButtonsMapper = new Map();\n    _this.pointerDownCallback = function (event) {\n      if (!isPointerInBounds(_this.view, {\n        x: event.clientX,\n        y: event.clientY\n      })) {\n        return;\n      }\n      var adaptedEvent = _this.mapEvent(event, EventTypes.DOWN);\n      var target = event.target;\n      if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n        target.setPointerCapture(adaptedEvent.pointerId);\n      }\n      _this.markAsInBounds(adaptedEvent.pointerId);\n      _this.trackedPointers.add(adaptedEvent.pointerId);\n      if (++_this.activePointersCounter > 1) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n        _this.onPointerAdd(adaptedEvent);\n      } else {\n        _this.onPointerDown(adaptedEvent);\n      }\n    };\n    _this.pointerUpCallback = function (event) {\n      if (_this.activePointersCounter === 0) {\n        return;\n      }\n      var adaptedEvent = _this.mapEvent(event, EventTypes.UP);\n      var target = event.target;\n      if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n        target.releasePointerCapture(adaptedEvent.pointerId);\n      }\n      _this.markAsOutOfBounds(adaptedEvent.pointerId);\n      _this.trackedPointers.delete(adaptedEvent.pointerId);\n      if (--_this.activePointersCounter > 0) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n        _this.onPointerRemove(adaptedEvent);\n      } else {\n        _this.onPointerUp(adaptedEvent);\n      }\n    };\n    _this.pointerMoveCallback = function (event) {\n      var adaptedEvent = _this.mapEvent(event, EventTypes.MOVE);\n      var target = event.target;\n      if (!(target != null && target.hasPointerCapture(event.pointerId)) && !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n        target.setPointerCapture(event.pointerId);\n      }\n      var inBounds = isPointerInBounds(_this.view, {\n        x: adaptedEvent.x,\n        y: adaptedEvent.y\n      });\n      var pointerIndex = _this.pointersInBounds.indexOf(adaptedEvent.pointerId);\n      if (inBounds) {\n        if (pointerIndex < 0) {\n          adaptedEvent.eventType = EventTypes.ENTER;\n          _this.onPointerEnter(adaptedEvent);\n          _this.markAsInBounds(adaptedEvent.pointerId);\n        } else {\n          _this.onPointerMove(adaptedEvent);\n        }\n      } else {\n        if (pointerIndex >= 0) {\n          adaptedEvent.eventType = EventTypes.LEAVE;\n          _this.onPointerLeave(adaptedEvent);\n          _this.markAsOutOfBounds(adaptedEvent.pointerId);\n        } else {\n          _this.onPointerOutOfBounds(adaptedEvent);\n        }\n      }\n      _this.lastPosition.x = event.x;\n      _this.lastPosition.y = event.y;\n    };\n    _this.pointerCancelCallback = function (event) {\n      var adaptedEvent = _this.mapEvent(event, EventTypes.CANCEL);\n      _this.onPointerCancel(adaptedEvent);\n      _this.markAsOutOfBounds(adaptedEvent.pointerId);\n      _this.activePointersCounter = 0;\n      _this.trackedPointers.clear();\n    };\n    _this.pointerEnterCallback = function (event) {\n      var adaptedEvent = _this.mapEvent(event, EventTypes.ENTER);\n      _this.onPointerMoveOver(adaptedEvent);\n    };\n    _this.pointerLeaveCallback = function (event) {\n      var adaptedEvent = _this.mapEvent(event, EventTypes.LEAVE);\n      _this.onPointerMoveOut(adaptedEvent);\n    };\n    _this.lostPointerCaptureCallback = function (event) {\n      var adaptedEvent = _this.mapEvent(event, EventTypes.CANCEL);\n      if (_this.trackedPointers.has(adaptedEvent.pointerId)) {\n        _this.onPointerCancel(adaptedEvent);\n        _this.activePointersCounter = 0;\n        _this.trackedPointers.clear();\n      }\n    };\n    _this.mouseButtonsMapper.set(0, MouseButton.LEFT);\n    _this.mouseButtonsMapper.set(1, MouseButton.MIDDLE);\n    _this.mouseButtonsMapper.set(2, MouseButton.RIGHT);\n    _this.mouseButtonsMapper.set(3, MouseButton.BUTTON_4);\n    _this.mouseButtonsMapper.set(4, MouseButton.BUTTON_5);\n    _this.lastPosition = {\n      x: -Infinity,\n      y: -Infinity\n    };\n    return _this;\n  }\n  _inherits(PointerEventManager, _EventManager);\n  return _createClass(PointerEventManager, [{\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      this.view.addEventListener('pointerdown', this.pointerDownCallback);\n      this.view.addEventListener('pointerup', this.pointerUpCallback);\n      this.view.addEventListener('pointermove', this.pointerMoveCallback);\n      this.view.addEventListener('pointercancel', this.pointerCancelCallback);\n      this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n      this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n      this.view.addEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n    }\n  }, {\n    key: \"unregisterListeners\",\n    value: function unregisterListeners() {\n      this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n      this.view.removeEventListener('pointerup', this.pointerUpCallback);\n      this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n      this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n      this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n      this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n      this.view.removeEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n    }\n  }, {\n    key: \"mapEvent\",\n    value: function mapEvent(event, eventType) {\n      var _PointerTypeMapping$g;\n      var rect = this.view.getBoundingClientRect();\n      var _calculateViewScale = calculateViewScale(this.view),\n        scaleX = _calculateViewScale.scaleX,\n        scaleY = _calculateViewScale.scaleY;\n      return {\n        x: event.clientX,\n        y: event.clientY,\n        offsetX: (event.clientX - rect.left) / scaleX,\n        offsetY: (event.clientY - rect.top) / scaleY,\n        pointerId: event.pointerId,\n        eventType: eventType,\n        pointerType: (_PointerTypeMapping$g = PointerTypeMapping.get(event.pointerType)) != null ? _PointerTypeMapping$g : PointerType.OTHER,\n        button: this.mouseButtonsMapper.get(event.button),\n        time: event.timeStamp,\n        stylusData: tryExtractStylusData(event)\n      };\n    }\n  }, {\n    key: \"resetManager\",\n    value: function resetManager() {\n      _superPropGet(PointerEventManager, \"resetManager\", this, 3)([]);\n      this.trackedPointers.clear();\n    }\n  }]);\n}(EventManager);\nexport { PointerEventManager as default };","map":{"version":3,"names":["EventManager","MouseButton","EventTypes","PointerTypeMapping","calculateViewScale","tryExtractStylusData","isPointerInBounds","PointerType","POINTER_CAPTURE_EXCLUDE_LIST","Set","PointerEventManager","_EventManager","view","_this","_classCallCheck","_callSuper","trackedPointers","mouseButtonsMapper","Map","pointerDownCallback","event","x","clientX","y","clientY","adaptedEvent","mapEvent","DOWN","target","has","tagName","setPointerCapture","pointerId","markAsInBounds","add","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","pointerUpCallback","UP","releasePointerCapture","markAsOutOfBounds","delete","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","pointerMoveCallback","MOVE","hasPointerCapture","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","LEAVE","onPointerLeave","onPointerOutOfBounds","lastPosition","pointerCancelCallback","CANCEL","onPointerCancel","clear","pointerEnterCallback","onPointerMoveOver","pointerLeaveCallback","onPointerMoveOut","lostPointerCaptureCallback","set","LEFT","MIDDLE","RIGHT","BUTTON_4","BUTTON_5","Infinity","_inherits","_createClass","key","value","registerListeners","addEventListener","unregisterListeners","removeEventListener","_PointerTypeMapping$g","rect","getBoundingClientRect","_calculateViewScale","scaleX","scaleY","offsetX","left","offsetY","top","pointerType","get","OTHER","button","time","timeStamp","stylusData","resetManager","_superPropGet","default"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web\\tools\\PointerEventManager.ts"],"sourcesContent":["import EventManager from './EventManager';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { AdaptedEvent, EventTypes, Point } from '../interfaces';\nimport {\n  PointerTypeMapping,\n  calculateViewScale,\n  tryExtractStylusData,\n  isPointerInBounds,\n} from '../utils';\nimport { PointerType } from '../../PointerType';\n\nconst POINTER_CAPTURE_EXCLUDE_LIST = new Set<string>(['SELECT', 'INPUT']);\n\nexport default class PointerEventManager extends EventManager<HTMLElement> {\n  private trackedPointers = new Set<number>();\n  private readonly mouseButtonsMapper = new Map<number, MouseButton>();\n  private lastPosition: Point;\n\n  constructor(view: HTMLElement) {\n    super(view);\n\n    this.mouseButtonsMapper.set(0, MouseButton.LEFT);\n    this.mouseButtonsMapper.set(1, MouseButton.MIDDLE);\n    this.mouseButtonsMapper.set(2, MouseButton.RIGHT);\n    this.mouseButtonsMapper.set(3, MouseButton.BUTTON_4);\n    this.mouseButtonsMapper.set(4, MouseButton.BUTTON_5);\n\n    this.lastPosition = {\n      x: -Infinity,\n      y: -Infinity,\n    };\n  }\n\n  private pointerDownCallback = (event: PointerEvent) => {\n    if (!isPointerInBounds(this.view, { x: event.clientX, y: event.clientY })) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.DOWN);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.setPointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsInBounds(adaptedEvent.pointerId);\n    this.trackedPointers.add(adaptedEvent.pointerId);\n\n    if (++this.activePointersCounter > 1) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n      this.onPointerAdd(adaptedEvent);\n    } else {\n      this.onPointerDown(adaptedEvent);\n    }\n  };\n\n  private pointerUpCallback = (event: PointerEvent) => {\n    // When we call reset on gesture handlers, it also resets their event managers\n    // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n    // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n    // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n    if (this.activePointersCounter === 0) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.UP);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.releasePointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.trackedPointers.delete(adaptedEvent.pointerId);\n\n    if (--this.activePointersCounter > 0) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n      this.onPointerRemove(adaptedEvent);\n    } else {\n      this.onPointerUp(adaptedEvent);\n    }\n  };\n\n  private pointerMoveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.MOVE);\n    const target = event.target as HTMLElement;\n\n    // You may be wondering why are we setting pointer capture here, when we\n    // already set it in `pointerdown` handler. Well, that's a great question,\n    // for which I don't have an answer. Specification (https://www.w3.org/TR/pointerevents2/#dom-element-setpointercapture)\n    // says that the requirement for `setPointerCapture` to work is that pointer\n    // must be in 'active buttons state`, otherwise it will fail silently, which\n    // is lovely. Obviously, when `pointerdown` is fired, one of the buttons\n    // (when using mouse) is pressed, but that doesn't mean that `setPointerCapture`\n    // will succeed, for some reason. Since it fails silently, we don't actually know\n    // if it worked or not (there's `gotpointercapture` event, but the complexity of\n    // incorporating it here seems stupid), so we just call it again here, every time\n    // pointer moves until it succeeds.\n    // God, I do love web development.\n    if (\n      !target?.hasPointerCapture(event.pointerId) &&\n      !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)\n    ) {\n      target.setPointerCapture(event.pointerId);\n    }\n\n    const inBounds: boolean = isPointerInBounds(this.view, {\n      x: adaptedEvent.x,\n      y: adaptedEvent.y,\n    });\n\n    const pointerIndex: number = this.pointersInBounds.indexOf(\n      adaptedEvent.pointerId\n    );\n\n    if (inBounds) {\n      if (pointerIndex < 0) {\n        adaptedEvent.eventType = EventTypes.ENTER;\n        this.onPointerEnter(adaptedEvent);\n        this.markAsInBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerMove(adaptedEvent);\n      }\n    } else {\n      if (pointerIndex >= 0) {\n        adaptedEvent.eventType = EventTypes.LEAVE;\n        this.onPointerLeave(adaptedEvent);\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerOutOfBounds(adaptedEvent);\n      }\n    }\n\n    this.lastPosition.x = event.x;\n    this.lastPosition.y = event.y;\n  };\n\n  private pointerCancelCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    this.onPointerCancel(adaptedEvent);\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.activePointersCounter = 0;\n    this.trackedPointers.clear();\n  };\n\n  private pointerEnterCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.ENTER);\n\n    this.onPointerMoveOver(adaptedEvent);\n  };\n\n  private pointerLeaveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.LEAVE);\n\n    this.onPointerMoveOut(adaptedEvent);\n  };\n\n  private lostPointerCaptureCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n      // In some cases the `pointerup` event is not fired, but `lostpointercapture` is.\n      // Here we simulate the `pointercancel` event to make sure the gesture handler stops tracking it.\n      this.onPointerCancel(adaptedEvent);\n\n      this.activePointersCounter = 0;\n      this.trackedPointers.clear();\n    }\n  };\n\n  public registerListeners(): void {\n    this.view.addEventListener('pointerdown', this.pointerDownCallback);\n    this.view.addEventListener('pointerup', this.pointerUpCallback);\n    this.view.addEventListener('pointermove', this.pointerMoveCallback);\n    this.view.addEventListener('pointercancel', this.pointerCancelCallback);\n\n    // onPointerEnter and onPointerLeave are triggered by a custom logic responsible for\n    // handling shouldCancelWhenOutside flag, and are unreliable unless the pointer is down.\n    // We therefore use pointerenter and pointerleave events to handle the hover gesture,\n    // mapping them to onPointerMoveOver and onPointerMoveOut respectively.\n    this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.addEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n    this.view.removeEventListener('pointerup', this.pointerUpCallback);\n    this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n    this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n    this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.removeEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  protected mapEvent(event: PointerEvent, eventType: EventTypes): AdaptedEvent {\n    const rect = this.view.getBoundingClientRect();\n    const { scaleX, scaleY } = calculateViewScale(this.view);\n\n    return {\n      x: event.clientX,\n      y: event.clientY,\n      offsetX: (event.clientX - rect.left) / scaleX,\n      offsetY: (event.clientY - rect.top) / scaleY,\n      pointerId: event.pointerId,\n      eventType: eventType,\n      pointerType:\n        PointerTypeMapping.get(event.pointerType) ?? PointerType.OTHER,\n      button: this.mouseButtonsMapper.get(event.button),\n      time: event.timeStamp,\n      stylusData: tryExtractStylusData(event),\n    };\n  }\n\n  public resetManager(): void {\n    super.resetManager();\n    this.trackedPointers.clear();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}