{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nimport DiscreteGestureHandler from \"./DiscreteGestureHandler\";\nimport * as NodeManager from \"./NodeManager\";\nimport PressGestureHandler from \"./PressGestureHandler\";\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from \"./utils\";\nvar NativeViewGestureHandler = function (_PressGestureHandler) {\n  function NativeViewGestureHandler() {\n    _classCallCheck(this, NativeViewGestureHandler);\n    return _callSuper(this, NativeViewGestureHandler, arguments);\n  }\n  _inherits(NativeViewGestureHandler, _PressGestureHandler);\n  return _createClass(NativeViewGestureHandler, [{\n    key: \"isNative\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this = this;\n      _superPropGet(NativeViewGestureHandler, \"onRawEvent\", this, 3)([ev]);\n      if (!ev.isFinal) {\n        if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({\n          x: ev.deltaX,\n          y: ev.deltaY\n        }), 10)) {\n          if (this.config.disallowInterruption) {\n            var gestures = Object.values(NodeManager.getNodes()).filter(function (gesture) {\n              var handlerTag = gesture.handlerTag,\n                view = gesture.view,\n                isGestureRunning = gesture.isGestureRunning;\n              return (handlerTag !== _this.handlerTag && isGestureRunning && gesture instanceof DiscreteGestureHandler && view && _this.view.contains(view)\n              );\n            });\n            for (var gesture of gestures) {\n              gesture.forceInvalidate(ev);\n            }\n          }\n        }\n      }\n    }\n  }]);\n}(PressGestureHandler);\nexport default NativeViewGestureHandler;","map":{"version":3,"names":["DiscreteGestureHandler","NodeManager","PressGestureHandler","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","NativeViewGestureHandler","_PressGestureHandler","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","get","value","onRawEvent","ev","_this","_superPropGet","isFinal","x","deltaX","y","deltaY","config","disallowInterruption","gestures","Object","values","getNodes","filter","gesture","handlerTag","view","isGestureRunning","contains","forceInvalidate"],"sources":["C:/Users/Yusuf Ali Aşkın/Downloads/Desktop/proje_afetnet/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.ts"],"sourcesContent":["import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  get isNative() {\n    return true;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        // @ts-ignore FIXME(TS) config type\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(\n            (gesture) => {\n              const { handlerTag, view, isGestureRunning } = gesture;\n              return (\n                // Check if this gesture isn't self\n                handlerTag !== this.handlerTag &&\n                // Ensure the gesture needs to be cancelled\n                isGestureRunning &&\n                // ScrollView can cancel discrete gestures like taps and presses\n                gesture instanceof DiscreteGestureHandler &&\n                // Ensure a view exists and is a child of the current view\n                view &&\n                // @ts-ignore FIXME(TS) view type\n                this.view.contains(view)\n              );\n            }\n          );\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n"],"mappings":";;;;;;;;;AAAA,OAAOA,sBAAsB;AAE7B,OAAO,KAAKC,WAAW;AACvB,OAAOC,mBAAmB;AAC1B,SAASC,mBAAmB,EAAEC,UAAU;AAAkB,IAEpDC,wBAAwB,aAAAC,oBAAA;EAAA,SAAAD,yBAAA;IAAAE,eAAA,OAAAF,wBAAA;IAAA,OAAAG,UAAA,OAAAH,wBAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,wBAAA,EAAAC,oBAAA;EAAA,OAAAK,YAAA,CAAAN,wBAAA;IAAAO,GAAA;IAAAC,GAAA,EAC5B,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI;IACb;EAAC;IAAAD,GAAA;IAAAE,KAAA,EAED,SAAAC,UAAUA,CAACC,EAAkB,EAAE;MAAA,IAAAC,KAAA;MAC7BC,aAAA,CAAAb,wBAAA,0BAAiBW,EAAE;MACnB,IAAI,CAACA,EAAE,CAACG,OAAO,EAAE;QAEf,IAAIhB,mBAAmB,CAACC,UAAU,CAAC;UAAEgB,CAAC,EAAEJ,EAAE,CAACK,MAAM;UAAEC,CAAC,EAAEN,EAAE,CAACO;QAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;UAEvE,IAAI,IAAI,CAACC,MAAM,CAACC,oBAAoB,EAAE;YACpC,IAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC3B,WAAW,CAAC4B,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,CAC3D,UAACC,OAAO,EAAK;cACX,IAAQC,UAAU,GAA6BD,OAAO,CAA9CC,UAAU;gBAAEC,IAAI,GAAuBF,OAAO,CAAlCE,IAAI;gBAAEC,gBAAgB,GAAKH,OAAO,CAA5BG,gBAAgB;cAC1C,QAEEF,UAAU,KAAKf,KAAI,CAACe,UAAU,IAE9BE,gBAAgB,IAEhBH,OAAO,YAAY/B,sBAAsB,IAEzCiC,IAAI,IAEJhB,KAAI,CAACgB,IAAI,CAACE,QAAQ,CAACF,IAAI;cAAC;YAE5B,CACF,CAAC;YAED,KAAK,IAAMF,OAAO,IAAIL,QAAQ,EAAE;cAE9BK,OAAO,CAACK,eAAe,CAACpB,EAAE,CAAC;YAC7B;UACF;QACF;MACF;IACF;EAAC;AAAA,EArCoCd,mBAAmB;AAwC1D,eAAeG,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}