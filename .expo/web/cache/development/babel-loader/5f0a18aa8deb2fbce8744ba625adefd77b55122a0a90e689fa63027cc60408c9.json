{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useAuth = useAuth(),\n    resetPassword = _useAuth.resetPassword;\n  var validateEmail = function validateEmail(email) {\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  var handleResetPassword = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email.trim()) {\n        Alert.alert('Hata', 'Lütfen e-posta adresinizi girin.');\n        return;\n      }\n      if (!validateEmail(email)) {\n        Alert.alert('Hata', 'Lütfen geçerli bir e-posta adresi girin.');\n        return;\n      }\n      setLoading(true);\n      try {\n        yield resetPassword(email);\n        navigation.navigate('VerifyCode', {\n          email: email\n        });\n      } catch (error) {\n        Alert.alert('Hata', error.message || 'Şifre sıfırlama işlemi başarısız oldu.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleResetPassword() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(TouchableOpacity, {\n          style: styles.backButton,\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Ionicons, {\n            name: \"arrow-back\",\n            size: 24,\n            color: \"#333\"\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Forgot password\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: \"Please enter your email to reset the password\"\n        }), _jsxs(View, {\n          style: styles.formContainer,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Your Email\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"contact@dscodetech.com\",\n            value: email,\n            onChangeText: setEmail,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            autoCorrect: false\n          }), _jsx(TouchableOpacity, {\n            style: [styles.resetButton, loading && styles.disabledButton],\n            onPress: handleResetPassword,\n            disabled: loading,\n            children: _jsx(Text, {\n              style: styles.resetButtonText,\n              children: loading ? 'Gönderiliyor...' : 'Reset Password'\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  scrollContainer: {\n    flexGrow: 1\n  },\n  header: {\n    paddingTop: 50,\n    paddingHorizontal: 20,\n    paddingBottom: 20\n  },\n  backButton: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 40,\n    lineHeight: 22\n  },\n  formContainer: {\n    flex: 1\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#333',\n    marginBottom: 8\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    fontSize: 16,\n    backgroundColor: '#F8F9FA',\n    marginBottom: 30\n  },\n  resetButton: {\n    backgroundColor: '#FF6B35',\n    borderRadius: 8,\n    paddingVertical: 16,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  disabledButton: {\n    backgroundColor: '#B0B0B0'\n  },\n  resetButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});\nexport default ForgotPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","KeyboardAvoidingView","Platform","ScrollView","Ionicons","useAuth","jsx","_jsx","jsxs","_jsxs","ForgotPasswordScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","loading","setLoading","_useAuth","resetPassword","validateEmail","emailRegex","test","handleResetPassword","_ref2","_asyncToGenerator","trim","alert","navigate","error","message","apply","arguments","style","styles","container","behavior","OS","children","contentContainerStyle","scrollContainer","header","backButton","onPress","goBack","name","size","color","content","title","subtitle","formContainer","label","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","autoCorrect","resetButton","disabledButton","disabled","resetButtonText","create","flex","backgroundColor","flexGrow","paddingTop","paddingHorizontal","paddingBottom","width","height","justifyContent","alignItems","fontSize","fontWeight","marginBottom","lineHeight","borderWidth","borderColor","borderRadius","paddingVertical"],"sources":["C:/Users/Yusuf Ali Aşkın/Desktop/proje_afetnet/src/screens/ForgotPasswordScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst ForgotPasswordScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { resetPassword } = useAuth();\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleResetPassword = async () => {\n    if (!email.trim()) {\n      Alert.alert('Hata', 'Lütfen e-posta adresinizi girin.');\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      Alert.alert('Hata', 'Lütfen geçerli bir e-posta adresi girin.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await resetPassword(email);\n      navigation.navigate('VerifyCode', { email });\n    } catch (error) {\n      Alert.alert('Hata', error.message || 'Şifre sıfırlama işlemi başarısız oldu.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.header}>\n          <TouchableOpacity\n            style={styles.backButton}\n            onPress={() => navigation.goBack()}\n          >\n            <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.content}>\n          <Text style={styles.title}>Forgot password</Text>\n          <Text style={styles.subtitle}>\n            Please enter your email to reset the password\n          </Text>\n\n          <View style={styles.formContainer}>\n            <Text style={styles.label}>Your Email</Text>\n            <TextInput\n              style={styles.input}\n              placeholder=\"contact@dscodetech.com\"\n              value={email}\n              onChangeText={setEmail}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n            />\n\n            <TouchableOpacity\n              style={[styles.resetButton, loading && styles.disabledButton]}\n              onPress={handleResetPassword}\n              disabled={loading}\n            >\n              <Text style={styles.resetButtonText}>\n                {loading ? 'Gönderiliyor...' : 'Reset Password'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  scrollContainer: {\n    flexGrow: 1,\n  },\n  header: {\n    paddingTop: 50,\n    paddingHorizontal: 20,\n    paddingBottom: 20,\n  },\n  backButton: {\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  content: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 40,\n    lineHeight: 22,\n  },\n  formContainer: {\n    flex: 1,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#333',\n    marginBottom: 8,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    fontSize: 16,\n    backgroundColor: '#F8F9FA',\n    marginBottom: 30,\n  },\n  resetButton: {\n    backgroundColor: '#FF6B35',\n    borderRadius: 8,\n    paddingVertical: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  disabledButton: {\n    backgroundColor: '#B0B0B0',\n  },\n  resetButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n});\n\nexport default ForgotPasswordScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}