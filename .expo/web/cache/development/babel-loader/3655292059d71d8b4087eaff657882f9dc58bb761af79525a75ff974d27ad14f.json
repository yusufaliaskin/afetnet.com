{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar InteractionManager = function () {\n  function InteractionManager() {\n    _classCallCheck(this, InteractionManager);\n    this.waitForRelations = new Map();\n    this.simultaneousRelations = new Map();\n    this.blocksHandlersRelations = new Map();\n  }\n  return _createClass(InteractionManager, [{\n    key: \"configureInteractions\",\n    value: function configureInteractions(handler, config) {\n      this.dropRelationsForHandlerWithTag(handler.handlerTag);\n      if (config.waitFor) {\n        var waitFor = [];\n        config.waitFor.forEach(function (otherHandler) {\n          if (typeof otherHandler === 'number') {\n            waitFor.push(otherHandler);\n          } else {\n            waitFor.push(otherHandler.handlerTag);\n          }\n        });\n        this.waitForRelations.set(handler.handlerTag, waitFor);\n      }\n      if (config.simultaneousHandlers) {\n        var simultaneousHandlers = [];\n        config.simultaneousHandlers.forEach(function (otherHandler) {\n          if (typeof otherHandler === 'number') {\n            simultaneousHandlers.push(otherHandler);\n          } else {\n            simultaneousHandlers.push(otherHandler.handlerTag);\n          }\n        });\n        this.simultaneousRelations.set(handler.handlerTag, simultaneousHandlers);\n      }\n      if (config.blocksHandlers) {\n        var blocksHandlers = [];\n        config.blocksHandlers.forEach(function (otherHandler) {\n          if (typeof otherHandler === 'number') {\n            blocksHandlers.push(otherHandler);\n          } else {\n            blocksHandlers.push(otherHandler.handlerTag);\n          }\n        });\n        this.blocksHandlersRelations.set(handler.handlerTag, blocksHandlers);\n      }\n    }\n  }, {\n    key: \"shouldWaitForHandlerFailure\",\n    value: function shouldWaitForHandlerFailure(handler, otherHandler) {\n      var waitFor = this.waitForRelations.get(handler.handlerTag);\n      return (waitFor == null ? void 0 : waitFor.find(function (tag) {\n        return tag === otherHandler.handlerTag;\n      })) !== undefined;\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler, otherHandler) {\n      var simultaneousHandlers = this.simultaneousRelations.get(handler.handlerTag);\n      return (simultaneousHandlers == null ? void 0 : simultaneousHandlers.find(function (tag) {\n        return tag === otherHandler.handlerTag;\n      })) !== undefined;\n    }\n  }, {\n    key: \"shouldRequireHandlerToWaitForFailure\",\n    value: function shouldRequireHandlerToWaitForFailure(handler, otherHandler) {\n      var waitFor = this.blocksHandlersRelations.get(handler.handlerTag);\n      return (waitFor == null ? void 0 : waitFor.find(function (tag) {\n        return tag === otherHandler.handlerTag;\n      })) !== undefined;\n    }\n  }, {\n    key: \"shouldHandlerBeCancelledBy\",\n    value: function shouldHandlerBeCancelledBy(_handler, otherHandler) {\n      var isNativeHandler = otherHandler.constructor.name === 'NativeViewGestureHandler';\n      var isActive = otherHandler.active;\n      var isButton = (otherHandler.isButton == null ? void 0 : otherHandler.isButton()) === true;\n      return isNativeHandler && isActive && !isButton;\n    }\n  }, {\n    key: \"dropRelationsForHandlerWithTag\",\n    value: function dropRelationsForHandlerWithTag(handlerTag) {\n      this.waitForRelations.delete(handlerTag);\n      this.simultaneousRelations.delete(handlerTag);\n      this.blocksHandlersRelations.delete(handlerTag);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.waitForRelations.clear();\n      this.simultaneousRelations.clear();\n      this.blocksHandlersRelations.clear();\n    }\n  }], [{\n    key: \"instance\",\n    get: function get() {\n      if (!this._instance) {\n        this._instance = new InteractionManager();\n      }\n      return this._instance;\n    }\n  }]);\n}();\nexport { InteractionManager as default };","map":{"version":3,"names":["InteractionManager","_classCallCheck","waitForRelations","Map","simultaneousRelations","blocksHandlersRelations","_createClass","key","value","configureInteractions","handler","config","dropRelationsForHandlerWithTag","handlerTag","waitFor","forEach","otherHandler","push","set","simultaneousHandlers","blocksHandlers","shouldWaitForHandlerFailure","get","find","tag","undefined","shouldRecognizeSimultaneously","shouldRequireHandlerToWaitForFailure","shouldHandlerBeCancelledBy","_handler","isNativeHandler","constructor","name","isActive","active","isButton","delete","reset","clear","_instance","default"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web\\tools\\InteractionManager.ts"],"sourcesContent":["import type IGestureHandler from '../handlers/IGestureHandler';\nimport { Config, Handler } from '../interfaces';\n\nexport default class InteractionManager {\n  private static _instance: InteractionManager;\n  private readonly waitForRelations: Map<number, number[]> = new Map();\n  private readonly simultaneousRelations: Map<number, number[]> = new Map();\n  private readonly blocksHandlersRelations: Map<number, number[]> = new Map();\n\n  // Private becaues of singleton\n  // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  public configureInteractions(handler: IGestureHandler, config: Config) {\n    this.dropRelationsForHandlerWithTag(handler.handlerTag);\n\n    if (config.waitFor) {\n      const waitFor: number[] = [];\n      config.waitFor.forEach((otherHandler: Handler): void => {\n        // New API reference\n        if (typeof otherHandler === 'number') {\n          waitFor.push(otherHandler);\n        } else {\n          // Old API reference\n          waitFor.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.waitForRelations.set(handler.handlerTag, waitFor);\n    }\n\n    if (config.simultaneousHandlers) {\n      const simultaneousHandlers: number[] = [];\n      config.simultaneousHandlers.forEach((otherHandler: Handler): void => {\n        if (typeof otherHandler === 'number') {\n          simultaneousHandlers.push(otherHandler);\n        } else {\n          simultaneousHandlers.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.simultaneousRelations.set(handler.handlerTag, simultaneousHandlers);\n    }\n\n    if (config.blocksHandlers) {\n      const blocksHandlers: number[] = [];\n      config.blocksHandlers.forEach((otherHandler: Handler): void => {\n        if (typeof otherHandler === 'number') {\n          blocksHandlers.push(otherHandler);\n        } else {\n          blocksHandlers.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.blocksHandlersRelations.set(handler.handlerTag, blocksHandlers);\n    }\n  }\n\n  public shouldWaitForHandlerFailure(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const waitFor: number[] | undefined = this.waitForRelations.get(\n      handler.handlerTag\n    );\n\n    return (\n      waitFor?.find((tag: number) => {\n        return tag === otherHandler.handlerTag;\n      }) !== undefined\n    );\n  }\n\n  public shouldRecognizeSimultaneously(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const simultaneousHandlers: number[] | undefined =\n      this.simultaneousRelations.get(handler.handlerTag);\n\n    return (\n      simultaneousHandlers?.find((tag: number) => {\n        return tag === otherHandler.handlerTag;\n      }) !== undefined\n    );\n  }\n\n  public shouldRequireHandlerToWaitForFailure(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const waitFor: number[] | undefined = this.blocksHandlersRelations.get(\n      handler.handlerTag\n    );\n\n    return (\n      waitFor?.find((tag: number) => {\n        return tag === otherHandler.handlerTag;\n      }) !== undefined\n    );\n  }\n\n  public shouldHandlerBeCancelledBy(\n    _handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    // We check constructor name instead of using `instanceof` in order do avoid circular dependencies\n    const isNativeHandler =\n      otherHandler.constructor.name === 'NativeViewGestureHandler';\n    const isActive = otherHandler.active;\n    const isButton = otherHandler.isButton?.() === true;\n\n    return isNativeHandler && isActive && !isButton;\n  }\n\n  public dropRelationsForHandlerWithTag(handlerTag: number): void {\n    this.waitForRelations.delete(handlerTag);\n    this.simultaneousRelations.delete(handlerTag);\n    this.blocksHandlersRelations.delete(handlerTag);\n  }\n\n  public reset() {\n    this.waitForRelations.clear();\n    this.simultaneousRelations.clear();\n    this.blocksHandlersRelations.clear();\n  }\n\n  public static get instance(): InteractionManager {\n    if (!this._instance) {\n      this._instance = new InteractionManager();\n    }\n\n    return this._instance;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}