{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useTheme } from \"../contexts/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar SplashScreen = function SplashScreen(_ref) {\n  var onFinish = _ref.onFinish;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  var scaleAnim = useRef(new Animated.Value(0.3)).current;\n  var slideAnim = useRef(new Animated.Value(100)).current;\n  var letterAnimations = useRef('AFETNET'.split('').map(function () {\n    return new Animated.Value(0);\n  })).current;\n  var pulseAnim = useRef(new Animated.Value(1)).current;\n  useEffect(function () {\n    Animated.sequence([Animated.parallel([Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 800,\n      useNativeDriver: true\n    }), Animated.timing(scaleAnim, {\n      toValue: 1,\n      duration: 1200,\n      useNativeDriver: true\n    })]), Animated.stagger(100, letterAnimations.map(function (anim) {\n      return Animated.timing(anim, {\n        toValue: 1,\n        duration: 600,\n        useNativeDriver: true\n      });\n    }))]).start(function () {\n      Animated.loop(Animated.sequence([Animated.timing(pulseAnim, {\n        toValue: 1.05,\n        duration: 1000,\n        useNativeDriver: true\n      }), Animated.timing(pulseAnim, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      })])).start();\n      setTimeout(function () {\n        onFinish();\n      }, 1500);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Animated.View, {\n      style: [styles.logoContainer, {\n        opacity: fadeAnim,\n        transform: [{\n          scale: scaleAnim\n        }]\n      }],\n      children: _jsx(Animated.View, {\n        style: [styles.textContainer, {\n          transform: [{\n            scale: pulseAnim\n          }]\n        }],\n        children: _jsx(View, {\n          style: styles.letterContainer,\n          children: 'AFETNET'.split('').map(function (letter, index) {\n            return _jsx(Animated.Text, {\n              style: [styles.letter, {\n                opacity: letterAnimations[index],\n                transform: [{\n                  translateY: letterAnimations[index].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [50, 0]\n                  })\n                }, {\n                  scale: letterAnimations[index].interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.5, 1]\n                  })\n                }]\n              }],\n              children: letter\n            }, index);\n          })\n        })\n      })\n    }), _jsx(Animated.View, {\n      style: [styles.loadingContainer, {\n        opacity: fadeAnim\n      }],\n      children: _jsx(View, {\n        style: styles.dotsContainer,\n        children: [0, 1, 2].map(function (index) {\n          return _jsx(Animated.View, {\n            style: [styles.dot, {\n              opacity: pulseAnim.interpolate({\n                inputRange: [1, 1.05],\n                outputRange: [0.3, 1]\n              }),\n              transform: [{\n                scale: pulseAnim.interpolate({\n                  inputRange: [1, 1.05],\n                  outputRange: [0.8, 1.2]\n                })\n              }]\n            }]\n          }, index);\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FF8C00',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 60,\n    paddingHorizontal: 20\n  },\n  logoContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  letterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  letter: {\n    fontSize: 72,\n    fontWeight: '900',\n    color: '#FFFFFF',\n    textAlign: 'center',\n    fontFamily: 'System',\n    marginHorizontal: 2,\n    textShadowColor: 'rgba(0, 0, 0, 0.1)',\n    textShadowOffset: {\n      width: 0,\n      height: 2\n    },\n    textShadowRadius: 4\n  },\n  loadingContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 80,\n    width: '100%'\n  },\n  dotsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: 4,\n    shadowColor: 'rgba(0, 0, 0, 0.2)',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 1,\n    shadowRadius: 2,\n    elevation: 2\n  }\n});\nexport default SplashScreen;","map":{"version":3,"names":["React","useEffect","useRef","View","Text","StyleSheet","Animated","Dimensions","useTheme","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","SplashScreen","_ref","onFinish","_useTheme","theme","fadeAnim","Value","current","scaleAnim","slideAnim","letterAnimations","split","map","pulseAnim","sequence","parallel","timing","toValue","duration","useNativeDriver","stagger","anim","start","loop","setTimeout","style","styles","container","children","logoContainer","opacity","transform","scale","textContainer","letterContainer","letter","index","translateY","interpolate","inputRange","outputRange","loadingContainer","dotsContainer","dot","create","flex","backgroundColor","justifyContent","alignItems","paddingVertical","paddingHorizontal","flexDirection","fontSize","fontWeight","color","textAlign","fontFamily","marginHorizontal","textShadowColor","textShadowOffset","textShadowRadius","position","bottom","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["C:/Users/Yusuf Ali Aşkın/Downloads/Desktop/proje_afetnet/src/screens/SplashScreen.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  Dimensions,\n} from 'react-native';\nimport { useTheme } from '../contexts/ThemeContext';\n\nconst { width, height } = Dimensions.get('window');\n\nconst SplashScreen = ({ onFinish }) => {\n  const { theme } = useTheme();\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const scaleAnim = useRef(new Animated.Value(0.3)).current;\n  const slideAnim = useRef(new Animated.Value(100)).current;\n  const letterAnimations = useRef(\n    'AFETNET'.split('').map(() => new Animated.Value(0))\n  ).current;\n  const pulseAnim = useRef(new Animated.Value(1)).current;\n\n  useEffect(() => {\n    // Ana animasyon sekansı\n    Animated.sequence([\n      // İlk fade in ve scale animasyonu\n      Animated.parallel([\n        Animated.timing(fadeAnim, {\n          toValue: 1,\n          duration: 800,\n          useNativeDriver: true,\n        }),\n        Animated.timing(scaleAnim, {\n          toValue: 1,\n          duration: 1200,\n          useNativeDriver: true,\n        }),\n      ]),\n      // Harflerin sırayla animasyonu\n      Animated.stagger(100, \n        letterAnimations.map(anim => \n          Animated.timing(anim, {\n            toValue: 1,\n            duration: 600,\n            useNativeDriver: true,\n          })\n        )\n      ),\n    ]).start(() => {\n      // Pulse animasyonu başlat\n      Animated.loop(\n        Animated.sequence([\n          Animated.timing(pulseAnim, {\n            toValue: 1.05,\n            duration: 1000,\n            useNativeDriver: true,\n          }),\n          Animated.timing(pulseAnim, {\n            toValue: 1,\n            duration: 1000,\n            useNativeDriver: true,\n          }),\n        ])\n      ).start();\n      \n      // Ana ekrana geçiş\n      setTimeout(() => {\n        onFinish();\n      }, 1500);\n    });\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      {/* Main Logo Container */}\n      <Animated.View\n        style={[\n          styles.logoContainer,\n          {\n            opacity: fadeAnim,\n            transform: [{ scale: scaleAnim }],\n          },\n        ]}\n      >\n        <Animated.View\n          style={[\n            styles.textContainer,\n            {\n              transform: [{ scale: pulseAnim }],\n            },\n          ]}\n        >\n          <View style={styles.letterContainer}>\n            {'AFETNET'.split('').map((letter, index) => (\n              <Animated.Text\n                key={index}\n                style={[\n                  styles.letter,\n                  {\n                    opacity: letterAnimations[index],\n                    transform: [\n                      {\n                        translateY: letterAnimations[index].interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [50, 0],\n                        }),\n                      },\n                      {\n                        scale: letterAnimations[index].interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0.5, 1],\n                        }),\n                      },\n                    ],\n                  },\n                ]}\n              >\n                {letter}\n              </Animated.Text>\n            ))}\n          </View>\n        </Animated.View>\n      </Animated.View>\n\n      {/* Loading Dots */}\n      <Animated.View\n        style={[\n          styles.loadingContainer,\n          {\n            opacity: fadeAnim,\n          },\n        ]}\n      >\n        <View style={styles.dotsContainer}>\n          {[0, 1, 2].map((index) => (\n            <Animated.View\n              key={index}\n              style={[\n                styles.dot,\n                {\n                  opacity: pulseAnim.interpolate({\n                    inputRange: [1, 1.05],\n                    outputRange: [0.3, 1],\n                  }),\n                  transform: [\n                    {\n                      scale: pulseAnim.interpolate({\n                        inputRange: [1, 1.05],\n                        outputRange: [0.8, 1.2],\n                      }),\n                    },\n                  ],\n                },\n              ]}\n            />\n          ))}\n        </View>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FF8C00', // Turuncu arka plan\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 60,\n    paddingHorizontal: 20,\n  },\n  logoContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  textContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  letterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  letter: {\n    fontSize: 72,\n    fontWeight: '900',\n    color: '#FFFFFF', // Beyaz harfler\n    textAlign: 'center',\n    fontFamily: 'System',\n    marginHorizontal: 2,\n    textShadowColor: 'rgba(0, 0, 0, 0.1)',\n    textShadowOffset: { width: 0, height: 2 },\n    textShadowRadius: 4,\n  },\n  loadingContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 80,\n    width: '100%',\n  },\n  dotsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: 4,\n    shadowColor: 'rgba(0, 0, 0, 0.2)',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n});\n\nexport default SplashScreen;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAQjD,SAASC,QAAQ;AAAmC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAAC,eAAA,GAA0BN,UAAU,CAACO,GAAG,CAAC,QAAQ,CAAC;EAA1CC,KAAK,GAAAF,eAAA,CAALE,KAAK;EAAEC,MAAM,GAAAH,eAAA,CAANG,MAAM;AAErB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC9B,IAAAC,SAAA,GAAkBZ,QAAQ,CAAC,CAAC;IAApBa,KAAK,GAAAD,SAAA,CAALC,KAAK;EACb,IAAMC,QAAQ,GAAGpB,MAAM,CAAC,IAAII,QAAQ,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EACtD,IAAMC,SAAS,GAAGvB,MAAM,CAAC,IAAII,QAAQ,CAACiB,KAAK,CAAC,GAAG,CAAC,CAAC,CAACC,OAAO;EACzD,IAAME,SAAS,GAAGxB,MAAM,CAAC,IAAII,QAAQ,CAACiB,KAAK,CAAC,GAAG,CAAC,CAAC,CAACC,OAAO;EACzD,IAAMG,gBAAgB,GAAGzB,MAAM,CAC7B,SAAS,CAAC0B,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC;IAAA,OAAM,IAAIvB,QAAQ,CAACiB,KAAK,CAAC,CAAC,CAAC;EAAA,EACrD,CAAC,CAACC,OAAO;EACT,IAAMM,SAAS,GAAG5B,MAAM,CAAC,IAAII,QAAQ,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAEvDvB,SAAS,CAAC,YAAM;IAEdK,QAAQ,CAACyB,QAAQ,CAAC,CAEhBzB,QAAQ,CAAC0B,QAAQ,CAAC,CAChB1B,QAAQ,CAAC2B,MAAM,CAACX,QAAQ,EAAE;MACxBY,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,EACF9B,QAAQ,CAAC2B,MAAM,CAACR,SAAS,EAAE;MACzBS,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE;IACnB,CAAC,CAAC,CACH,CAAC,EAEF9B,QAAQ,CAAC+B,OAAO,CAAC,GAAG,EAClBV,gBAAgB,CAACE,GAAG,CAAC,UAAAS,IAAI;MAAA,OACvBhC,QAAQ,CAAC2B,MAAM,CAACK,IAAI,EAAE;QACpBJ,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,GAAG;QACbC,eAAe,EAAE;MACnB,CAAC,CAAC;IAAA,CACJ,CACF,CAAC,CACF,CAAC,CAACG,KAAK,CAAC,YAAM;MAEbjC,QAAQ,CAACkC,IAAI,CACXlC,QAAQ,CAACyB,QAAQ,CAAC,CAChBzB,QAAQ,CAAC2B,MAAM,CAACH,SAAS,EAAE;QACzBI,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE,IAAI;QACdC,eAAe,EAAE;MACnB,CAAC,CAAC,EACF9B,QAAQ,CAAC2B,MAAM,CAACH,SAAS,EAAE;QACzBI,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,IAAI;QACdC,eAAe,EAAE;MACnB,CAAC,CAAC,CACH,CACH,CAAC,CAACG,KAAK,CAAC,CAAC;MAGTE,UAAU,CAAC,YAAM;QACftB,QAAQ,CAAC,CAAC;MACZ,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OACEP,KAAA,CAACT,IAAI;IAACuC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAE5BnC,IAAA,CAACJ,QAAQ,CAACH,IAAI;MACZuC,KAAK,EAAE,CACLC,MAAM,CAACG,aAAa,EACpB;QACEC,OAAO,EAAEzB,QAAQ;QACjB0B,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAExB;QAAU,CAAC;MAClC,CAAC,CACD;MAAAoB,QAAA,EAEFnC,IAAA,CAACJ,QAAQ,CAACH,IAAI;QACZuC,KAAK,EAAE,CACLC,MAAM,CAACO,aAAa,EACpB;UACEF,SAAS,EAAE,CAAC;YAAEC,KAAK,EAAEnB;UAAU,CAAC;QAClC,CAAC,CACD;QAAAe,QAAA,EAEFnC,IAAA,CAACP,IAAI;UAACuC,KAAK,EAAEC,MAAM,CAACQ,eAAgB;UAAAN,QAAA,EACjC,SAAS,CAACjB,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,UAACuB,MAAM,EAAEC,KAAK;YAAA,OACrC3C,IAAA,CAACJ,QAAQ,CAACF,IAAI;cAEZsC,KAAK,EAAE,CACLC,MAAM,CAACS,MAAM,EACb;gBACEL,OAAO,EAAEpB,gBAAgB,CAAC0B,KAAK,CAAC;gBAChCL,SAAS,EAAE,CACT;kBACEM,UAAU,EAAE3B,gBAAgB,CAAC0B,KAAK,CAAC,CAACE,WAAW,CAAC;oBAC9CC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClBC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC;kBACrB,CAAC;gBACH,CAAC,EACD;kBACER,KAAK,EAAEtB,gBAAgB,CAAC0B,KAAK,CAAC,CAACE,WAAW,CAAC;oBACzCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClBC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;kBACtB,CAAC;gBACH,CAAC;cAEL,CAAC,CACD;cAAAZ,QAAA,EAEDO;YAAM,GAtBFC,KAuBQ,CAAC;UAAA,CACjB;QAAC,CACE;MAAC,CACM;IAAC,CACH,CAAC,EAGhB3C,IAAA,CAACJ,QAAQ,CAACH,IAAI;MACZuC,KAAK,EAAE,CACLC,MAAM,CAACe,gBAAgB,EACvB;QACEX,OAAO,EAAEzB;MACX,CAAC,CACD;MAAAuB,QAAA,EAEFnC,IAAA,CAACP,IAAI;QAACuC,KAAK,EAAEC,MAAM,CAACgB,aAAc;QAAAd,QAAA,EAC/B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAChB,GAAG,CAAC,UAACwB,KAAK;UAAA,OACnB3C,IAAA,CAACJ,QAAQ,CAACH,IAAI;YAEZuC,KAAK,EAAE,CACLC,MAAM,CAACiB,GAAG,EACV;cACEb,OAAO,EAAEjB,SAAS,CAACyB,WAAW,CAAC;gBAC7BC,UAAU,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;gBACrBC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;cACtB,CAAC,CAAC;cACFT,SAAS,EAAE,CACT;gBACEC,KAAK,EAAEnB,SAAS,CAACyB,WAAW,CAAC;kBAC3BC,UAAU,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;kBACrBC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG;gBACxB,CAAC;cACH,CAAC;YAEL,CAAC;UACD,GAjBGJ,KAkBN,CAAC;QAAA,CACH;MAAC,CACE;IAAC,CACM,CAAC;EAAA,CACZ,CAAC;AAEX,CAAC;AAED,IAAMV,MAAM,GAAGtC,UAAU,CAACwD,MAAM,CAAC;EAC/BjB,SAAS,EAAE;IACTkB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDrB,aAAa,EAAE;IACbgB,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDf,aAAa,EAAE;IACbe,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE;EAClB,CAAC;EACDb,eAAe,EAAE;IACfiB,aAAa,EAAE,KAAK;IACpBH,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE;EAClB,CAAC;EACDZ,MAAM,EAAE;IACNiB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,QAAQ;IACpBC,gBAAgB,EAAE,CAAC;IACnBC,eAAe,EAAE,oBAAoB;IACrCC,gBAAgB,EAAE;MAAE7D,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACzC6D,gBAAgB,EAAE;EACpB,CAAC;EACDnB,gBAAgB,EAAE;IAChBO,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,QAAQ;IACxBc,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVhE,KAAK,EAAE;EACT,CAAC;EACD4C,aAAa,EAAE;IACbS,aAAa,EAAE,KAAK;IACpBH,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE;EAClB,CAAC;EACDJ,GAAG,EAAE;IACH7C,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTgE,YAAY,EAAE,CAAC;IACfjB,eAAe,EAAE,SAAS;IAC1BW,gBAAgB,EAAE,CAAC;IACnBO,WAAW,EAAE,oBAAoB;IACjCC,YAAY,EAAE;MAAEnE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCmE,aAAa,EAAE,CAAC;IAChBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAepE,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}