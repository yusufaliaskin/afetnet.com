{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nimport { State } from \"../../State\";\nimport { DiagonalDirections, Directions } from \"../../Directions\";\nimport GestureHandler from \"./GestureHandler\";\nimport Vector from \"../tools/Vector\";\nimport { coneToDeviation } from \"../utils\";\nvar DEFAULT_MAX_DURATION_MS = 800;\nvar DEFAULT_MIN_VELOCITY = 700;\nvar DEFAULT_ALIGNMENT_CONE = 30;\nvar DEFAULT_DIRECTION = Directions.RIGHT;\nvar DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\nvar AXIAL_DEVIATION_COSINE = coneToDeviation(DEFAULT_ALIGNMENT_CONE);\nvar DIAGONAL_DEVIATION_COSINE = coneToDeviation(90 - DEFAULT_ALIGNMENT_CONE);\nvar FlingGestureHandler = function (_GestureHandler) {\n  function FlingGestureHandler() {\n    var _this;\n    _classCallCheck(this, FlingGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, FlingGestureHandler, [].concat(args));\n    _this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n    _this.direction = DEFAULT_DIRECTION;\n    _this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    _this.minVelocity = DEFAULT_MIN_VELOCITY;\n    _this.maxNumberOfPointersSimultaneously = 0;\n    _this.keyPointer = NaN;\n    return _this;\n  }\n  _inherits(FlingGestureHandler, _GestureHandler);\n  return _createClass(FlingGestureHandler, [{\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = _objectWithoutProperties(_ref, _excluded);\n      _superPropGet(FlingGestureHandler, \"updateGestureConfig\", this, 3)([_objectSpread({\n        enabled: enabled\n      }, props)]);\n      if (this.config.direction) {\n        this.direction = this.config.direction;\n      }\n      if (this.config.numberOfPointers) {\n        this.numberOfPointersRequired = this.config.numberOfPointers;\n      }\n    }\n  }, {\n    key: \"startFling\",\n    value: function startFling() {\n      var _this2 = this;\n      this.begin();\n      this.maxNumberOfPointersSimultaneously = 1;\n      this.delayTimeout = setTimeout(function () {\n        return _this2.fail();\n      }, this.maxDurationMs);\n    }\n  }, {\n    key: \"tryEndFling\",\n    value: function tryEndFling() {\n      var _this3 = this;\n      var velocityVector = Vector.fromVelocity(this.tracker, this.keyPointer);\n      if (!velocityVector) {\n        return false;\n      }\n      var getAlignment = function getAlignment(direction, minimalAlignmentCosine) {\n        return (direction & _this3.direction) === direction && velocityVector.isSimilar(Vector.fromDirection(direction), minimalAlignmentCosine);\n      };\n      var axialDirectionsList = Object.values(Directions);\n      var diagonalDirectionsList = Object.values(DiagonalDirections);\n      var axialAlignmentList = axialDirectionsList.map(function (direction) {\n        return getAlignment(direction, AXIAL_DEVIATION_COSINE);\n      });\n      var diagonalAlignmentList = diagonalDirectionsList.map(function (direction) {\n        return getAlignment(direction, DIAGONAL_DEVIATION_COSINE);\n      });\n      var isAligned = axialAlignmentList.some(Boolean) || diagonalAlignmentList.some(Boolean);\n      var isFast = velocityVector.magnitude > this.minVelocity;\n      if (this.maxNumberOfPointersSimultaneously === this.numberOfPointersRequired && isAligned && isFast) {\n        clearTimeout(this.delayTimeout);\n        this.activate();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"endFling\",\n    value: function endFling() {\n      if (!this.tryEndFling()) {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      if (!this.isButtonInConfig(event.button)) {\n        return;\n      }\n      this.tracker.addToTracker(event);\n      this.keyPointer = event.pointerId;\n      _superPropGet(FlingGestureHandler, \"onPointerDown\", this, 3)([event]);\n      this.newPointerAction();\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      _superPropGet(FlingGestureHandler, \"onPointerAdd\", this, 3)([event]);\n      this.newPointerAction();\n    }\n  }, {\n    key: \"newPointerAction\",\n    value: function newPointerAction() {\n      if (this.state === State.UNDETERMINED) {\n        this.startFling();\n      }\n      if (this.state !== State.BEGAN) {\n        return;\n      }\n      this.tryEndFling();\n      if (this.tracker.trackedPointersCount > this.maxNumberOfPointersSimultaneously) {\n        this.maxNumberOfPointersSimultaneously = this.tracker.trackedPointersCount;\n      }\n    }\n  }, {\n    key: \"pointerMoveAction\",\n    value: function pointerMoveAction(event) {\n      this.tracker.track(event);\n      if (this.state !== State.BEGAN) {\n        return;\n      }\n      this.tryEndFling();\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.pointerMoveAction(event);\n      _superPropGet(FlingGestureHandler, \"onPointerMove\", this, 3)([event]);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.pointerMoveAction(event);\n      _superPropGet(FlingGestureHandler, \"onPointerOutOfBounds\", this, 3)([event]);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _superPropGet(FlingGestureHandler, \"onPointerUp\", this, 3)([event]);\n      this.onUp(event);\n      this.keyPointer = NaN;\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _superPropGet(FlingGestureHandler, \"onPointerRemove\", this, 3)([event]);\n      this.onUp(event);\n    }\n  }, {\n    key: \"onUp\",\n    value: function onUp(event) {\n      if (this.state === State.BEGAN) {\n        this.endFling();\n      }\n      this.tracker.removeFromTracker(event.pointerId);\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(force) {\n      _superPropGet(FlingGestureHandler, \"activate\", this, 3)([force]);\n      this.end();\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _superPropGet(FlingGestureHandler, \"resetConfig\", this, 3)([]);\n      this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n      this.direction = DEFAULT_DIRECTION;\n    }\n  }]);\n}(GestureHandler);\nexport { FlingGestureHandler as default };","map":{"version":3,"names":["State","DiagonalDirections","Directions","GestureHandler","Vector","coneToDeviation","DEFAULT_MAX_DURATION_MS","DEFAULT_MIN_VELOCITY","DEFAULT_ALIGNMENT_CONE","DEFAULT_DIRECTION","RIGHT","DEFAULT_NUMBER_OF_TOUCHES_REQUIRED","AXIAL_DEVIATION_COSINE","DIAGONAL_DEVIATION_COSINE","FlingGestureHandler","_GestureHandler","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","numberOfPointersRequired","direction","maxDurationMs","minVelocity","maxNumberOfPointersSimultaneously","keyPointer","NaN","_inherits","_createClass","key","value","updateGestureConfig","_ref","_ref$enabled","enabled","props","_objectWithoutProperties","_excluded","_superPropGet","_objectSpread","config","numberOfPointers","startFling","_this2","begin","delayTimeout","setTimeout","fail","tryEndFling","_this3","velocityVector","fromVelocity","tracker","getAlignment","minimalAlignmentCosine","isSimilar","fromDirection","axialDirectionsList","Object","values","diagonalDirectionsList","axialAlignmentList","map","diagonalAlignmentList","isAligned","some","Boolean","isFast","magnitude","clearTimeout","activate","endFling","onPointerDown","event","isButtonInConfig","button","addToTracker","pointerId","newPointerAction","tryToSendTouchEvent","onPointerAdd","state","UNDETERMINED","BEGAN","trackedPointersCount","pointerMoveAction","track","onPointerMove","onPointerOutOfBounds","onPointerUp","onUp","onPointerRemove","removeFromTracker","force","end","resetConfig","default"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\web\\handlers\\FlingGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DiagonalDirections, Directions } from '../../Directions';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport Vector from '../tools/Vector';\nimport { coneToDeviation } from '../utils';\n\nconst DEFAULT_MAX_DURATION_MS = 800;\nconst DEFAULT_MIN_VELOCITY = 700;\nconst DEFAULT_ALIGNMENT_CONE = 30;\nconst DEFAULT_DIRECTION = Directions.RIGHT;\nconst DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\n\nconst AXIAL_DEVIATION_COSINE = coneToDeviation(DEFAULT_ALIGNMENT_CONE);\nconst DIAGONAL_DEVIATION_COSINE = coneToDeviation(90 - DEFAULT_ALIGNMENT_CONE);\n\nexport default class FlingGestureHandler extends GestureHandler {\n  private numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n  private direction: Directions = DEFAULT_DIRECTION;\n\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private minVelocity = DEFAULT_MIN_VELOCITY;\n  private delayTimeout!: number;\n\n  private maxNumberOfPointersSimultaneously = 0;\n  private keyPointer = NaN;\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.direction) {\n      this.direction = this.config.direction;\n    }\n\n    if (this.config.numberOfPointers) {\n      this.numberOfPointersRequired = this.config.numberOfPointers;\n    }\n  }\n\n  private startFling(): void {\n    this.begin();\n\n    this.maxNumberOfPointersSimultaneously = 1;\n\n    this.delayTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private tryEndFling(): boolean {\n    const velocityVector = Vector.fromVelocity(this.tracker, this.keyPointer);\n\n    if (!velocityVector) {\n      return false;\n    }\n\n    const getAlignment = (\n      direction: Directions | DiagonalDirections,\n      minimalAlignmentCosine: number\n    ) => {\n      return (\n        (direction & this.direction) === direction &&\n        velocityVector.isSimilar(\n          Vector.fromDirection(direction),\n          minimalAlignmentCosine\n        )\n      );\n    };\n\n    const axialDirectionsList = Object.values(Directions);\n    const diagonalDirectionsList = Object.values(DiagonalDirections);\n\n    // List of alignments to all activated directions\n    const axialAlignmentList = axialDirectionsList.map((direction) =>\n      getAlignment(direction, AXIAL_DEVIATION_COSINE)\n    );\n\n    const diagonalAlignmentList = diagonalDirectionsList.map((direction) =>\n      getAlignment(direction, DIAGONAL_DEVIATION_COSINE)\n    );\n\n    const isAligned =\n      axialAlignmentList.some(Boolean) || diagonalAlignmentList.some(Boolean);\n\n    const isFast = velocityVector.magnitude > this.minVelocity;\n\n    if (\n      this.maxNumberOfPointersSimultaneously ===\n        this.numberOfPointersRequired &&\n      isAligned &&\n      isFast\n    ) {\n      clearTimeout(this.delayTimeout);\n      this.activate();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private endFling() {\n    if (!this.tryEndFling()) {\n      this.fail();\n    }\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n\n    this.tracker.addToTracker(event);\n    this.keyPointer = event.pointerId;\n\n    super.onPointerDown(event);\n    this.newPointerAction();\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    if (this.state === State.UNDETERMINED) {\n      this.startFling();\n    }\n\n    if (this.state !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n\n    if (\n      this.tracker.trackedPointersCount > this.maxNumberOfPointersSimultaneously\n    ) {\n      this.maxNumberOfPointersSimultaneously =\n        this.tracker.trackedPointersCount;\n    }\n  }\n\n  private pointerMoveAction(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    if (this.state !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n\n    this.keyPointer = NaN;\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    if (this.state === State.BEGAN) {\n      this.endFling();\n    }\n\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  public activate(force?: boolean): void {\n    super.activate(force);\n    this.end();\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n    this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n    this.direction = DEFAULT_DIRECTION;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}