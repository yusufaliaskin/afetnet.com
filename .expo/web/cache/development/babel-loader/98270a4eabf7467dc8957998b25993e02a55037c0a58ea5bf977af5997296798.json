{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport View from \"../Components/View/View\";\nimport StyleSheet from \"../StyleSheet/StyleSheet\";\nimport * as LogBoxData from \"./Data/LogBoxData\";\nimport LogBoxInspector from \"./UI/LogBoxInspector\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var _LogBoxInspectorContainer = function (_React$Component) {\n  function _LogBoxInspectorContainer() {\n    var _this;\n    _classCallCheck(this, _LogBoxInspectorContainer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, _LogBoxInspectorContainer, [].concat(args));\n    _this._handleDismiss = function () {\n      var _this$props = _this.props,\n        selectedLogIndex = _this$props.selectedLogIndex,\n        logs = _this$props.logs;\n      var logsArray = Array.from(logs);\n      if (selectedLogIndex != null) {\n        if (logsArray.length - 1 <= 0) {\n          LogBoxData.setSelectedLog(-1);\n        } else if (selectedLogIndex >= logsArray.length - 1) {\n          LogBoxData.setSelectedLog(selectedLogIndex - 1);\n        }\n        LogBoxData.dismiss(logsArray[selectedLogIndex]);\n      }\n    };\n    _this._handleMinimize = function () {\n      LogBoxData.setSelectedLog(-1);\n    };\n    _this._handleSetSelectedLog = function (index) {\n      LogBoxData.setSelectedLog(index);\n    };\n    return _this;\n  }\n  _inherits(_LogBoxInspectorContainer, _React$Component);\n  return _createClass(_LogBoxInspectorContainer, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: StyleSheet.absoluteFill,\n        children: _jsx(LogBoxInspector, {\n          onDismiss: this._handleDismiss,\n          onMinimize: this._handleMinimize,\n          onChangeSelectedIndex: this._handleSetSelectedLog,\n          logs: this.props.logs,\n          selectedIndex: this.props.selectedLogIndex\n        })\n      });\n    }\n  }]);\n}(React.Component);\nexport default LogBoxData.withSubscription(_LogBoxInspectorContainer);","map":{"version":3,"names":["View","StyleSheet","LogBoxData","LogBoxInspector","React","jsx","_jsx","_LogBoxInspectorContainer","_React$Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_handleDismiss","_this$props","props","selectedLogIndex","logs","logsArray","from","setSelectedLog","dismiss","_handleMinimize","_handleSetSelectedLog","index","_inherits","_createClass","key","value","render","style","absoluteFill","children","onDismiss","onMinimize","onChangeSelectedIndex","selectedIndex","Component","withSubscription"],"sources":["C:/Users/Yusuf Ali Aşkın/Desktop/proje_afetnet/node_modules/react-native/Libraries/LogBox/LogBoxInspectorContainer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type LogBoxLog from './Data/LogBoxLog';\n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxInspector from './UI/LogBoxInspector';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedLogIndex: number,\n  isDisabled?: ?boolean,\n|}>;\n\nexport class _LogBoxInspectorContainer extends React.Component<Props> {\n  render(): React.Node {\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <LogBoxInspector\n          onDismiss={this._handleDismiss}\n          onMinimize={this._handleMinimize}\n          onChangeSelectedIndex={this._handleSetSelectedLog}\n          logs={this.props.logs}\n          selectedIndex={this.props.selectedLogIndex}\n        />\n      </View>\n    );\n  }\n\n  _handleDismiss = (): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const {selectedLogIndex, logs} = this.props;\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  };\n\n  _handleMinimize = (): void => {\n    LogBoxData.setSelectedLog(-1);\n  };\n\n  _handleSetSelectedLog = (index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  };\n}\n\nexport default (LogBoxData.withSubscription(\n  _LogBoxInspectorContainer,\n): React.AbstractComponent<{||}>);\n"],"mappings":";;;;;;;AAYA,OAAOA,IAAI;AACX,OAAOC,UAAU;AACjB,OAAO,KAAKC,UAAU;AACtB,OAAOC,eAAe;AACtB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAQ/B,WAAaC,yBAAyB,aAAAC,gBAAA;EAAA,SAAAD,0BAAA;IAAA,IAAAE,KAAA;IAAAC,eAAA,OAAAH,yBAAA;IAAA,SAAAI,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAQ,UAAA,OAAAV,yBAAA,KAAAW,MAAA,CAAAJ,IAAA;IAAAL,KAAA,CAepCU,cAAc,GAAG,YAAY;MAI3B,IAAAC,WAAA,GAAiCX,KAAA,CAAKY,KAAK;QAApCC,gBAAgB,GAAAF,WAAA,CAAhBE,gBAAgB;QAAEC,IAAI,GAAAH,WAAA,CAAJG,IAAI;MAC7B,IAAMC,SAAS,GAAGT,KAAK,CAACU,IAAI,CAACF,IAAI,CAAC;MAClC,IAAID,gBAAgB,IAAI,IAAI,EAAE;QAC5B,IAAIE,SAAS,CAACX,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;UAC7BX,UAAU,CAACwB,cAAc,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,MAAM,IAAIJ,gBAAgB,IAAIE,SAAS,CAACX,MAAM,GAAG,CAAC,EAAE;UACnDX,UAAU,CAACwB,cAAc,CAACJ,gBAAgB,GAAG,CAAC,CAAC;QACjD;QAEApB,UAAU,CAACyB,OAAO,CAACH,SAAS,CAACF,gBAAgB,CAAC,CAAC;MACjD;IACF,CAAC;IAAAb,KAAA,CAEDmB,eAAe,GAAG,YAAY;MAC5B1B,UAAU,CAACwB,cAAc,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAAAjB,KAAA,CAEDoB,qBAAqB,GAAG,UAACC,KAAa,EAAW;MAC/C5B,UAAU,CAACwB,cAAc,CAACI,KAAK,CAAC;IAClC,CAAC;IAAA,OAAArB,KAAA;EAAA;EAAAsB,SAAA,CAAAxB,yBAAA,EAAAC,gBAAA;EAAA,OAAAwB,YAAA,CAAAzB,yBAAA;IAAA0B,GAAA;IAAAC,KAAA,EArCD,SAAAC,MAAMA,CAAA,EAAe;MACnB,OACE7B,IAAA,CAACN,IAAI;QAACoC,KAAK,EAAEnC,UAAU,CAACoC,YAAa;QAAAC,QAAA,EACnChC,IAAA,CAACH,eAAe;UACdoC,SAAS,EAAE,IAAI,CAACpB,cAAe;UAC/BqB,UAAU,EAAE,IAAI,CAACZ,eAAgB;UACjCa,qBAAqB,EAAE,IAAI,CAACZ,qBAAsB;UAClDN,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAK;UACtBmB,aAAa,EAAE,IAAI,CAACrB,KAAK,CAACC;QAAiB,CAC5C;MAAC,CACE,CAAC;IAEX;EAAC;AAAA,EAb4ClB,KAAK,CAACuC,SAAS;AAyC9D,eAAgBzC,UAAU,CAAC0C,gBAAgB,CACzCrC,yBACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}