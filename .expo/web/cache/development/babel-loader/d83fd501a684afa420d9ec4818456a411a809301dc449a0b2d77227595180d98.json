{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { BaseGesture } from \"./gesture\";\nexport var FlingGesture = function (_BaseGesture) {\n  function FlingGesture() {\n    var _this;\n    _classCallCheck(this, FlingGesture);\n    _this = _callSuper(this, FlingGesture);\n    _this.config = {};\n    _this.handlerName = 'FlingGestureHandler';\n    return _this;\n  }\n  _inherits(FlingGesture, _BaseGesture);\n  return _createClass(FlingGesture, [{\n    key: \"numberOfPointers\",\n    value: function numberOfPointers(pointers) {\n      this.config.numberOfPointers = pointers;\n      return this;\n    }\n  }, {\n    key: \"direction\",\n    value: function direction(_direction) {\n      this.config.direction = _direction;\n      return this;\n    }\n  }]);\n}(BaseGesture);","map":{"version":3,"names":["BaseGesture","FlingGesture","_BaseGesture","_this","_classCallCheck","_callSuper","config","handlerName","_inherits","_createClass","key","value","numberOfPointers","pointers","direction"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\handlers\\gestures\\flingGesture.ts"],"sourcesContent":["import { BaseGesture, BaseGestureConfig } from './gesture';\nimport { FlingGestureConfig } from '../FlingGestureHandler';\nimport type { FlingGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\n\nexport class FlingGesture extends BaseGesture<FlingGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & FlingGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'FlingGestureHandler';\n  }\n\n  /**\n   * Determine exact number of points required to handle the fling gesture.\n   * @param pointers\n   */\n  numberOfPointers(pointers: number) {\n    this.config.numberOfPointers = pointers;\n    return this;\n  }\n\n  /**\n   * Expressed allowed direction of movement.\n   * Expected values are exported as constants in the Directions object.\n   * Arguments can be combined using `|` operator. Default value is set to `MouseButton.LEFT`.\n   * @param direction\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture/#directionvalue-directions\n   */\n  direction(direction: number) {\n    this.config.direction = direction;\n    return this;\n  }\n}\n\nexport type FlingGestureType = InstanceType<typeof FlingGesture>;\n"],"mappings":";;;;;;;;;AAAA,SAASA,WAAW;AAIpB,WAAaC,YAAY,aAAAC,YAAA;EAGvB,SAAAD,aAAA,EAAc;IAAA,IAAAE,KAAA;IAAAC,eAAA,OAAAH,YAAA;IACZE,KAAA,GAAAE,UAAA,OAAAJ,YAAA;IAAOE,KAAA,CAHFG,MAAM,GAA2C,CAAC,CAAC;IAKxDH,KAAA,CAAKI,WAAW,GAAG,qBAAqB;IAAA,OAAAJ,KAAA;EAC1C;EAAAK,SAAA,CAAAP,YAAA,EAAAC,YAAA;EAAA,OAAAO,YAAA,CAAAR,YAAA;IAAAS,GAAA;IAAAC,KAAA,EAMA,SAAAC,gBAAgBA,CAACC,QAAgB,EAAE;MACjC,IAAI,CAACP,MAAM,CAACM,gBAAgB,GAAGC,QAAQ;MACvC,OAAO,IAAI;IACb;EAAA;IAAAH,GAAA;IAAAC,KAAA,EASA,SAAAG,SAASA,CAACA,UAAiB,EAAE;MAC3B,IAAI,CAACR,MAAM,CAACQ,SAAS,GAAGA,UAAS;MACjC,OAAO,IAAI;IACb;EAAA;AAAA,EA5BgCd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}