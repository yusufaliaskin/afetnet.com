{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { ContinousBaseGesture } from \"./gesture\";\nfunction changeEventCalculator(current, previous) {\n  'worklet';\n\n  var changePayload;\n  if (previous === undefined) {\n    changePayload = {\n      rotationChange: current.rotation\n    };\n  } else {\n    changePayload = {\n      rotationChange: current.rotation - previous.rotation\n    };\n  }\n  return _objectSpread(_objectSpread({}, current), changePayload);\n}\nexport var RotationGesture = function (_ContinousBaseGesture) {\n  function RotationGesture() {\n    var _this;\n    _classCallCheck(this, RotationGesture);\n    _this = _callSuper(this, RotationGesture);\n    _this.handlerName = 'RotationGestureHandler';\n    return _this;\n  }\n  _inherits(RotationGesture, _ContinousBaseGesture);\n  return _createClass(RotationGesture, [{\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _superPropGet(RotationGesture, \"onChange\", this, 3)([callback]);\n    }\n  }]);\n}(ContinousBaseGesture);","map":{"version":3,"names":["ContinousBaseGesture","changeEventCalculator","current","previous","changePayload","undefined","rotationChange","rotation","_objectSpread","RotationGesture","_ContinousBaseGesture","_this","_classCallCheck","_callSuper","handlerName","_inherits","_createClass","key","value","onChange","callback","handlers","_superPropGet"],"sources":["C:\\Users\\Yusuf Ali Aşkın\\Downloads\\Desktop\\proje_afetnet\\node_modules\\react-native-gesture-handler\\src\\handlers\\gestures\\rotationGesture.ts"],"sourcesContent":["import { ContinousBaseGesture } from './gesture';\nimport type { RotationGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\n\ntype RotationGestureChangeEventPayload = {\n  rotationChange: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<RotationGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<RotationGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: RotationGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      rotationChange: current.rotation,\n    };\n  } else {\n    changePayload = {\n      rotationChange: current.rotation - previous.rotation,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class RotationGesture extends ContinousBaseGesture<\n  RotationGestureHandlerEventPayload,\n  RotationGestureChangeEventPayload\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'RotationGestureHandler';\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        RotationGestureHandlerEventPayload & RotationGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, RotationGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type RotationGestureType = InstanceType<typeof RotationGesture>;\n"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,oBAAoB;AAQ7B,SAASC,qBAAqBA,CAC5BC,OAA+D,EAC/DC,QAAiE,EACjE;EACA,SAAS;;EACT,IAAIC,aAAgD;EACpD,IAAID,QAAQ,KAAKE,SAAS,EAAE;IAC1BD,aAAa,GAAG;MACdE,cAAc,EAAEJ,OAAO,CAACK;IAC1B,CAAC;EACH,CAAC,MAAM;IACLH,aAAa,GAAG;MACdE,cAAc,EAAEJ,OAAO,CAACK,QAAQ,GAAGJ,QAAQ,CAACI;IAC9C,CAAC;EACH;EAEA,OAAAC,aAAA,CAAAA,aAAA,KAAYN,OAAO,GAAKE,aAAA;AAC1B;AAEA,WAAaK,eAAe,aAAAC,qBAAA;EAI1B,SAAAD,gBAAA,EAAc;IAAA,IAAAE,KAAA;IAAAC,eAAA,OAAAH,eAAA;IACZE,KAAA,GAAAE,UAAA,OAAAJ,eAAA;IAEAE,KAAA,CAAKG,WAAW,GAAG,wBAAwB;IAAA,OAAAH,KAAA;EAC7C;EAAAI,SAAA,CAAAN,eAAA,EAAAC,qBAAA;EAAA,OAAAM,YAAA,CAAAP,eAAA;IAAAQ,GAAA;IAAAC,KAAA,EAEA,SAAAC,QAAQA,CACNC,QAIS,EACT;MAEA,IAAI,CAACC,QAAQ,CAACpB,qBAAqB,GAAGA,qBAAqB;MAC3D,OAAAqB,aAAA,CAAAb,eAAA,wBAAsBW,QAAQ;IAChC;EAAA;AAAA,EApBmCpB,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}